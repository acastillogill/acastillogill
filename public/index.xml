<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ángela D. Castillo-Gill on Ángela D. Castillo-Gill</title>
    <link>/</link>
    <description>Recent content in Ángela D. Castillo-Gill on Ángela D. Castillo-Gill</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018 Ángela D. Castillo-Gill</copyright>
    <lastBuildDate>Wed, 20 Apr 2016 00:00:00 +0200</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Exploring Kiva loans</title>
      <link>/post/exploring-kiva-loans/</link>
      <pubDate>Sat, 07 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/exploring-kiva-loans/</guid>
      <description>&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#summary&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;1&lt;/span&gt; Summary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#purpose-of-this-post&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;2&lt;/span&gt; Purpose of this post&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#the-data&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;3&lt;/span&gt; The data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#what-i-did&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;4&lt;/span&gt; What I did&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#data-cleaning&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;5&lt;/span&gt; Data cleaning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#a.-missing-values&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;6&lt;/span&gt; a. Missing values&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#b.borrower_genders&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;7&lt;/span&gt; b.&lt;code&gt;borrower_genders&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#c.loan_amounts&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;8&lt;/span&gt; c.&lt;code&gt;loan_amounts&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#d.country_codes&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;9&lt;/span&gt; d.&lt;code&gt;country_codes&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#e.-dates&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;10&lt;/span&gt; e. Dates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#exploratory-data-analysis&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;11&lt;/span&gt; Exploratory data analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#factors&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;12&lt;/span&gt; Factors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#numeric-variables&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;13&lt;/span&gt; Numeric variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#what-i-found-out&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;14&lt;/span&gt; What I found out&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#conclusions&#34;&gt;&lt;span class=&#34;toc-section-number&#34;&gt;15&lt;/span&gt; Conclusions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;summary&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;1&lt;/span&gt; Summary&lt;/h1&gt;
&lt;/div&gt;
&lt;div id=&#34;purpose-of-this-post&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;2&lt;/span&gt; Purpose of this post&lt;/h1&gt;
&lt;p&gt;I’m learning machine learning with trees*. In order to practice the theory, nothing better than to put the learnings into a real case study and explain it. So, do you know &lt;a href=&#34;www.kiva.org&#34;&gt;Kiva&lt;/a&gt;? Kiva is a platform where everyone with access to internet and spare change can lend money to low-income entrepreneurs around the world. Pretty neat.&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;p&gt;this is cool&lt;/p&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;div id=&#34;the-data&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;3&lt;/span&gt; The data&lt;/h1&gt;
&lt;p&gt;The dataset &lt;a href=&#34;https://www.datacamp.com/courses/machine-learning-with-tree-based-models-in-r&#34;&gt;with which I was first introduced&lt;/a&gt; to regression trees was a dataset with lots of information on people who were given loans and whether they had defaulted on the loan or not. I thought that was a neat application so I went to &lt;a href=&#34;https://www.kaggle.com/datasets&#34;&gt;Kaggle&lt;/a&gt; to find datasets related to loans. Here is where I found the &lt;a href=&#34;https://www.kaggle.com/kiva/data-science-for-good-kiva-crowdfunding&#34;&gt;Kiva dataset&lt;/a&gt; I will use in this post.&lt;/p&gt;
&lt;p&gt;Of course the dataset was super tidy and ready to go when I saw it since the point was to learn the algorithms, not to clean the database. In this post, I’ll take you through everything I did, from the downloading of the data to the very last line of this post.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;what-i-did&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;4&lt;/span&gt; What I did&lt;/h1&gt;
&lt;p&gt;The first step was to have a look at the dataset. This is pretty exciting. The zip file (232.7 MB) from Kaggle contained four files: &lt;code&gt;kiva_loans.csv&lt;/code&gt;, &lt;code&gt;kiva_mpi_region_locations.csv&lt;/code&gt;,&lt;code&gt;loan_theme_ids.csv&lt;/code&gt;, and &lt;code&gt;loan_themes_by_region.csv&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;path &amp;lt;- &amp;quot;/Volumes/TOSHIBAEXT/RStudio/blog/content/post/kiva_data/&amp;quot;
#Read `kiva_loans.csv`
kiva_loans &amp;lt;- read_csv(paste(path,&amp;quot;kiva_loans.csv&amp;quot;,sep = &amp;quot;&amp;quot;))
#Read `kiva_mpi_region_locations.csv`
kiva_locations &amp;lt;- read_csv(paste(path,&amp;quot;kiva_mpi_region_locations.csv&amp;quot;,sep=&amp;quot;&amp;quot;))
#Read `loan_theme_ids.csv`
kiva_themes &amp;lt;- read_csv(paste(path,&amp;quot;loan_theme_ids.csv&amp;quot;,sep=&amp;quot;&amp;quot;))
#Read`loan_themes_by_region.csv`
kiva_locations_themes &amp;lt;- read_csv(paste(path,&amp;quot;loan_themes_by_region.csv&amp;quot;,sep=&amp;quot;&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s see what’s inside.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Get a glimpse of kiva_loans
glimpse(kiva_loans)
Observations: 671,205
Variables: 20
$ id                 &amp;lt;int&amp;gt; 653051, 653053, 653068, 653063, 653084, 108...
$ funded_amount      &amp;lt;dbl&amp;gt; 300, 575, 150, 200, 400, 250, 200, 400, 475...
$ loan_amount        &amp;lt;dbl&amp;gt; 300, 575, 150, 200, 400, 250, 200, 400, 475...
$ activity           &amp;lt;chr&amp;gt; &amp;quot;Fruits &amp;amp; Vegetables&amp;quot;, &amp;quot;Rickshaw&amp;quot;, &amp;quot;Transpo...
$ sector             &amp;lt;chr&amp;gt; &amp;quot;Food&amp;quot;, &amp;quot;Transportation&amp;quot;, &amp;quot;Transportation&amp;quot;,...
$ use                &amp;lt;chr&amp;gt; &amp;quot;To buy seasonal, fresh fruits to sell.&amp;quot;, &amp;quot;...
$ country_code       &amp;lt;chr&amp;gt; &amp;quot;PK&amp;quot;, &amp;quot;PK&amp;quot;, &amp;quot;IN&amp;quot;, &amp;quot;PK&amp;quot;, &amp;quot;PK&amp;quot;, &amp;quot;KE&amp;quot;, &amp;quot;IN&amp;quot;, &amp;quot;...
$ country            &amp;lt;chr&amp;gt; &amp;quot;Pakistan&amp;quot;, &amp;quot;Pakistan&amp;quot;, &amp;quot;India&amp;quot;, &amp;quot;Pakistan&amp;quot;...
$ region             &amp;lt;chr&amp;gt; &amp;quot;Lahore&amp;quot;, &amp;quot;Lahore&amp;quot;, &amp;quot;Maynaguri&amp;quot;, &amp;quot;Lahore&amp;quot;, ...
$ currency           &amp;lt;chr&amp;gt; &amp;quot;PKR&amp;quot;, &amp;quot;PKR&amp;quot;, &amp;quot;INR&amp;quot;, &amp;quot;PKR&amp;quot;, &amp;quot;PKR&amp;quot;, &amp;quot;KES&amp;quot;, &amp;quot;...
$ partner_id         &amp;lt;dbl&amp;gt; 247, 247, 334, 247, 245, NA, 334, 245, 245,...
$ posted_time        &amp;lt;dttm&amp;gt; 2014-01-01 06:12:39, 2014-01-01 06:51:08, ...
$ disbursed_time     &amp;lt;dttm&amp;gt; 2013-12-17 08:00:00, 2013-12-17 08:00:00, ...
$ funded_time        &amp;lt;dttm&amp;gt; 2014-01-02 10:06:32, 2014-01-02 09:17:23, ...
$ term_in_months     &amp;lt;dbl&amp;gt; 12, 11, 43, 11, 14, 4, 43, 14, 14, 11, 11, ...
$ lender_count       &amp;lt;int&amp;gt; 12, 14, 6, 8, 16, 6, 8, 8, 19, 24, 3, 16, 1...
$ tags               &amp;lt;chr&amp;gt; NA, NA, &amp;quot;user_favorite, user_favorite&amp;quot;, NA,...
$ borrower_genders   &amp;lt;chr&amp;gt; &amp;quot;female&amp;quot;, &amp;quot;female, female&amp;quot;, &amp;quot;female&amp;quot;, &amp;quot;fema...
$ repayment_interval &amp;lt;chr&amp;gt; &amp;quot;irregular&amp;quot;, &amp;quot;irregular&amp;quot;, &amp;quot;bullet&amp;quot;, &amp;quot;irregu...
$ date               &amp;lt;date&amp;gt; 2014-01-01, 2014-01-01, 2014-01-01, 2014-0...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Wow! 671,205 observations and 20 variables.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Get a glimpse of kiva_locations
glimpse(kiva_locations)
Observations: 2,772
Variables: 9
$ LocationName &amp;lt;chr&amp;gt; &amp;quot;Badakhshan, Afghanistan&amp;quot;, &amp;quot;Badghis, Afghanistan&amp;quot;...
$ ISO          &amp;lt;chr&amp;gt; &amp;quot;AFG&amp;quot;, &amp;quot;AFG&amp;quot;, &amp;quot;AFG&amp;quot;, &amp;quot;AFG&amp;quot;, &amp;quot;AFG&amp;quot;, &amp;quot;AFG&amp;quot;, &amp;quot;AFG&amp;quot;, ...
$ country      &amp;lt;chr&amp;gt; &amp;quot;Afghanistan&amp;quot;, &amp;quot;Afghanistan&amp;quot;, &amp;quot;Afghanistan&amp;quot;, &amp;quot;Afg...
$ region       &amp;lt;chr&amp;gt; &amp;quot;Badakhshan&amp;quot;, &amp;quot;Badghis&amp;quot;, &amp;quot;Baghlan&amp;quot;, &amp;quot;Balkh&amp;quot;, &amp;quot;Bam...
$ world_region &amp;lt;chr&amp;gt; &amp;quot;South Asia&amp;quot;, &amp;quot;South Asia&amp;quot;, &amp;quot;South Asia&amp;quot;, &amp;quot;South ...
$ MPI          &amp;lt;dbl&amp;gt; 0.387, 0.466, 0.300, 0.301, 0.325, 0.313, 0.319, ...
$ geo          &amp;lt;chr&amp;gt; &amp;quot;(36.7347725, 70.81199529999999)&amp;quot;, &amp;quot;(35.1671339, ...
$ lat          &amp;lt;dbl&amp;gt; 36.73477, 35.16713, 35.80429, 36.75506, 34.81001,...
$ lon          &amp;lt;dbl&amp;gt; 70.81200, 63.76954, 69.28775, 66.89754, 67.82121,...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It seems that this set is dedicated to showing the specific region but has 2,772. It doesn’t match the first dataset. I assume this dataset is related to the Kaggle contest related to the dataset.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Get a glimpse of kiva_themes
glimpse(kiva_themes)
Observations: 779,092
Variables: 4
$ id                &amp;lt;int&amp;gt; 638631, 640322, 641006, 641019, 641594, 6422...
$ `Loan Theme ID`   &amp;lt;chr&amp;gt; &amp;quot;a1050000000skGl&amp;quot;, &amp;quot;a1050000000skGl&amp;quot;, &amp;quot;a1050...
$ `Loan Theme Type` &amp;lt;chr&amp;gt; &amp;quot;General&amp;quot;, &amp;quot;General&amp;quot;, &amp;quot;Higher Education&amp;quot;, &amp;quot;H...
$ `Partner ID`      &amp;lt;dbl&amp;gt; 151, 151, 160, 160, 336, 217, 57, 217, 133, ...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It seems that this dataset could be linking the first one with a particular larger &lt;code&gt;theme&lt;/code&gt;, as defined by Kiva.&lt;/p&gt;
&lt;p&gt;Finally, the last one.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Get a glimpse of kiva_locations_themes
glimpse(kiva_locations_themes)
Observations: 15,736
Variables: 21
$ `Partner ID`         &amp;lt;int&amp;gt; 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,...
$ `Field Partner Name` &amp;lt;chr&amp;gt; &amp;quot;KREDIT Microfinance Institution&amp;quot;, &amp;quot;KREDI...
$ sector               &amp;lt;chr&amp;gt; &amp;quot;General Financial Inclusion&amp;quot;, &amp;quot;General F...
$ `Loan Theme ID`      &amp;lt;chr&amp;gt; &amp;quot;a1050000000slfi&amp;quot;, &amp;quot;a10500000068jPe&amp;quot;, &amp;quot;a1...
$ `Loan Theme Type`    &amp;lt;chr&amp;gt; &amp;quot;Higher Education&amp;quot;, &amp;quot;Vulnerable Populatio...
$ country              &amp;lt;chr&amp;gt; &amp;quot;Cambodia&amp;quot;, &amp;quot;Cambodia&amp;quot;, &amp;quot;Cambodia&amp;quot;, &amp;quot;Camb...
$ forkiva              &amp;lt;chr&amp;gt; &amp;quot;No&amp;quot;, &amp;quot;No&amp;quot;, &amp;quot;No&amp;quot;, &amp;quot;No&amp;quot;, &amp;quot;No&amp;quot;, &amp;quot;No&amp;quot;, &amp;quot;No&amp;quot;,...
$ region               &amp;lt;chr&amp;gt; &amp;quot;Banteay Meanchey&amp;quot;, &amp;quot;Battambang Province&amp;quot;...
$ geocode_old          &amp;lt;chr&amp;gt; &amp;quot;(13.75, 103.0)&amp;quot;, NA, NA, &amp;quot;(12.0, 105.5)&amp;quot;...
$ ISO                  &amp;lt;chr&amp;gt; &amp;quot;KHM&amp;quot;, &amp;quot;KHM&amp;quot;, &amp;quot;KHM&amp;quot;, &amp;quot;KHM&amp;quot;, &amp;quot;KHM&amp;quot;, &amp;quot;KHM&amp;quot;,...
$ number               &amp;lt;int&amp;gt; 1, 58, 7, 1383, 3, 36, 2, 249, 7, 18, 890...
$ amount               &amp;lt;int&amp;gt; 450, 20275, 9150, 604950, 275, 62225, 130...
$ LocationName         &amp;lt;chr&amp;gt; &amp;quot;Banteay Meanchey, Cambodia&amp;quot;, &amp;quot;Battambang...
$ geocode              &amp;lt;chr&amp;gt; &amp;quot;[(13.6672596, 102.8975098)]&amp;quot;, &amp;quot;[(13.0286...
$ names                &amp;lt;chr&amp;gt; &amp;quot;Banteay Meanchey Province; Cambodia&amp;quot;, &amp;quot;B...
$ geo                  &amp;lt;chr&amp;gt; &amp;quot;(13.6672596, 102.8975098)&amp;quot;, &amp;quot;(13.0286971...
$ lat                  &amp;lt;dbl&amp;gt; 13.66726, 13.02870, 13.02870, 12.09829, 1...
$ lon                  &amp;lt;dbl&amp;gt; 102.8975, 102.9896, 102.9896, 105.3131, 1...
$ mpi_region           &amp;lt;chr&amp;gt; &amp;quot;Banteay Mean Chey, Cambodia&amp;quot;, &amp;quot;Banteay M...
$ mpi_geo              &amp;lt;chr&amp;gt; &amp;quot;(13.6672596, 102.8975098)&amp;quot;, &amp;quot;(13.6672596...
$ rural_pct            &amp;lt;dbl&amp;gt; 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 9...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It seems that this dataset contains more georeferenced information. Since I’m interested in &lt;strong&gt;learning what variables contribute to the final amount lended without specific geographic information, (country is enough)&lt;/strong&gt;, I’m going to stick with the first dataset, &lt;code&gt;kiva_loans&lt;/code&gt;. I’m tempted to jump into a regression of sorts, but first, let’s have a closer look at the data to understand the variables and decide which ones are most helpful.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;funded_amount&lt;/code&gt;: “The amount disbursed by Kiva to the field agent(USD)”&lt;/li&gt;
&lt;li&gt;&lt;code&gt;loan_amount&lt;/code&gt;: “The amount disbursed by the field agent to the borrower(USD)”&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here, I am interested in the latter of those two variables as my response variable.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;activity&lt;/code&gt;: “More granular category”&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sector&lt;/code&gt;: “High level category”&lt;/li&gt;
&lt;li&gt;&lt;code&gt;use&lt;/code&gt;: “Exact usage of loan amount”&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;From these, I am going to pick &lt;code&gt;sector&lt;/code&gt; because at first, I want to see if I can treat it like a factor in our regressions. The other ones are perhaps to specific to create levels.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;country_code&lt;/code&gt;: “ISO country code of country in which loan was disbursed”&lt;/li&gt;
&lt;li&gt;&lt;code&gt;country&lt;/code&gt;: “Full country name of country in which loan was disbursed”&lt;/li&gt;
&lt;li&gt;&lt;code&gt;region&lt;/code&gt;: “Full region name within the country”&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I’m going to stick with &lt;code&gt;country_code&lt;/code&gt; to make a factor with each country as a level.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;currency&lt;/code&gt;: “The currency in which the loan was disbursed”&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Super important! In order to compare all loans, we need to translate them into the same currency.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;partner_id&lt;/code&gt;: “ID of partner organization”&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This variable has a lot of missing values and the Kiva explanation on Kaggle doesn’t go much further. For now, I will exclude &lt;code&gt;partner_id&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;posted_time&lt;/code&gt;: “The time at which the loan is posted on Kiva by the field agent”&lt;/li&gt;
&lt;li&gt;&lt;code&gt;disbursed_time&lt;/code&gt;: “The time at which the loan is disbursed by the field agent to the borrower”&lt;/li&gt;
&lt;li&gt;&lt;code&gt;funded_time&lt;/code&gt;: “The time at which the loan posted to Kiva gets funded by lenders completely”&lt;/li&gt;
&lt;li&gt;&lt;code&gt;term_in_months&lt;/code&gt;: “The duration for which the loan was disbursed in months”&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lender_count&lt;/code&gt;: “The total number of lenders that contributed to this loan”&lt;/li&gt;
&lt;li&gt;&lt;code&gt;borrower_genders&lt;/code&gt;: “Comma separated M,F letters, where each instance represents a single male/female in the group”&lt;/li&gt;
&lt;li&gt;&lt;code&gt;repayment_interval&lt;/code&gt;: Not specified so we’ll assume that it means the standard definition of when the loan is repaid back to the lender.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I’m including all in this last batch, they provide specific information for each loan which may prove useful later. Now let’s create a new dataset with the selected variables with a few changes.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;data-cleaning&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;5&lt;/span&gt; Data cleaning&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Select variables 
kiva_loans %&amp;gt;%
  dplyr::select (id,
          loan_amount,
          sector,
          country_code,
          currency,
          posted_time,
          disbursed_time,
          term_in_months,
          lender_count,
          borrower_genders,
          repayment_interval,
          funded_time) -&amp;gt; kiva_loans

#Convert country_code, sector, currency, borrower_genders, and repayment_interval to factors.
categorical &amp;lt;- c(&amp;quot;sector&amp;quot;,
                 &amp;quot;country_code&amp;quot;,
                 &amp;quot;currency&amp;quot;,
                 &amp;quot;borrower_genders&amp;quot;,
                 &amp;quot;repayment_interval&amp;quot;)

kiva_loans[categorical] &amp;lt;- lapply(kiva_loans[categorical],
                                  factor)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;By having another glimpse at the structure of our data, we can soon see there are a few bits that don’t make sense and need to be fixed.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(kiva_loans)
       id           loan_amount                sector      
 Min.   : 653047   Min.   :    25.0   Agriculture :180302  
 1st Qu.: 823072   1st Qu.:   275.0   Food        :136657  
 Median : 992780   Median :   500.0   Retail      :124494  
 Mean   : 993249   Mean   :   842.4   Services    : 45140  
 3rd Qu.:1163653   3rd Qu.:  1000.0   Personal Use: 36385  
 Max.   :1340339   Max.   :100000.0   Housing     : 33731  
                                      (Other)     :114496  
  country_code       currency       posted_time                 
 PH     :160441   PHP    :160440   Min.   :2014-01-01 04:49:26  
 KE     : 75825   USD    :105494   1st Qu.:2014-12-17 13:02:38  
 SV     : 39875   KES    : 75311   Median :2015-11-20 15:46:13  
 KH     : 34836   KHR    : 29498   Mean   :2015-11-10 09:21:01  
 PK     : 26857   PKR    : 26856   3rd Qu.:2016-10-06 07:24:48  
 (Other):333363   COP    : 21984   Max.   :2017-07-26 06:31:46  
 NA&amp;#39;s   :     8   (Other):251622                                
 disbursed_time                term_in_months    lender_count    
 Min.   :2013-12-02 08:00:00   Min.   :  1.00   Min.   :   0.00  
 1st Qu.:2014-12-08 08:00:00   1st Qu.:  8.00   1st Qu.:   7.00  
 Median :2015-11-06 08:00:00   Median : 13.00   Median :  13.00  
 Mean   :2015-10-26 21:57:55   Mean   : 13.74   Mean   :  20.59  
 3rd Qu.:2016-09-21 07:00:00   3rd Qu.: 14.00   3rd Qu.:  24.00  
 Max.   :2017-09-30 07:00:00   Max.   :158.00   Max.   :2986.00  
 NA&amp;#39;s   :2396                                                    
                       borrower_genders  repayment_interval
 female                        :426502   bullet   : 70728  
 male                          :134710   irregular:257158  
 female, female                : 12164   monthly  :342717  
 female, female, female        : 11676   weekly   :   602  
 female, female, female, female:  9052                     
 (Other)                       : 72880                     
 NA&amp;#39;s                          :  4221                     
  funded_time                 
 Min.   :2014-01-01 12:18:55  
 1st Qu.:2014-12-29 13:13:00  
 Median :2015-12-01 11:56:11  
 Mean   :2015-11-19 07:44:52  
 3rd Qu.:2016-10-17 22:12:47  
 Max.   :2017-07-26 02:09:43  
 NA&amp;#39;s   :48331                &lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;a.-missing-values&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;6&lt;/span&gt; a. Missing values&lt;/h1&gt;
&lt;p&gt;Missing values, aka &lt;code&gt;NA&#39;s&lt;/code&gt;, we could simply remove them since we have plenty of observations. But what if by removing them we introduce some bias. For example, &lt;code&gt;borrower_genders&lt;/code&gt; has plenty of missing values, but what if this could say something about certain types of loans. For now we will leave them in.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;b.borrower_genders&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;7&lt;/span&gt; b.&lt;code&gt;borrower_genders&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;From the variable descriptions, we expected &lt;code&gt;borrower_genders&lt;/code&gt;to have only two levels, &lt;code&gt;male&lt;/code&gt;or &lt;code&gt;female&lt;/code&gt;. Here we see there are many more levels, 11,298 to be precise. We know something is wrong here. So we’ll fix that first.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Turn kiva_loans back into an atomic vector of characters
kiva_loans$borrower_genders &amp;lt;- as.character(kiva_loans$borrower_genders)

#Split each row into multiple strings
genders &amp;lt;- str_split(kiva_loans$borrower_genders, &amp;quot;, &amp;quot;)

#Assign 1 for female and 0 for male
females_count &amp;lt;- lapply(genders, str_count, pattern=&amp;quot;female&amp;quot;)

#Count how many females are in each list element
females_sum &amp;lt;- lapply(females_count, sum)

#Create a function that takes the two lists just made
compare_genders &amp;lt;- function(females_count, females_sum){
  
  #Set &amp;quot;single_female&amp;quot; when female sum and length is 1
  ifelse (females_sum==1&amp;amp;&amp;amp;length(females_count)==1, &amp;quot;single_female&amp;quot;,
          
  #Set &amp;quot;mult_females&amp;quot; when female sum and length females_count is the same and different to zero
  ifelse(females_sum==length(females_count)&amp;amp;&amp;amp;females_sum!=0,&amp;quot;mult_females&amp;quot;,
         
  #Set &amp;quot;single_male&amp;quot; #Set &amp;quot;mult_males&amp;quot; when female sum is zero and the count of individuals is 1
  ifelse(females_sum==0&amp;amp;&amp;amp;length(females_count)==1,&amp;quot;single_male&amp;quot;,
         
  #Set &amp;quot;mult_males&amp;quot; when female sum is zero and the count of individuals is greater than 1
  ifelse(females_sum==0&amp;amp;&amp;amp;length(females_count)&amp;gt;1,&amp;quot;mult_males&amp;quot;,
         
  #Set &amp;quot;mixed_genders&amp;quot; when the sum of females is different to the count of individual       
  ifelse(females_sum!=length(females_count),&amp;quot;mixed_genders&amp;quot;,&amp;quot;strange&amp;quot;)))))
  
}
#Apply function compare_genders
kiva_loans$borrower_genders &amp;lt;- mapply(compare_genders,females_count,females_sum)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s see if all is well…&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Make kiva_loans$borrower_genders a factor again
kiva_loans$borrower_genders &amp;lt;- as.factor(kiva_loans$borrower_genders)

#Check levels
levels(kiva_loans$borrower_genders)
[1] &amp;quot;mixed_genders&amp;quot; &amp;quot;mult_females&amp;quot;  &amp;quot;mult_males&amp;quot;    &amp;quot;single_female&amp;quot;
[5] &amp;quot;single_male&amp;quot;  &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Nothing &lt;code&gt;strange&lt;/code&gt;! Five levels as we wanted - fabulous! Onwards.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;c.loan_amounts&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;8&lt;/span&gt; c.&lt;code&gt;loan_amounts&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;Now, since we’re trying to predict &lt;code&gt;loan_amounts&lt;/code&gt;, it’s better if they’re all in the same currency. Shall we translate them to USD? Here we go!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;for (curr in levels(kiva_loans$currency))
  
  #Check that all currencies do not return any errors when requesting a currency conversion
  tryCatch(quantmod::getQuote(paste0(curr, &amp;quot;=X&amp;quot;)), error = print)
&amp;lt;simpleError in download.file(paste0(&amp;quot;https://query1.finance.yahoo.com/v7/finance/quote?symbols=&amp;quot;,     Symbols, &amp;quot;&amp;amp;fields=&amp;quot;, QFc), destfile = tmp, quiet = TRUE): cannot open URL &amp;#39;https://query1.finance.yahoo.com/v7/finance/quote?symbols=SSP=X&amp;amp;fields=regularMarketPrice,regularMarketChange,regularMarketChangePercent,regularMarketOpen,regularMarketDayHigh,regularMarketDayLow,regularMarketVolume&amp;#39;&amp;gt;
&amp;lt;simpleError in download.file(paste0(&amp;quot;https://query1.finance.yahoo.com/v7/finance/quote?symbols=&amp;quot;,     Symbols, &amp;quot;&amp;amp;fields=&amp;quot;, QFc), destfile = tmp, quiet = TRUE): cannot open URL &amp;#39;https://query1.finance.yahoo.com/v7/finance/quote?symbols=ZWD=X&amp;amp;fields=regularMarketPrice,regularMarketChange,regularMarketChangePercent,regularMarketOpen,regularMarketDayHigh,regularMarketDayLow,regularMarketVolume&amp;#39;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It seems like two currencies are returning an error. Let’s filter them out.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Turning kiva_loans back into a character vector
kiva_loans$currency &amp;lt;- as.character(kiva_loans$currency)

kiva_loans%&amp;gt;%
  #Filter out &amp;quot;SSP&amp;quot;
  dplyr::filter(currency!=&amp;quot;SSP&amp;quot;)%&amp;gt;% 
  
  #Filter out &amp;quot;ZWD&amp;quot;
  filter(currency!=&amp;quot;ZWD&amp;quot;)-&amp;gt;kiva_loans 

#Turn kiva_loans$currency back into a factor
kiva_loans$currency &amp;lt;- as.factor(kiva_loans$currency) 

#Store all levels as vector `from`
from &amp;lt;- as.vector(levels(kiva_loans$currency)) 

#Create a vector `to` with requested currency &amp;quot;USD&amp;quot;
to &amp;lt;- rep(length(levels(kiva_loans$currency)),x=&amp;quot;USD&amp;quot;) 

#Create a dataframe `currencies` with conversion rates `Last`
currencies &amp;lt;- quantmod::getQuote(paste0(from, to, &amp;quot;=X&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Set row names as columns in the currencies dataframe
currencies &amp;lt;- rownames_to_column(currencies)

#Split currencies$rownames by extracting the first 3 characters
currencies$currency &amp;lt;-  substring(currencies$rowname, 1,3)

kiva_loans%&amp;gt;%
  #Join currencies to kiva_loans by=&amp;quot;currency&amp;quot;
  left_join(currencies, by=&amp;quot;currency&amp;quot;) -&amp;gt; kiva_loans

kiva_loans%&amp;gt;%
  #Convert the loan from its original currency to USD
  mutate(loan_usd=loan_amount*Last)-&amp;gt; kiva_loans&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;d.country_codes&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;9&lt;/span&gt; d.&lt;code&gt;country_codes&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;Finally, with 86 countries, we have 86 levels. Perhaps it would be interesting to create another category called continent to produce less levels and have a better understanding of the overall function of regional distributions.&lt;/p&gt;
&lt;p&gt;Our country codes are in the ISO3166 format, so we will use the associated continent code found &lt;a href=&#34;https://dev.maxmind.com/geoip/legacy/codes/country_continent/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Read `country_continent.csv`
continents &amp;lt;- read_csv(paste(path,&amp;quot;country_continent.csv&amp;quot;,sep = &amp;quot;&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We will do what we previously did for currencies, which is to join both tables.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;kiva_loans%&amp;gt;%
  #Join currencies to kiva_loans by=&amp;quot;country_code&amp;quot;
  left_join(continents, by=&amp;quot;country_code&amp;quot;) -&amp;gt; kiva_loans&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s see what happened…&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;kiva_loans$continent &amp;lt;- as.factor(kiva_loans$continent)
levels(kiva_loans$continent)
[1] &amp;quot;AF&amp;quot; &amp;quot;AS&amp;quot; &amp;quot;EU&amp;quot; &amp;quot;OC&amp;quot; &amp;quot;SA&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;5 continents! Africa, Asia, Europe, Oceania, and South America. Granted, we’ve lost spacial resolution. However, for our initial purpose, this is exactly what we wanted.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;e.-dates&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;10&lt;/span&gt; e. Dates&lt;/h1&gt;
&lt;p&gt;Dates aren’t numeric, but we can make them. Let’s calculate two lengths of time that I think are interesting.
First, how much time passes from the moment the loan is posted to the moment it’s disbursed (&lt;code&gt;total_time&lt;/code&gt;). Second, how long does a loan take to get funded (&lt;code&gt;giving_time&lt;/code&gt;)? Let’s find out!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;kiva_loans%&amp;gt;%
  mutate(total_time_num=as.numeric(difftime(posted_time,
                                            disbursed_time,
                                            units = &amp;quot;days&amp;quot;)),
         giving_time_num=as.numeric(difftime(funded_time,
                                             posted_time,
                                             units = &amp;quot;days&amp;quot;))) -&amp;gt;kiva_loans&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Final selection of variables…&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Select variables 
kiva_loans %&amp;gt;%
  dplyr::select (id,
          loan_usd,
          sector,
          continent,
          term_in_months,
          lender_count,
          borrower_genders,
          repayment_interval,
          total_time_num,
          giving_time_num,
          country_code,
          posted_time,
          funded_time,
          disbursed_time)%&amp;gt;%
  arrange(posted_time)-&amp;gt; kiva_loans
kiva_loans$country_code &amp;lt;- as.factor(kiva_loans$country_code)
kiva_loans$id &amp;lt;- as.character(kiva_loans$id)
#Skim the dataset
skim(kiva_loans)
Skim summary statistics
 n obs: 671044 
 n variables: 14 

── Variable type:character ─────────────────────────────────────────────────────
 variable missing complete      n min max empty n_unique
       id       0   671044 671044   6   7     0   671044

── Variable type:factor ────────────────────────────────────────────────────────
           variable missing complete      n n_unique
   borrower_genders    4184   666860 671044        5
          continent   84856   586188 671044        5
       country_code       8   671036 671044       86
 repayment_interval       0   671044 671044        4
             sector       0   671044 671044       15
                                        top_counts ordered
  sin: 426432, sin: 134657, mul: 61578, mix: 40380   FALSE
      AS: 321434, AF: 172876, NA: 84856, SA: 78975   FALSE
       PH: 160441, KE: 75825, SV: 39875, KH: 34836   FALSE
    mon: 342679, irr: 257035, bul: 70728, wee: 602   FALSE
 Agr: 180289, Foo: 136621, Ret: 124433, Ser: 45127   FALSE

── Variable type:integer ───────────────────────────────────────────────────────
     variable missing complete      n  mean    sd p0 p25 p50 p75 p100
 lender_count       0   671044 671044 20.59 28.46  0   7  13  24 2986
     hist
 ▇▁▁▁▁▁▁▁

── Variable type:numeric ───────────────────────────────────────────────────────
        variable missing complete      n   mean     sd        p0  p25
 giving_time_num   48331   622713 671044  14.64  14.4   -17.51   5.17
        loan_usd       0   671044 671044 267.28 946.97    0.0022 1.74
  term_in_months       0   671044 671044  13.74   8.6     1      8   
  total_time_num    2396   668648 671044  14.09  18.56 -427.02   7.09
   p50   p75     p100     hist
  9.59 22.54   420.57 ▇▁▁▁▁▁▁▁
  5.14 90.47 1e+05    ▇▁▁▁▁▁▁▁
 13    14      158    ▇▁▁▁▁▁▁▁
 16.12 26.67    32.04 ▁▁▁▁▁▁▁▇

── Variable type:POSIXct ───────────────────────────────────────────────────────
       variable missing complete      n        min        max     median
 disbursed_time    2396   668648 671044 2013-12-02 2017-09-30 2015-11-07
    funded_time   48331   622713 671044 2014-01-01 2017-07-26 2015-12-01
    posted_time       0   671044 671044 2014-01-01 2017-07-26 2015-11-20
 n_unique
     5719
   497868
   667240&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;exploratory-data-analysis&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;11&lt;/span&gt; Exploratory data analysis&lt;/h1&gt;
&lt;p&gt;Now let’s describe the data. We could jump into the regression trees but exploring the data will help us interpret our predictions better. Do some extra work now and enjoy the benefits later.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;factors&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;12&lt;/span&gt; Factors&lt;/h1&gt;
&lt;p&gt;Let’s make two-way tables to understand our factors.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;prop.table(table(kiva_loans$borrower_genders))

mixed_genders  mult_females    mult_males single_female   single_male 
  0.060552440   0.092340221   0.005717842   0.639462556   0.201926941 
prop.table(table(kiva_loans$continent))

         AF          AS          EU          OC          SA 
0.294915624 0.548346264 0.008440978 0.013570732 0.134726402 
prop.table(table(kiva_loans$repayment_interval))

      bullet    irregular      monthly       weekly 
0.1053999440 0.3830374759 0.5106654705 0.0008971096 
prop.table(table(kiva_loans$sector))

   Agriculture           Arts       Clothing   Construction      Education 
  0.2686694166   0.0179690154   0.0487807059   0.0093376887   0.0462071042 
 Entertainment           Food         Health        Housing  Manufacturing 
  0.0012368787   0.2035946972   0.0137338237   0.0502485679   0.0092497660 
  Personal Use         Retail       Services Transportation      Wholesale 
  0.0542214818   0.1854319538   0.0672489434   0.0231251602   0.0009447965 &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can see that most of the loans are requested by single females, that the least amount of loans are given in the EU, that weekly repayment is an unpopular form of paying the loan back and that entertainment, wholesale, manufacturing, and construction amount less than 2.2% of sectors. Let’s remove these categories that are not representative of the data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;kiva_loans &amp;lt;-  kiva_loans%&amp;gt;%
  filter(continent!=&amp;quot;EU&amp;quot;,
         repayment_interval!=&amp;quot;weekly&amp;quot;,
         sector!=&amp;quot;Construction&amp;quot;&amp;amp;
          sector!=&amp;quot;Entertainment&amp;quot;&amp;amp;
           sector!= &amp;quot;Manufacturing&amp;quot;&amp;amp;
            sector!= &amp;quot;Wholesale&amp;quot;)%&amp;gt;%
  droplevels()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ideal. Now let’s look at our factors in an easier way to parse. Let’s compare genders by continents to see if we can spot anything worth noting.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Create side-by-side barchart of borrower_genders by continent
ggplot(kiva_loans, aes(x = continent, fill = borrower_genders)) + 
  geom_bar(position = &amp;quot;dodge&amp;quot;) +theme_classic()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-07-09-exploring-kiva-loans_files/figure-html/continent_and_borrower_genders_plots-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;In all continents, single females request the most loans followed by single males. In Asia and South America, the third category is multiple females while in Africa it’s mixed genders.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;
# Create side-by-side barchart of repayment interval by continent
ggplot(kiva_loans, aes(x = continent, fill = repayment_interval)) + 
  geom_bar(position = &amp;quot;dodge&amp;quot;)+ theme_classic()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-07-09-exploring-kiva-loans_files/figure-html/repayment_interval_and_continent-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;In Asia and Oceania, the most popular repayment interval is irregular while in Africa and South America it’s monthly.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;
# Create side-by-side barchart of sector by continent
ggplot(kiva_loans, aes(x = continent, fill = sector)) + 
  geom_bar(position = &amp;quot;dodge&amp;quot;)+ theme_classic()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-07-09-exploring-kiva-loans_files/figure-html/sectors_and_continents-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;In every continent, the three most popular sectors are agriculture, retail, and food.&lt;/p&gt;
&lt;p&gt;Finally, we still would like to understand what countries are most represented and which ones, less so. Let’s have a look.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;na.omit(kiva_loans)%&amp;gt;%
  group_by(country_code)%&amp;gt;%
  dplyr::summarize(country_count=n())%&amp;gt;%
  arrange(desc(country_count))%&amp;gt;%
  top_n(20)%&amp;gt;%
  ggplot(aes(x=reorder(country_code,country_count),y=country_count))+
  geom_col(position=&amp;quot;dodge&amp;quot;,
           color = &amp;quot;black&amp;quot;,
           fill=&amp;quot;purple&amp;quot;)+
  coord_flip()+
    theme_minimal()+
 theme(axis.title.y=element_blank())&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-07-09-exploring-kiva-loans_files/figure-html/countries_plot-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;numeric-variables&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;13&lt;/span&gt; Numeric variables&lt;/h1&gt;
&lt;p&gt;Now let’s look at the distributions of our numeric variables.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(kiva_loans,aes(x=loan_usd))+
  geom_density()+
  theme_classic()+
  scale_x_continuous(limits=c(0,15))+
  geom_vline(xintercept = median(kiva_loans$loan_usd),
             color=&amp;quot;red&amp;quot;,
              linetype=&amp;quot;dashed&amp;quot;)+
  annotate(&amp;quot;text&amp;quot;,
           label=paste(&amp;quot;Median =&amp;quot;,
                       round(median(kiva_loans$loan_usd),digits = 2),&amp;quot;USD&amp;quot;),
                x=median(kiva_loans$loan_usd),
                y=0.2,
           color=&amp;quot;red&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-07-09-exploring-kiva-loans_files/figure-html/loan_usd_distribution-1.png&#34; width=&#34;672&#34; /&gt;
The median loan in US dollars is 4.19. The distribution is multimodal and right-skewed with its biggest peak around $1 and its second around $4.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(kiva_loans,
       aes(x=term_in_months))+
  geom_density()+
  theme_classic()+
  scale_x_continuous(limits=c(0,50))+
  geom_vline(xintercept = median(kiva_loans$term_in_months),
             color=&amp;quot;red&amp;quot;,
             linetype=&amp;quot;dashed&amp;quot;)+
  annotate(&amp;quot;text&amp;quot;,
           label=paste(&amp;quot;Median =&amp;quot;,
                              median(kiva_loans$term_in_months),&amp;quot;months&amp;quot;),
                x=18,
                y=0.2,
           color=&amp;quot;red&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-07-09-exploring-kiva-loans_files/figure-html/term_in_months_distribution-1.png&#34; width=&#34;672&#34; /&gt;
The loan term in months is a bimodal distribution with its first peak around 8 months and its second around 12, the median.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(kiva_loans,
       aes(x=lender_count))+
  geom_histogram()+
   theme_classic()+
  scale_x_continuous(limits=c(0,100))+
  geom_vline(xintercept = median(kiva_loans$lender_count),
             color=&amp;quot;red&amp;quot;,
             linetype=&amp;quot;dashed&amp;quot;)+
  annotate(&amp;quot;text&amp;quot;,
           label=paste(&amp;quot;Median=&amp;quot;,
                              median(kiva_loans$lender_count),&amp;quot;lenders&amp;quot;),
                x=21,
                y=150000,
           color=&amp;quot;red&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-07-09-exploring-kiva-loans_files/figure-html/lender_count-1.png&#34; width=&#34;672&#34; /&gt;
The lender count has a text book right-skewed distribution with a median of 12 lenders.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(kiva_loans,
       aes(x=giving_time_num))+
  geom_density()+
   theme_classic()+
  scale_x_continuous(limits=c(0,50))+
  geom_vline(xintercept = median(kiva_loans$giving_time_num,na.rm=TRUE),
             color=&amp;quot;red&amp;quot;,
             linetype=&amp;quot;dashed&amp;quot;)+
  annotate(&amp;quot;text&amp;quot;,
           label=paste(&amp;quot;Median=&amp;quot;,
                       round(median(kiva_loans$giving_time_num,na.rm = TRUE)),digits=2,&amp;quot;days&amp;quot;),
           x=median(kiva_loans$giving_time_num,na.rm=TRUE)+5,
           y=0.1,
           color=&amp;quot;red&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-07-09-exploring-kiva-loans_files/figure-html/giving_time-1.png&#34; width=&#34;672&#34; /&gt;
The median time between posting the loan and the loan being fully funded is about 9.2 days. It is a bimodal distribution with its first peak around 6 days and its second peak around 30 days.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(kiva_loans,
       aes(x=total_time_num))+
  geom_density()+
   theme_classic()+
  scale_x_continuous(limits=c(0,50))+
  geom_vline(xintercept = median(kiva_loans$total_time_num,
                                 na.rm=TRUE),
             color=&amp;quot;red&amp;quot;,
             linetype=&amp;quot;dashed&amp;quot;)+
  annotate(&amp;quot;text&amp;quot;,
           label=paste(&amp;quot;Median=&amp;quot;,
                       round(median(kiva_loans$total_time_num,
                                    na.rm = TRUE)),digits=2,&amp;quot;days&amp;quot;),
           x=15+5,
           y=0.1,
           color=&amp;quot;red&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-07-09-exploring-kiva-loans_files/figure-html/total_time-1.png&#34; width=&#34;672&#34; /&gt;
The total time between posting the loan and it being disbursed has a funky looking multimodal distribution. It seems to be cut off at 30 days with peaks at 7, 14, 21 and 30 days. Median time is 17.2 days.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;what-i-found-out&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;14&lt;/span&gt; What I found out&lt;/h1&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusions&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;span class=&#34;header-section-number&#34;&gt;15&lt;/span&gt; Conclusions&lt;/h1&gt;
&lt;p&gt;*LOL. Read that again outloud and laugh at the jargon put together in one short sentence.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Privacy Policy</title>
      <link>/privacy/</link>
      <pubDate>Thu, 28 Jun 2018 00:00:00 +0200</pubDate>
      
      <guid>/privacy/</guid>
      <description>&lt;p&gt;&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Example Talk</title>
      <link>/talk/example-talk/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 +0100</pubDate>
      
      <guid>/talk/example-talk/</guid>
      <description>&lt;p&gt;Embed your slides or video here using &lt;a href=&#34;https://sourcethemes.com/academic/post/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;shortcodes&lt;/a&gt;. Further details can easily be added using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Deep Learning</title>
      <link>/project/deep-learning/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0200</pubDate>
      
      <guid>/project/deep-learning/</guid>
      <description>&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;

&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;

&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;

&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;

&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>External Project</title>
      <link>/project/example-external-project/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0200</pubDate>
      
      <guid>/project/example-external-project/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Academic: the website designer for Hugo</title>
      <link>/post/getting-started/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 +0200</pubDate>
      
      <guid>/post/getting-started/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;Academic&lt;/strong&gt; is a framework to help you create a beautiful website quickly. Perfect for personal sites, blogs, or business/project sites. &lt;a href=&#34;https://themes.gohugo.io/theme/academic/&#34; target=&#34;_blank&#34;&gt;Check out the latest demo&lt;/a&gt; of what you&amp;rsquo;ll get in less than 10 minutes. Then head on over to the &lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34; target=&#34;_blank&#34;&gt;Quick Start guide&lt;/a&gt; or take a look at the &lt;a href=&#34;https://sourcethemes.com/academic/updates/&#34; target=&#34;_blank&#34;&gt;Release Notes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/gcushen/hugo-academic/&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/academic.png&#34; alt=&#34;Screenshot&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Key features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Easily manage various content including homepage, blog posts, publications, talks, and projects&lt;/li&gt;
&lt;li&gt;Extensible via &lt;strong&gt;color themes&lt;/strong&gt; and &lt;strong&gt;widgets/plugins&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Write in &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;Markdown&lt;/a&gt; for easy formatting and code highlighting, with &lt;a href=&#34;https://en.wikibooks.org/wiki/LaTeX/Mathematics&#34; target=&#34;_blank&#34;&gt;LaTeX&lt;/a&gt; for mathematical expressions&lt;/li&gt;
&lt;li&gt;Social/academic network linking, &lt;a href=&#34;https://analytics.google.com&#34; target=&#34;_blank&#34;&gt;Google Analytics&lt;/a&gt;, and &lt;a href=&#34;https://disqus.com&#34; target=&#34;_blank&#34;&gt;Disqus&lt;/a&gt; comments&lt;/li&gt;
&lt;li&gt;Responsive and mobile friendly&lt;/li&gt;
&lt;li&gt;Simple and refreshing one page design&lt;/li&gt;
&lt;li&gt;Multilingual and easy to customize&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;color-themes&#34;&gt;Color Themes&lt;/h2&gt;

&lt;p&gt;Academic is available in different color themes and font themes.&lt;/p&gt;



&lt;div class=&#34;gallery&#34;&gt;
  
  
  
  
    
  
  &lt;a data-fancybox=&#34;gallery-1&#34; data-caption=&#34;Default&#34; href=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-default.png&#34;&gt;
    &lt;img alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-default.png&#34;&gt;
  &lt;/a&gt;
  
  
  
  
    
  
  &lt;a data-fancybox=&#34;gallery-1&#34; data-caption=&#34;Ocean&#34; href=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-ocean.png&#34;&gt;
    &lt;img alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-ocean.png&#34;&gt;
  &lt;/a&gt;
  
  
  
  
    
  
  &lt;a data-fancybox=&#34;gallery-1&#34; data-caption=&#34;Dark&#34; href=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-dark.png&#34;&gt;
    &lt;img alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-dark.png&#34;&gt;
  &lt;/a&gt;
  
  
  
  
    
  
  &lt;a data-fancybox=&#34;gallery-1&#34; data-caption=&#34;Default&#34; href=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-forest.png&#34;&gt;
    &lt;img alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-forest.png&#34;&gt;
  &lt;/a&gt;
  
  
  
  
    
  
  &lt;a data-fancybox=&#34;gallery-1&#34; data-caption=&#34;Coffee theme with Playfair font&#34; href=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-coffee-playfair.png&#34;&gt;
    &lt;img alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-coffee-playfair.png&#34;&gt;
  &lt;/a&gt;
  
  
  
  
    
  
  &lt;a data-fancybox=&#34;gallery-1&#34; data-caption=&#34;1950s&#34; href=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-1950s.png&#34;&gt;
    &lt;img alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-1950s.png&#34;&gt;
  &lt;/a&gt;
  
&lt;/div&gt;

&lt;h2 id=&#34;install&#34;&gt;Install&lt;/h2&gt;

&lt;p&gt;You can choose from one of the following four methods to install:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;one-click install using your web browser (recommended)&lt;/li&gt;
&lt;li&gt;install on your computer using Git with the Command Prompt/Terminal app&lt;/li&gt;
&lt;li&gt;install on your computer by downloading the ZIP files&lt;/li&gt;
&lt;li&gt;install on your computer with RStudio&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;quick-install-using-your-web-browser&#34;&gt;Quick install using your web browser&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://app.netlify.com/start/deploy?repository=https://github.com/sourcethemes/academic-kickstart&#34; target=&#34;_blank&#34;&gt;Install Academic with Netlify&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Netlify will provide you with a customizable URL to access your new site&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;On GitHub, go to your newly created &lt;code&gt;academic-kickstart&lt;/code&gt; repository and edit &lt;code&gt;config.toml&lt;/code&gt; to personalize your site. Shortly after saving the file, your site will automatically update&lt;/li&gt;
&lt;li&gt;Read the &lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34; target=&#34;_blank&#34;&gt;Quick Start Guide&lt;/a&gt; to learn how to add Markdown content. For inspiration, refer to the &lt;a href=&#34;https://github.com/gcushen/hugo-academic/tree/master/exampleSite&#34; target=&#34;_blank&#34;&gt;Markdown content&lt;/a&gt; which powers the &lt;a href=&#34;https://themes.gohugo.io/theme/academic/&#34; target=&#34;_blank&#34;&gt;Demo&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;install-with-git&#34;&gt;Install with Git&lt;/h3&gt;

&lt;p&gt;Prerequisites:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/downloads&#34; target=&#34;_blank&#34;&gt;Download and install Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/getting-started/installing/#quick-install&#34; target=&#34;_blank&#34;&gt;Download and install Hugo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/sourcethemes/academic-kickstart#fork-destination-box&#34; target=&#34;_blank&#34;&gt;Fork&lt;/a&gt; the &lt;em&gt;Academic Kickstart&lt;/em&gt; repository and clone your fork with Git:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/sourcethemes/academic-kickstart.git My_Website
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Note that if you forked Academic Kickstart, the above command should be edited to clone your fork, i.e. replace &lt;code&gt;sourcethemes&lt;/code&gt; with your GitHub username.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Initialize the theme:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd My_Website
git submodule update --init --recursive
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;install-with-zip&#34;&gt;Install with ZIP&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sourcethemes/academic-kickstart/archive/master.zip&#34; target=&#34;_blank&#34;&gt;Download&lt;/a&gt; and extract &lt;em&gt;Academic Kickstart&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gcushen/hugo-academic/archive/master.zip&#34; target=&#34;_blank&#34;&gt;Download&lt;/a&gt; and extract the &lt;em&gt;Academic theme&lt;/em&gt; to the &lt;code&gt;themes/academic/&lt;/code&gt; folder from the above step&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;install-with-rstudio&#34;&gt;Install with RStudio&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/install/#install-with-rstudio&#34; target=&#34;_blank&#34;&gt;View the guide to installing Academic with RStudio&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;quick-start&#34;&gt;Quick start&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;If you installed on your computer, view your new website by running the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now visit &lt;a href=&#34;http://localhost:1313&#34; target=&#34;_blank&#34;&gt;localhost:1313&lt;/a&gt; and your new Academic powered website will appear. Otherwise, if using Netlify, they will provide you with your URL.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Read the &lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34; target=&#34;_blank&#34;&gt;Quick Start Guide&lt;/a&gt; to learn how to add Markdown content, customize your site, and deploy it. For inspiration, refer to the &lt;a href=&#34;https://github.com/gcushen/hugo-academic/tree/master/exampleSite&#34; target=&#34;_blank&#34;&gt;Markdown content&lt;/a&gt; which powers the &lt;a href=&#34;https://themes.gohugo.io/theme/academic/&#34; target=&#34;_blank&#34;&gt;Demo&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Build your site by running the &lt;code&gt;hugo&lt;/code&gt; command. Then &lt;a href=&#34;https://georgecushen.com/create-your-website-with-hugo/&#34; target=&#34;_blank&#34;&gt;host it for free using Github Pages&lt;/a&gt; or Netlify (refer to the first installation method). Alternatively, copy the generated &lt;code&gt;public/&lt;/code&gt; directory (by FTP, Rsync, etc.) to your production web server (such as a university&amp;rsquo;s hosting service).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;updating&#34;&gt;Updating&lt;/h2&gt;

&lt;p&gt;Feel free to &lt;em&gt;star&lt;/em&gt; the project on &lt;a href=&#34;https://github.com/gcushen/hugo-academic/&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt; to help keep track of updates and check out the &lt;a href=&#34;https://sourcethemes.com/academic/updates&#34; target=&#34;_blank&#34;&gt;release notes&lt;/a&gt; prior to updating your site.&lt;/p&gt;

&lt;p&gt;Before updating the framework, it is recommended to make a backup of your entire website directory (or at least your &lt;code&gt;themes/academic&lt;/code&gt; directory) and record your current version number.&lt;/p&gt;

&lt;p&gt;By default, Academic is installed as a Git submodule which can be updated by running the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git submodule update --remote --merge
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/update/&#34; target=&#34;_blank&#34;&gt;Check out the update guide&lt;/a&gt; for full instructions and alternative methods.&lt;/p&gt;

&lt;h2 id=&#34;feedback-contributing&#34;&gt;Feedback &amp;amp; Contributing&lt;/h2&gt;

&lt;p&gt;Please use the &lt;a href=&#34;https://github.com/gcushen/hugo-academic/issues&#34; target=&#34;_blank&#34;&gt;issue tracker&lt;/a&gt; to let me know about any bugs or feature requests, or alternatively make a pull request.&lt;/p&gt;

&lt;p&gt;For support, head over to the &lt;a href=&#34;http://discuss.gohugo.io&#34; target=&#34;_blank&#34;&gt;Hugo discussion forum&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;

&lt;p&gt;Copyright 2016-present &lt;a href=&#34;https://georgecushen.com&#34; target=&#34;_blank&#34;&gt;George Cushen&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Released under the &lt;a href=&#34;https://github.com/gcushen/hugo-academic/blob/master/LICENSE.md&#34; target=&#34;_blank&#34;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Person Re-Identification System For Mobile Devices</title>
      <link>/publication/person-re-identification/</link>
      <pubDate>Tue, 01 Sep 2015 00:00:00 +0200</pubDate>
      
      <guid>/publication/person-re-identification/</guid>
      <description>&lt;p&gt;More detail can easily be written here using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>/post/2015-07-23-r-rmarkdown/</link>
      <pubDate>Thu, 23 Jul 2015 21:13:14 -0500</pubDate>
      
      <guid>/post/2015-07-23-r-rmarkdown/</guid>
      <description>&lt;div id=&#34;r-markdown&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;R Markdown&lt;/h1&gt;
&lt;p&gt;This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see &lt;a href=&#34;http://rmarkdown.rstudio.com&#34; class=&#34;uri&#34;&gt;http://rmarkdown.rstudio.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can embed an R code chunk like this:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(cars)
##      speed           dist       
##  Min.   : 4.0   Min.   :  2.00  
##  1st Qu.:12.0   1st Qu.: 26.00  
##  Median :15.0   Median : 36.00  
##  Mean   :15.4   Mean   : 42.98  
##  3rd Qu.:19.0   3rd Qu.: 56.00  
##  Max.   :25.0   Max.   :120.00
fit &amp;lt;- lm(dist ~ speed, data = cars)
fit
## 
## Call:
## lm(formula = dist ~ speed, data = cars)
## 
## Coefficients:
## (Intercept)        speed  
##     -17.579        3.932&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;including-plots&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Including Plots&lt;/h1&gt;
&lt;p&gt;You can also embed plots. See Figure &lt;a href=&#34;#fig:pie&#34;&gt;1&lt;/a&gt; for example:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;par(mar = c(0, 1, 0, 1))
pie(
  c(280, 60, 20),
  c(&amp;#39;Sky&amp;#39;, &amp;#39;Sunny side of pyramid&amp;#39;, &amp;#39;Shady side of pyramid&amp;#39;),
  col = c(&amp;#39;#0292D8&amp;#39;, &amp;#39;#F7EA39&amp;#39;, &amp;#39;#C4B632&amp;#39;),
  init.angle = -50, border = NA
)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:pie&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/post/2015-07-23-r-rmarkdown_files/figure-html/pie-1.png&#34; alt=&#34;A fancy pie chart.&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: A fancy pie chart.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Mobile visual clothing search</title>
      <link>/publication/clothing-search/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0200</pubDate>
      
      <guid>/publication/clothing-search/</guid>
      <description>&lt;p&gt;More detail can easily be written here using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
