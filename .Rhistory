blues <- brewer.pal(9,"BuPu")
blue_range <- colorRampPalette(blues)
downloads_per_country%>%
arrange(desc(n))%>%
head(10)%>%
mutate(name=fct_reorder(name,n))%>%
ggplot(aes(name,n,fill=name))+
geom_col()+
expand_limits(y=0)+
coord_flip()+
scale_y_continuous(labels=comma_format())+
labs(title="Top 10 countries by R downloads in 2017/18",
x="",
y="Downloads")+
theme(legend.position = "none")+
scale_fill_manual(values=blue_range(10))
yellows <- brewer.pal(9,"OrRd")
yellow_range <- colorRampPalette(yellows)
full_maps%>%
arrange(desc(n_capita))%>%
head(10)%>%
mutate(name=fct_reorder(name,n_capita))%>%
ggplot(aes(name,n_capita,fill=name))+
geom_col()+
expand_limits(y=0)+
coord_flip()+
scale_y_continuous(labels=comma_format())+
labs(title="Top 10 countries by R downloads per capita in 2017/18",
x="",
y="Downloads")+
theme(legend.position = "none")+
scale_fill_manual(values=yellow_range(10))
blogdown::serve_site()
monthly_downloads_per_region <- r_downloads%>%
#Group by the month of the year
group_by(month(date), sub_region)%>%
#Count downloads by the month of the year
summarise(monthly_downloads=n())%>%
#Pipe to make a plot
ggplot(aes(x=`month(date)`,y= monthly_downloads))+
#Add line
geom_line(alpha=0.5, color="seagreen3")+
geom_point(color="seagreen3")+
scale_x_continuous(breaks=c(seq(1,12,1)))+
#Add nice commas y axis
scale_y_continuous(labels=comma_format())+
#Add title
labs(title="Monthly R downloads around the world",
y="Downloads",
x="Month")+
facet_wrap(~sub_region, scales="free", nrow = 6)+
theme(strip.background =element_rect(fill="white"))+
theme(strip.text = element_text(colour = "seagreen4", size=8,face="bold"))
n_capita_map
monthly_downloads_per_region <- r_downloads%>%
#Group by the month of the year
group_by(month(date), sub_region)%>%
#Count downloads by the month of the year
summarise(monthly_downloads=n())%>%
#Pipe to make a plot
ggplot(aes(x=`month(date)`,y= monthly_downloads))+
#Add line
geom_line(alpha=0.5, color="seagreen3")+
geom_point(color="seagreen3")+
scale_x_continuous(breaks=c(seq(1,12,1)))+
#Add nice commas y axis
scale_y_continuous(labels=comma_format())+
#Add title
labs(title="Monthly R downloads around the world",
y="Downloads",
x="Month")+
facet_wrap(~sub_region, scales="free", nrow = 6)+
theme(strip.background =element_rect(fill="white"))+
theme(strip.text = element_text(colour = "seagreen4", size=8,face="bold"))
monthly_downloads_per_region
monthly_downloads_per_region <- r_downloads%>%
#Group by the month of the year
group_by(month(date), sub_region)%>%
#Count downloads by the month of the year
summarise(monthly_downloads=n())%>%
#Pipe to make a plot
ggplot(aes(x=`month(date)`,y= monthly_downloads))+
#Add line
geom_line(alpha=0.5, color="seagreen3")+
geom_point(color="seagreen3")+
scale_x_continuous(breaks=c(seq(1,12,1)))+
#Add nice commas y axis
scale_y_continuous(labels=comma_format())+
#Add title
labs(title="Monthly R downloads around the world",
y="Downloads",
x="Month")+
facet_wrap(~sub_region, scales="free", nrow = 6)+
theme(strip.background =element_rect(fill="white"))+
theme(strip.text = element_text(colour = "seagreen4", size=8,face="bold"))+
title =element_text(size=12, face='bold',colour="seagreen4")
monthly_downloads_per_region <- r_downloads%>%
#Group by the month of the year
group_by(month(date), sub_region)%>%
#Count downloads by the month of the year
summarise(monthly_downloads=n())%>%
#Pipe to make a plot
ggplot(aes(x=`month(date)`,y= monthly_downloads))+
#Add line
geom_line(alpha=0.5, color="seagreen3")+
geom_point(color="seagreen3")+
scale_x_continuous(breaks=c(seq(1,12,1)))+
#Add nice commas y axis
scale_y_continuous(labels=comma_format())+
#Add title
labs(title="Monthly R downloads around the world",
y="Downloads",
x="Month")+
facet_wrap(~sub_region, scales="free", nrow = 6)+
theme(strip.background =element_rect(fill="white"))+
theme(strip.text = element_text(colour = "seagreen4", size=8,face="bold"))+
title =element_text(size=12, face='bold',colour="seagreen4")
monthly_downloads_per_region <- r_downloads%>%
#Group by the month of the year
group_by(month(date), sub_region)%>%
#Count downloads by the month of the year
summarise(monthly_downloads=n())%>%
#Pipe to make a plot
ggplot(aes(x=`month(date)`,y= monthly_downloads))+
#Add line
geom_line(alpha=0.5, color="seagreen3")+
geom_point(color="seagreen3")+
scale_x_continuous(breaks=c(seq(1,12,1)))+
#Add nice commas y axis
scale_y_continuous(labels=comma_format())+
#Add title
labs(title="Monthly R downloads around the world",
y="Downloads",
x="Month")+
facet_wrap(~sub_region, scales="free", nrow = 6)+
theme(strip.background =element_rect(fill="white"))+
theme(strip.text = element_text(colour = "seagreen4", size=8,face="bold"))+
title =element_text(size=12, face='bold',colour="seagreen4")
monthly_downloads_per_region <- r_downloads%>%
#Group by the month of the year
group_by(month(date), sub_region)%>%
#Count downloads by the month of the year
summarise(monthly_downloads=n())%>%
#Pipe to make a plot
ggplot(aes(x=`month(date)`,y= monthly_downloads))+
#Add line
geom_line(alpha=0.5, color="seagreen3")+
geom_point(color="seagreen3")+
scale_x_continuous(breaks=c(seq(1,12,1)))+
#Add nice commas y axis
scale_y_continuous(labels=comma_format())+
#Add title
labs(title="Monthly R downloads around the world",
y="Downloads",
x="Month")+
facet_wrap(~sub_region, scales="free", nrow = 6)+
theme(strip.background =element_rect(fill="white"))+
theme(strip.text = element_text(colour = "seagreen4", size=8,face="bold"))+
theme(title =element_text(size=12, face='bold',colour="seagreen4"))
monthly_downloads_per_region
monthly_downloads_per_region <- r_downloads%>%
#Group by the month of the year
group_by(month(date), sub_region)%>%
#Count downloads by the month of the year
summarise(monthly_downloads=n())%>%
#Pipe to make a plot
ggplot(aes(x=`month(date)`,y= monthly_downloads))+
#Add line
geom_line(alpha=0.5, color="seagreen3")+
geom_point(color="seagreen3")+
scale_x_continuous(breaks=c(seq(1,12,1)))+
#Add nice commas y axis
scale_y_continuous(labels=comma_format())+
#Add title
labs(title="Monthly R downloads around the world 2017/2018",
y="Downloads",
x="Month")+
facet_wrap(~sub_region, scales="free", nrow = 6)+
theme(strip.background =element_rect(fill="white"))+
theme(strip.text = element_text(colour = "seagreen4", size=8,face="bold"))+
theme(title =element_text(size=12, face='bold',colour="seagreen4"))
monthly_downloads_per_region <- r_downloads%>%
#Group by the month of the year
group_by(month(date), sub_region)%>%
#Count downloads by the month of the year
summarise(monthly_downloads=n())%>%
#Pipe to make a plot
ggplot(aes(x=`month(date)`,y= monthly_downloads))+
#Add line
geom_line(alpha=0.5, color="seagreen3")+
geom_point(color="seagreen3")+
scale_x_continuous(breaks=c(seq(1,12,1)))+
#Add nice commas y axis
scale_y_continuous(labels=comma_format())+
#Add title
labs(title="Monthly R downloads around the world 2017/2018",
y="Downloads",
x="Month",
caption = "Data source: [Tidy Tuesday](https://github.com/rfordatascience/tidytuesday/tree/master/data/2018/2018-10-30)")+
facet_wrap(~sub_region, scales="free", nrow = 6)+
theme(strip.background =element_rect(fill="white"))+
theme(strip.text = element_text(colour = "seagreen4", size=8,face="bold"))+
theme(title =element_text(size=12, face='bold',colour="seagreen4"))
monthly_downloads_per_region <- r_downloads%>%
#Group by the month of the year
group_by(month(date), sub_region)%>%
#Count downloads by the month of the year
summarise(monthly_downloads=n())%>%
#Pipe to make a plot
ggplot(aes(x=`month(date)`,y= monthly_downloads))+
#Add line
geom_line(alpha=0.5, color="seagreen3")+
geom_point(color="seagreen3")+
scale_x_continuous(breaks=c(seq(1,12,1)))+
#Add nice commas y axis
scale_y_continuous(labels=comma_format())+
#Add title
labs(title="Monthly R downloads around the world 2017/2018",
y="Downloads",
x="Month",
caption = "Data source: [Tidy Tuesday](https://github.com/rfordatascience/tidytuesday/tree/master/data/2018/2018-10-30)")+
facet_wrap(~sub_region, scales="free", nrow = 6)+
theme(strip.background =element_rect(fill="white"))+
theme(strip.text = element_text(colour = "seagreen4", size=8,face="bold"))+
theme(title =element_text(size=12, face='bold',colour="seagreen4"))
monthly_downloads_per_region
yellows <- brewer.pal(9,"OrRd")
yellow_range <- colorRampPalette(yellows)
full_maps%>%
arrange(desc(n_capita))%>%
head(10)%>%
mutate(name=fct_reorder(name,n_capita))%>%
ggplot(aes(name,n_capita,fill=name))+
geom_col()+
expand_limits(y=0)+
coord_flip()+
scale_y_continuous(labels=comma_format())+
labs(title="Top 10 countries by R downloads per capita in 2017/18",
x="",
y="Downloads")+
theme(legend.position = "none")+
scale_fill_manual(values=yellow_range(10))
summary(full_maps)
args(readRDS)
educ <- read_csv(here::here("static","data","educ_year.csv"))
educ <- read_csv(here::here("static","data","edu_year.csv"))
head(educ)
full_maps%>%
left_join(educ, by=c("iso_3"="country"))
names(educ)
educ%>%
filter(year=2016)
educ%>%
filter(year==2016)
educ <- educ%>%
filter(year==2016)%>%
select(country, educ)
full_maps%>%
left_join(educ, by=c("iso_3"="country"))%>%
full_maps%>%
left_join(educ, by=c("iso_3"="country"))
head(fullseq())
head(full_maps)
full_maps%>%
left_join(educ, by=c("iso_3"="country"))
full_maps%>%
left_join(educ, by=c("iso_3"="country"))
# Chunk 1: setup
x <-
c("dplyr",
"knitr",
"here",
"scales",
"magrittr",
"ggplot2",
"cowplot",
"tidyverse",
"Metrics",
"rsample",
"broom",
"sf",
"rgdal",
"summarytools",
"tmap",
"tmaptools",
"lubridate",
"RColorBrewer")
lapply(x, require, character.only = TRUE)
opts_chunk$set(echo = FALSE,
warning = FALSE,
error = FALSE,
message = FALSE,
collapse = TRUE,
comment = NA,
tidy = TRUE,
include = FALSE)
theme_set(theme_light())
options(
digits=3,
scipen = 999
)
knit_hooks$set(inline = function(x) {
prettyNum(round(x,2), big.mark=",")
})
r_downloads <- readRDS(file=here::here("static","data","r-downloads.rds"))
r_downloads <- na.omit(r_downloads)%>%
filter(date<"2018-10-20")
# Chunk 2: read-data
iso_codes <- read_csv(here::here("static","data","iso_countries.csv"))
pop <-read_csv(here::here("static","data","country_populations.csv"))
map_path <- here::here("static","data","world_shapefile","world_shapefile.shp")
world <- sf::st_read(map_path)
educ <- read_csv(here::here("static","data","edu_year.csv"))
educ <- educ%>%
filter(year==2016)%>%
select(country, educ)
# Chunk 3: merge-country-codes
r_downloads%<>%
full_join(iso_codes, by=c("country"="iso"))%>%
filter(!is.na(sub_region))
# Chunk 4: downloads-by-country
r_downloads%>%
group_by(name)%>%
summarise(n=n())%>%
filter(!is.na(n))%>%
arrange(desc(n))->downloads_per_country
# Chunk 5: plot-top-10-countries
blues <- brewer.pal(9,"BuPu")
blue_range <- colorRampPalette(blues)
downloads_per_country%>%
arrange(desc(n))%>%
head(10)%>%
mutate(name=fct_reorder(name,n))%>%
ggplot(aes(name,n,fill=name))+
geom_col()+
expand_limits(y=0)+
coord_flip()+
scale_y_continuous(labels=comma_format())+
labs(title="Top 10 countries by R downloads in 2017/18",
x="",
y="Downloads")+
theme(legend.position = "none")+
scale_fill_manual(values=blue_range(10))
# Chunk 6: create-tibble-with-pop-and-users-only
full_maps <- downloads_per_country%>%
full_join(iso_codes, by=c("name"="name"))%>%
filter(!is.na(sub_region))%>%
left_join(pop, by=c("name"="name"))%>%
select(n, name, iso_3, region, sub_region, pop_2018)%>%
mutate(n_capita=n/pop_2018)%>%
filter(!is.na(n_capita),
pop_2018!=0)
# Chunk 7: merge-full-maps-and-map-path
world_full <- world%>%
left_join(full_maps, by=c("ISO3"="iso_3"))
# Chunk 8: create-total-downloads-map
n_map <- tm_shape(world_full) +
tm_borders(col="black", lwd=0.1)+
tm_fill(col="n",n=4, style="jenks", palette = get_brewer_pal("BuPu", n = 4, contrast = c(0.13, 0.9))) +
tm_layout(main.title = "Total R downloads in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
# Chunk 9: plot-total-downloads-map
n_map
# Chunk 10: plot-top-10-countries-per-capita
yellows <- brewer.pal(9,"OrRd")
yellow_range <- colorRampPalette(yellows)
full_maps%>%
arrange(desc(n_capita))%>%
head(10)%>%
mutate(name=fct_reorder(name,n_capita))%>%
ggplot(aes(name,n_capita,fill=name))+
geom_col()+
expand_limits(y=0)+
coord_flip()+
scale_y_continuous(labels=comma_format())+
labs(title="Top 10 countries by R downloads per capita in 2017/18",
x="",
y="Downloads")+
theme(legend.position = "none")+
scale_fill_manual(values=yellow_range(10))
# Chunk 11: create-downloads-per-capita-map
n_capita_map <- tm_shape(world_full) +
tm_borders(col="black", lwd=0.1)+
tm_fill(col="n_capita",n=4, style="jenks", palette = get_brewer_pal("OrRd", n = 4, contrast = c(0.13, 0.9))) +
tm_layout(main.title = "R downloads per capita in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
# Chunk 12: plot-downloads-per-capita-map
n_capita_map
# Chunk 13: create-r-downloads-per-region
monthly_downloads_per_region <- r_downloads%>%
#Group by the month of the year
group_by(month(date), sub_region)%>%
#Count downloads by the month of the year
summarise(monthly_downloads=n())%>%
#Pipe to make a plot
ggplot(aes(x=`month(date)`,y= monthly_downloads))+
#Add line
geom_line(alpha=0.5, color="seagreen3")+
geom_point(color="seagreen3")+
scale_x_continuous(breaks=c(seq(1,12,1)))+
#Add nice commas y axis
scale_y_continuous(labels=comma_format())+
#Add title
labs(title="Monthly R downloads around the world 2017/2018",
y="Downloads",
x="Month",
caption = "Data source: Tidy Tuesday (2018-10-30)")+
facet_wrap(~sub_region, scales="free", nrow = 6)+
theme(strip.background =element_rect(fill="white"))+
theme(strip.text = element_text(colour = "seagreen4", size=8,face="bold"))+
theme(title =element_text(size=12, face='bold',colour="seagreen4"))
# Chunk 14: plot-monthly-downloads-per-region
monthly_downloads_per_region
full_maps%>%
left_join(educ, by=c("iso_3"="country"))
educ <- read_csv(here::here("static","data","edu_year.csv"))
View(educ)
View(educ$Indicator)
levels(educ$Indicator)
summary(educ)
educ$Indicator <- as.factor(edu$Indicator)
educ$Indicator <- as.factor(educ$Indicator)
View(levels(educ$Indicator))
print(levels(educ$Indicator))
educ%>%
filter(year==2016,
Indicator="Mean years of schooling (ISCED 1 or higher), population 25+ years, both sexes")%>%
select(country, educ)
educ%>%
filter(year==2016,
Indicator=="Mean years of schooling (ISCED 1 or higher), population 25+ years, both sexes")%>%
select(country, educ)
educ <- educ%>%
filter(year==2016,
Indicator=="Mean years of schooling (ISCED 1 or higher), population 25+ years, both sexes")%>%
select(country, educ)
full_maps%>%
left_join(educ, by=c("iso_3"="country"))
full_maps_edu <- full_maps%>%
left_join(educ, by=c("iso_3"="country"))%>%
na.omit()
nrow(full_maps_edu)
lm(n_capita_map ~ educ, data = full_maps_edu)
lm(n_capita ~ educ, data = full_maps_edu)
fit <- lm(n_capita ~ educ, data = full_maps_edu)
fit
plot(Fit)
plot(fit)
summary(fit)
ggplot(full_maps, aes(x=educ,y=n_capita))+
geom_point(alpha=0.5)
ggplot(full_maps_edu, aes(x=educ, y=n_capita))+
geom_point(alpha=0.5)
ggplot(full_maps_edu, aes(x=educ, y=n_capita))+
geom_point(alpha=0.5)+
geom_smooth(method = "lm")
names(full_maps)
head(full_maps)
educ <- read_csv(here::here("static","data","edu_year.csv"))
full_maps_edu <- full_maps%>%
left_join(educ, by="name")%>%
na.omit()
ggplot(full_maps_edu, aes(x=educ, y=n_capita))+
geom_point(alpha=0.5)+
geom_smooth(method = "lm")
names(educ)
ggplot(full_maps_edu, aes(x=edu_index, y=n_capita))+
geom_point(alpha=0.5)+
geom_smooth(method = "lm")
fit <- lm(n_capita ~ edu_index, data = full_maps_edu)
summary(full_maps_edu)
head(edu)
head(educ)
educ$edu_index <- as.integer(educ$edu_index)
head(educ)
educ <- read_csv(here::here("static","data","edu_year.csv"))
head(educ)
educ$edu_index <- as.double(educ$edu_index)
head(educ)
full_maps_edu <- full_maps%>%
left_join(educ, by="name")%>%
na.omit()
fit <- lm(n_capita ~ edu_index, data = full_maps_edu)
ggplot(full_maps_edu, aes(x=edu_index, y=n_capita))+
geom_point(alpha=0.5)+
geom_smooth(method = "lm")
fit <- lm(n_capita ~ edu_index, data = full_maps_edu)
summary(fit)
ggplot(full_maps_edu, aes(x=edu_index, y=n_capita))+
geom_jitter(alpha=0.5)
ggplot(full_maps_edu, aes(x=edu_index, y=n_capita))+
geom_point(alpha=0.5)+
scale_x_log10()
ggplot(full_maps_edu, aes(x=edu_index, y=n_capita))+
geom_point(alpha=0.5)+
geom_smooth(method="lm")+
scale_x_log10()
ggplot(full_maps_edu, aes(x=edu_index, y=n_capita))+
geom_point(alpha=0.5)+
geom_smooth(method="lm")+
scale_y_log10()
fit <- lm( log(n_capita) ~ edu_index, data = full_maps_edu)
summary(fit)
fit <- lm( log(n_capita) ~ edu_index, data = full_maps_edu)
summary(fit)
par(mfrow=c(2,2))
plot(fit)
ggplot(full_maps_edu, aes(x=edu_index, y=log(n_capita)))+
geom_point(alpha=0.5)+
geom_smooth(method="lm")
