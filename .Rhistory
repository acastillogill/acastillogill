r_downloads%>%
group_by(name)%>%
summarise(n=n())%>%
filter(!is.na(n))%>%
arrange(desc(n))->downloads_per_country
# Chunk 5: plot-top-10-countries
downloads_per_country%>%
arrange(desc(n))%>%
head(10)%>%
mutate(name=fct_reorder(name,n))%>%
ggplot(aes(name,n,fill=name))+
geom_col()+
expand_limits(y=0)+
coord_flip()+
scale_y_continuous(labels=comma_format())+
labs(title="Top 10 countries by R downloads in 2017/18",
x="",
y="Downloads")+
theme(legend.position = "none")
# Chunk 6: create-tibble-with-pop-and-users-only
full_maps <- downloads_per_country%>%
full_join(iso_codes, by=c("name"="name"))%>%
filter(!is.na(sub_region))%>%
left_join(pop, by=c("name"="name"))%>%
select(n, name, iso_3, region, sub_region, pop_2018)%>%
mutate(n_capita=n/pop_2018)%>%
filter(!is.na(n_capita),
pop_2018!=0)
# Chunk 7: merge-full-maps-and-map-path
world_full <- world%>%
left_join(full_maps, by=c("ISO3"="iso_3"))
# Chunk 8: create-total-downloads-map
n_map <- tm_shape(world_full) +
tm_borders(col="black", lwd=0.1)+
tm_fill(col="n",n=4, style="jenks", palette = get_brewer_pal("BuPu", n = 4, contrast = c(0.13, 0.9))) +
tm_layout(main.title = "Total R downloads in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
# Chunk 9: plot-total-downloads-map
n_map
downloads_per_country%>%
arrange(desc(n))%>%
head(10)%>%
mutate(name=fct_reorder(name,n))%>%
ggplot(aes(name,n,fill=name))+
geom_col()+
expand_limits(y=0)+
coord_flip()+
scale_y_continuous(labels=comma_format())+
labs(title="Top 10 countries by R downloads in 2017/18",
x="",
y="Downloads")+
theme(legend.position = "none")
n_map
blogdown::serve_site()
str(full_maps)
full_maps%>%
arrange(desc(n_capita))%>%
head(10)%>%
mutate(name=fct_reorder(name,n_capita))%>%
ggplot(aes(name,n_capita,fill=name))+
geom_col()+
expand_limits(y=0)+
coord_flip()+
scale_y_continuous(labels=comma_format())+
labs(title="Top 10 countries by R downloads in 2017/18",
x="",
y="Downloads")+
theme(legend.position = "none")
full_maps%>%
arrange(desc(n_capita))%>%
head(10)%>%
mutate(name=fct_reorder(name,n_capita))%>%
ggplot(aes(name,n_capita,fill=name))+
geom_col()+
expand_limits(y=0)+
coord_flip()+
scale_y_continuous(labels=comma_format())+
labs(title="Top 10 countries by R downloads per capita in 2017/18",
x="",
y="Downloads")+
theme(legend.position = "none")
n_capita_map <- tm_shape(world_full) +
tm_borders(col="black", lwd=0.1)+
tm_fill(col="n_capita",n=4, style="jenks", palette = get_brewer_pal("YlOr", n = 4, contrast = c(0.13, 0.9))) +
tm_layout(main.title = "Total R downloads in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
n_capita_map <- tm_shape(world_full) +
tm_borders(col="black", lwd=0.1)+
tm_fill(col="n_capita",n=4, style="jenks", palette = get_brewer_pal("YlRd", n = 4, contrast = c(0.13, 0.9))) +
tm_layout(main.title = "Total R downloads in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
n_capita_map <- tm_shape(world_full) +
tm_borders(col="black", lwd=0.1)+
tm_fill(col="n_capita",n=4, style="jenks", palette = get_brewer_pal("YlRd", n = 4, contrast = c(0.13, 0.9))) +
tm_layout(main.title = "Total R downloads in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
n_capita_map <- tm_shape(world_full) +
tm_borders(col="black", lwd=0.1)+
tm_fill(col="n_capita",n=4, style="jenks", palette = get_brewer_pal("YlRd", n = 4, contrast = c(0.13, 0.9))) +
tm_layout(main.title = "Total R downloads in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
n_capita_map <- tm_shape(world_full) +
tm_borders(col="black", lwd=0.1)+
tm_fill(col="n_capita",n=4, style="jenks", palette = get_brewer_pal("OrRd", n = 4, contrast = c(0.13, 0.9))) +
tm_layout(main.title = "Total R downloads in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
n_capita_map
r_downloads%>%
#Group by the month of the year
group_by(month(date), sub_region)%>%
#Count downloads by the month of the year
summarise(monthly_downloads=n())%>%
#Pipe to make a plot
ggplot(aes(x=`month(date)`,y= monthly_downloads))+
#Add line
geom_line(alpha=0.5, color="purple")+
geom_point(color="purple")+
scale_x_continuous(breaks=c(seq(1,12,1)))+
#Add nice commas y axis
scale_y_continuous(labels=comma_format())+
#Add title
labs(title="Monthly R downloads around the world",
y="Downloads",
x="Week")+
facet_wrap(~sub_region, scales="free")
# Chunk 1: setup
x <-
c("dplyr",
"knitr",
"here",
"scales",
"magrittr",
"ggplot2",
"cowplot",
"tidyverse",
"Metrics",
"rsample",
"broom",
"sf",
"rgdal",
"summarytools",
"leaflet",
"tmap",
"tmaptools",
"lubridate")
lapply(x, require, character.only = TRUE)
opts_chunk$set(echo = FALSE,
warning = FALSE,
error = FALSE,
message = FALSE,
collapse = TRUE,
comment = NA,
tidy = TRUE,
include = FALSE)
theme_set(theme_light())
options(
digits=3,
scipen = 999
)
knit_hooks$set(inline = function(x) {
prettyNum(round(x,2), big.mark=",")
})
scale_colour_discrete <- function(...) scale_colour_brewer(..., palette="Paired")
scale_fill_discrete <- function(...) scale_fill_brewer(... , palette="Paired")
r_downloads <- readRDS(file=here::here("static","data","r-downloads.rds"))
r_downloads <- na.omit(r_downloads)%>%
filter(date<"2018-10-20")
# Chunk 2: read-country-codes-and-pop-and-map
iso_codes <- read_csv(here::here("static","data","iso_countries.csv"))
pop <-read_csv(here::here("static","data","country_populations.csv"))
map_path <- here::here("static","data","world_shapefile","world_shapefile.shp")
world <- sf::st_read(map_path)
# Chunk 3: merge-country-codes
r_downloads%<>%
full_join(iso_codes, by=c("country"="iso"))%>%
filter(!is.na(sub_region))
# Chunk 4: downloads-by-country
r_downloads%>%
group_by(name)%>%
summarise(n=n())%>%
filter(!is.na(n))%>%
arrange(desc(n))->downloads_per_country
# Chunk 5: plot-top-10-countries
downloads_per_country%>%
arrange(desc(n))%>%
head(10)%>%
mutate(name=fct_reorder(name,n))%>%
ggplot(aes(name,n,fill=name))+
geom_col()+
expand_limits(y=0)+
coord_flip()+
scale_y_continuous(labels=comma_format())+
labs(title="Top 10 countries by R downloads in 2017/18",
x="",
y="Downloads")+
theme(legend.position = "none")
# Chunk 6: create-tibble-with-pop-and-users-only
full_maps <- downloads_per_country%>%
full_join(iso_codes, by=c("name"="name"))%>%
filter(!is.na(sub_region))%>%
left_join(pop, by=c("name"="name"))%>%
select(n, name, iso_3, region, sub_region, pop_2018)%>%
mutate(n_capita=n/pop_2018)%>%
filter(!is.na(n_capita),
pop_2018!=0)
# Chunk 7: merge-full-maps-and-map-path
world_full <- world%>%
left_join(full_maps, by=c("ISO3"="iso_3"))
# Chunk 8: create-total-downloads-map
n_map <- tm_shape(world_full) +
tm_borders(col="black", lwd=0.1)+
tm_fill(col="n",n=4, style="jenks", palette = get_brewer_pal("BuPu", n = 4, contrast = c(0.13, 0.9))) +
tm_layout(main.title = "Total R downloads in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
# Chunk 9: plot-total-downloads-map
n_map
# Chunk 10: plot-top-10-countries-per-capita
full_maps%>%
arrange(desc(n_capita))%>%
head(10)%>%
mutate(name=fct_reorder(name,n_capita))%>%
ggplot(aes(name,n_capita,fill=name))+
geom_col()+
expand_limits(y=0)+
coord_flip()+
scale_y_continuous(labels=comma_format())+
labs(title="Top 10 countries by R downloads per capita in 2017/18",
x="",
y="Downloads")+
theme(legend.position = "none")
# Chunk 11: create-downloads-per-capita-map
n_capita_map <- tm_shape(world_full) +
tm_borders(col="black", lwd=0.1)+
tm_fill(col="n_capita",n=4, style="jenks", palette = get_brewer_pal("OrRd", n = 4, contrast = c(0.13, 0.9))) +
tm_layout(main.title = "R downloads per capita in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
# Chunk 12: plot-downloads-per-capita-map
n_capita_map
# Chunk 13: plot-r-downloads-per-month
r_downloads%>%
#Group by the month of the year
group_by(month(date), sub_region)%>%
#Count downloads by the month of the year
summarise(monthly_downloads=n())%>%
#Pipe to make a plot
ggplot(aes(x=`month(date)`,y= monthly_downloads))+
#Add line
geom_line(alpha=0.5, color="coral2")+
geom_point(color="purple")+
scale_x_continuous(breaks=c(seq(1,12,1)))+
#Add nice commas y axis
scale_y_continuous(labels=comma_format())+
#Add title
labs(title="Monthly R downloads around the world",
y="Downloads",
x="Week")+
facet_wrap(~sub_region, scales="free")
r_downloads%>%
#Group by the month of the year
group_by(month(date), sub_region)%>%
#Count downloads by the month of the year
summarise(monthly_downloads=n())%>%
#Pipe to make a plot
ggplot(aes(x=`month(date)`,y= monthly_downloads))+
#Add line
geom_line(alpha=0.5, color="coral2")+
geom_point(color="purple")+
scale_x_continuous(breaks=c(seq(1,12,1)))+
#Add nice commas y axis
scale_y_continuous(labels=comma_format())+
#Add title
labs(title="Monthly R downloads around the world",
y="Downloads",
x="Week")+
facet_wrap(~sub_region, scales="free")
r_downloads%>%
#Group by the month of the year
group_by(month(date), sub_region)%>%
#Count downloads by the month of the year
summarise(monthly_downloads=n())%>%
#Pipe to make a plot
ggplot(aes(x=`month(date)`,y= monthly_downloads))+
#Add line
geom_line(alpha=0.5, color="coral2")+
geom_point(color="coral2")+
scale_x_continuous(breaks=c(seq(1,12,1)))+
#Add nice commas y axis
scale_y_continuous(labels=comma_format())+
#Add title
labs(title="Monthly R downloads around the world",
y="Downloads",
x="Week")+
facet_wrap(~sub_region, scales="free")
blogdown::serve_site()
r_downloads%>%
#Group by the month of the year
group_by(month(date), sub_region)%>%
#Count downloads by the month of the year
summarise(monthly_downloads=n())%>%
#Pipe to make a plot
ggplot(aes(x=`month(date)`,y= monthly_downloads))+
#Add line
geom_line(alpha=0.5, color="coral2")+
geom_point(color="coral2")+
scale_x_continuous(breaks=c(seq(1,12,1)))+
#Add nice commas y axis
scale_y_continuous(labels=comma_format())+
#Add title
labs(title="Monthly R downloads around the world",
y="Downloads",
x="Week")+
facet_wrap(~sub_region, scales="free")
r_downloads%>%
#Group by the month of the year
group_by(month(date), sub_region)%>%
#Count downloads by the month of the year
summarise(monthly_downloads=n())%>%
#Pipe to make a plot
ggplot(aes(x=`month(date)`,y= monthly_downloads))+
#Add line
geom_line(alpha=0.5, color="coral2")+
geom_point(color="coral2")+
scale_x_continuous(breaks=c(seq(1,12,1)))+
#Add nice commas y axis
scale_y_continuous(labels=comma_format())+
#Add title
labs(title="Monthly R downloads around the world",
y="Downloads",
x="Week")+
facet_wrap(~sub_region, scales="free")
r_downloads%>%
#Group by the month of the year
group_by(month(date), sub_region)%>%
#Count downloads by the month of the year
summarise(monthly_downloads=n())%>%
#Pipe to make a plot
ggplot(aes(x=`month(date)`,y= monthly_downloads))+
#Add line
geom_line(alpha=0.5, color="coral2")+
geom_point(color="coral2")+
scale_x_continuous(breaks=c(seq(1,12,1)))+
#Add nice commas y axis
scale_y_continuous(labels=comma_format())+
#Add title
labs(title="Monthly R downloads around the world",
y="Downloads",
x="Week")+
facet_wrap(~sub_region, scales="free")
monthly_downloads_per_region <- r_downloads%>%
#Group by the month of the year
group_by(month(date), sub_region)%>%
#Count downloads by the month of the year
summarise(monthly_downloads=n())%>%
#Pipe to make a plot
ggplot(aes(x=`month(date)`,y= monthly_downloads))+
#Add line
geom_line(alpha=0.5, color="coral2")+
geom_point(color="coral2")+
scale_x_continuous(breaks=c(seq(1,12,1)))+
#Add nice commas y axis
scale_y_continuous(labels=comma_format())+
#Add title
labs(title="Monthly R downloads around the world",
y="Downloads",
x="Week")+
facet_wrap(~sub_region, scales="free")
monthly_downloads_per_region
# Chunk 1: setup
x <-
c("dplyr",
"knitr",
"here",
"scales",
"magrittr",
"ggplot2",
"cowplot",
"tidyverse",
"Metrics",
"rsample",
"broom",
"sf",
"rgdal",
"summarytools",
"leaflet",
"tmap",
"tmaptools",
"lubridate")
lapply(x, require, character.only = TRUE)
opts_chunk$set(echo = FALSE,
warning = FALSE,
error = FALSE,
message = FALSE,
collapse = TRUE,
comment = NA,
tidy = TRUE,
include = FALSE)
theme_set(theme_light())
options(
digits=3,
scipen = 999
)
knit_hooks$set(inline = function(x) {
prettyNum(round(x,2), big.mark=",")
})
scale_colour_discrete <- function(...) scale_colour_brewer(..., palette="Paired")
scale_fill_discrete <- function(...) scale_fill_brewer(... , palette="Paired")
r_downloads <- readRDS(file=here::here("static","data","r-downloads.rds"))
r_downloads <- na.omit(r_downloads)%>%
filter(date<"2018-10-20")
# Chunk 2: read-country-codes-and-pop-and-map
iso_codes <- read_csv(here::here("static","data","iso_countries.csv"))
pop <-read_csv(here::here("static","data","country_populations.csv"))
map_path <- here::here("static","data","world_shapefile","world_shapefile.shp")
world <- sf::st_read(map_path)
# Chunk 3: merge-country-codes
r_downloads%<>%
full_join(iso_codes, by=c("country"="iso"))%>%
filter(!is.na(sub_region))
# Chunk 4: downloads-by-country
r_downloads%>%
group_by(name)%>%
summarise(n=n())%>%
filter(!is.na(n))%>%
arrange(desc(n))->downloads_per_country
# Chunk 5: plot-top-10-countries
downloads_per_country%>%
arrange(desc(n))%>%
head(10)%>%
mutate(name=fct_reorder(name,n))%>%
ggplot(aes(name,n,fill=name))+
geom_col()+
expand_limits(y=0)+
coord_flip()+
scale_y_continuous(labels=comma_format())+
labs(title="Top 10 countries by R downloads in 2017/18",
x="",
y="Downloads")+
theme(legend.position = "none")
# Chunk 6: create-tibble-with-pop-and-users-only
full_maps <- downloads_per_country%>%
full_join(iso_codes, by=c("name"="name"))%>%
filter(!is.na(sub_region))%>%
left_join(pop, by=c("name"="name"))%>%
select(n, name, iso_3, region, sub_region, pop_2018)%>%
mutate(n_capita=n/pop_2018)%>%
filter(!is.na(n_capita),
pop_2018!=0)
# Chunk 7: merge-full-maps-and-map-path
world_full <- world%>%
left_join(full_maps, by=c("ISO3"="iso_3"))
# Chunk 8: create-total-downloads-map
n_map <- tm_shape(world_full) +
tm_borders(col="black", lwd=0.1)+
tm_fill(col="n",n=4, style="jenks", palette = get_brewer_pal("BuPu", n = 4, contrast = c(0.13, 0.9))) +
tm_layout(main.title = "Total R downloads in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
# Chunk 9: plot-total-downloads-map
n_map
# Chunk 10: plot-top-10-countries-per-capita
full_maps%>%
arrange(desc(n_capita))%>%
head(10)%>%
mutate(name=fct_reorder(name,n_capita))%>%
ggplot(aes(name,n_capita,fill=name))+
geom_col()+
expand_limits(y=0)+
coord_flip()+
scale_y_continuous(labels=comma_format())+
labs(title="Top 10 countries by R downloads per capita in 2017/18",
x="",
y="Downloads")+
theme(legend.position = "none")
# Chunk 11: create-downloads-per-capita-map
n_capita_map <- tm_shape(world_full) +
tm_borders(col="black", lwd=0.1)+
tm_fill(col="n_capita",n=4, style="jenks", palette = get_brewer_pal("OrRd", n = 4, contrast = c(0.13, 0.9))) +
tm_layout(main.title = "R downloads per capita in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
# Chunk 12: plot-downloads-per-capita-map
n_capita_map
monthly_downloads_per_region
monthly_downloads_per_region <- r_downloads%>%
#Group by the month of the year
group_by(month(date), sub_region)%>%
#Count downloads by the month of the year
summarise(monthly_downloads=n())%>%
#Pipe to make a plot
ggplot(aes(x=`month(date)`,y= monthly_downloads))+
#Add line
geom_line(alpha=0.5, color="coral2")+
geom_point(color="coral2")+
scale_x_continuous(breaks=c(seq(1,12,1)))+
#Add nice commas y axis
scale_y_continuous(labels=comma_format())+
#Add title
labs(title="Monthly R downloads around the world",
y="Downloads",
x="Week")+
facet_wrap(~sub_region, scales="free", nrow = 6)
monthly_downloads_per_region
blogdown::serve_site()
monthly_downloads_per_region
