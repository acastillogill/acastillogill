x <-
c("tidyverse",
"openxlsx)",
"bookdown",
"fcuk",
"knitr",
"kableExtra",
"formatR",
"plyr",
"biomod2",
"ggmap",
"lubridate",
"stringr",
"fuzzyjoin")
lapply(x, require, character.only = TRUE)
opts_chunk$set(echo = FALSE,
message=FALSE,
warning=FALSE,
include=FALSE)
#Read UNI_LISBOA
uni_lisboa<-read.csv("uni_lisboa.csv",row.names = NULL,sep="\t",stringsAsFactors = FALSE)
#Read museo_nacional
museo_nacional<-read.csv("museo_nacional.csv",row.names = NULL,sep="\t",stringsAsFactors = FALSE)
#Read mcnb
mcnb<-read.csv("mcnb.csv",row.names = NULL,sep="\t",stringsAsFactors = FALSE)
#Read edp
edp<-read.csv("edp.csv",row.names = NULL,sep="\t",stringsAsFactors = FALSE)
#Read oviedo
oviedo<-read.csv("oviedo.csv",row.names = NULL,sep="\t",stringsAsFactors = FALSE)
#Read andalusia
andalusia<-read.csv("andalusia.csv",row.names = NULL,sep="\t",stringsAsFactors = FALSE)
library(readr)
dataset <- read_csv(NULL)
View(dataset)
#Read UNI_LISBOA
uni_lisboa<-read.csv("uni_lisboa.csv",row.names = NULL,sep="\t",stringsAsFactors = FALSE)
#Read museo_nacional
museo_nacional<-read.csv("museo_nacional.csv",row.names = NULL,sep="\t",stringsAsFactors = FALSE)
#Read mcnb
mcnb<-read.csv("mcnb.csv",row.names = NULL,sep="\t",stringsAsFactors = FALSE)
#Read edp
edp<-read.csv("edp.csv",row.names = NULL,sep="\t",stringsAsFactors = FALSE)
#Read oviedo
oviedo<-read.csv("/Volumes/TOSHIBAEXT/google_drive/PhD/Database/invasive_database/oviedo.csv",row.names = NULL,sep="\t",stringsAsFactors = FALSE)
#Read andalusia
andalusia<-read.csv("andalusia.csv",row.names = NULL,sep="\t",stringsAsFactors = FALSE)
View(oviedo)
#Read UNI_LISBOA
uni_lisboa<-read.csv("/Volumes/TOSHIBAEXT/google_drive/PhD/Database/invasive_database/uni_lisboa.csv",row.names = NULL,sep="\t",stringsAsFactors = FALSE)
#Read museo_nacional
museo_nacional<-read.csv("/Volumes/TOSHIBAEXT/google_drive/PhD/Database/invasive_database/museo_nacional.csv",row.names = NULL,sep="\t",stringsAsFactors = FALSE)
#Read mcnb
mcnb<-read.csv("/Volumes/TOSHIBAEXT/google_drive/PhD/Database/invasive_database/mcnb.csv",row.names = NULL,sep="\t",stringsAsFactors = FALSE)
#Read edp
edp<-read.csv("/Volumes/TOSHIBAEXT/google_drive/PhD/Database/invasive_database/edp.csv",row.names = NULL,sep="\t",stringsAsFactors = FALSE)
#Read oviedo
oviedo<-read.csv("/Volumes/TOSHIBAEXT/google_drive/PhD/Database/invasive_database/oviedo.csv",row.names = NULL,sep="\t",stringsAsFactors = FALSE)
#Read andalusia
andalusia<-read.csv("/Volumes/TOSHIBAEXT/google_drive/PhD/Database/invasive_database/andalusia.csv",row.names = NULL,sep="\t",stringsAsFactors = FALSE)
GBIF <- list(uni_lisboa,
museo_nacional,
mcnb,
edp,
oviedo,
andalusia)
names(GBIF) <- c("uni_lisboa",
"museo_nacional",
"mcnb",
"edp",
"oviedo",
"andalusia")
GBIF <- lapply(GBIF, function(x) {
#Create a function that makes sure criteria are in place.
x <- x%>%
dplyr::filter(!is.na(decimallatitude),#check latitude
!is.na(decimallongitude), #check longitude
!is.na(year),#check year
countrycode=="PT"|#contains Portugal OR
countrycode=="ES",#contains Spain
class=="Insecta")#Class is Insecta)
})
#Create date for all datasets
GBIF <- lapply(GBIF, function(x) {
x <- x %>%
mutate(eventdate=ymd_hm(eventdate),
lastinterpreted=ymd_hm(lastinterpreted))
})
##Check the year range frequency for a particular dataset
lapply(GBIF, function(x){
x%>%
#count how many entries per year for all species
summarise(year_min=min(year), year_max=max(year))
})
##Check the species frequency for a particular dataset
lapply(GBIF, function(x){
x%>%
#count how many entries per species for all species
dplyr::count(scientificname,sort = TRUE)
})
#Load DAISIE list of invasive species
daisie<-read.csv("invasive_europe.csv",
stringsAsFactors = FALSE)
#Load DAISIE list of invasive species
daisie<-read.csv("/Volumes/TOSHIBAEXT/google_drive/PhD/Database/invasive_database/invasive_europe.csv",
stringsAsFactors = FALSE)
#Load DAISIE list of invasive species after 1950
after_1950<-read.csv("/Volumes/TOSHIBAEXT/google_drive/PhD/Database/invasive_database/after_1950.csv",
stringsAsFactors = FALSE)
cols <-c("order","invaded_country")
after_1950[cols] <- lapply(after_1950[cols], factor)
after_1950$year_first_record <- as.integer(after_1950$year_first_record)
after_1950[cols] <- lapply(after_1950[cols], factor)
after_1950$year_first_record <- as.integer(after_1950$year_first_record)
after_1950$invaded_country <-
revalue(after_1950$invaded_country,
c("Spain (canary islands)" = "Spain (Canary Islands)",
"Spain (Canary islands)" = "Spain (Canary Islands)",
"Spain (Balearic islands)" = "Spain (Balearic Islands)",
"norway (mainland)" = "Norway (mainland)",
"France (mainland" = "France (mainland)",
"France (Mainland)" = "France (mainland)",
"Greece (Mainland)"="Greece (mainland)"))
str(after_1950)
after_1950%>%
dplyr::filter(invaded_country=="Spain (Balearic islands)"|
invaded_country=="Spain (mainland)"|
invaded_country=="Portugal (mainland)")->spain_pt_1950
#Does museo_nacional$scientificname match by first word daisie$scientificname?
#Step 1: extract the first word mus
#Create vector first_word to museo nacional
museo_nacional$word<- word(museo_nacional$scientificname, 1,2)
# Step 2: match museo_nacional$word to the daisie$scientificname
spain_pt_1950 %>%
fuzzy_inner_join(museo_nacional,
by=c("species"="word"),
match_fun = str_detect)%>%
dplyr::count(scientificname,sort=TRUE)
#Read UNI_LISBOA
uni_lisboa<-read.csv("/Volumes/TOSHIBAEXT/google_drive/PhD/Database/invasive_database/uni_lisboa.csv",row.names = NULL,sep="\t",stringsAsFactors = FALSE)
#Read museo_nacional
museo_nacional<-read.csv("/Volumes/TOSHIBAEXT/google_drive/PhD/Database/invasive_database/museo_nacional.csv",row.names = NULL,sep="\t",stringsAsFactors = FALSE)
#Read mcnb
mcnb<-read.csv("/Volumes/TOSHIBAEXT/google_drive/PhD/Database/invasive_database/mcnb.csv",row.names = NULL,sep="\t",stringsAsFactors = FALSE)
#Read edp
edp<-read.csv("/Volumes/TOSHIBAEXT/google_drive/PhD/Database/invasive_database/edp.csv",row.names = NULL,sep="\t",stringsAsFactors = FALSE)
#Read oviedo
oviedo<-read.csv("/Volumes/TOSHIBAEXT/google_drive/PhD/Database/invasive_database/oviedo.csv",row.names = NULL,sep="\t",stringsAsFactors = FALSE)
#Read andalusia
andalusia<-read.csv("/Volumes/TOSHIBAEXT/google_drive/PhD/Database/invasive_database/andalusia.csv",row.names = NULL,sep="\t",stringsAsFactors = FALSE)
GBIF <- list(uni_lisboa,
museo_nacional,
mcnb,
edp,
oviedo,
andalusia)
names(GBIF) <- c("uni_lisboa",
"museo_nacional",
"mcnb",
"edp",
"oviedo",
"andalusia")
GBIF <- lapply(GBIF, function(x) {
#Create a function that makes sure criteria are in place.
x <- x%>%
dplyr::filter(
#!is.na(decimallatitude),#check latitude
#!is.na(decimallongitude), #check longitude
!is.na(year),#check year
countrycode=="PT"|#contains Portugal OR
countrycode=="ES",#contains Spain
class=="Insecta")#Class is Insecta)
})
#Does museo_nacional$scientificname match by first word daisie$scientificname?
#Step 1: extract the first word mus
#Create vector first_word to museo nacional
museo_nacional$word<- word(museo_nacional$scientificname, 1,2)
# Step 2: match museo_nacional$word to the daisie$scientificname
spain_pt_1950 %>%
fuzzy_inner_join(museo_nacional,
by=c("species"="word"),
match_fun = str_detect)%>%
dplyr::count(scientificname,sort=TRUE)
#Does uni_lisboa$scientificname match by first word daisie$scientificname?
#Step 1: extract the first word mus
#Create vector first_word to museo nacional
uni_lisboa$word<- word(uni_lisboa$scientificname, 1,2)
# Step 2: match uni_lisboa$word to the daisie$scientificname
spain_pt_1950 %>%
fuzzy_inner_join(uni_lisboa,
by=c("species"="word"),
match_fun = str_detect)%>%
dplyr::count(scientificname,sort=TRUE)
#Does mcnb$scientificname match by first word daisie$scientificname?
#Step 1: extract the first word mus
#Create vector first_word to museo nacional
mcnb$word<- word(mcnb$species, 1,2)
# Step 2: match mcnb$word to the daisie$scientificname
after_1950 %>%
fuzzy_inner_join(mcnb,
by=c("species"="word"),
match_fun = str_detect)%>%
dplyr::count(scientificname,sort=TRUE)
#Does oviedo$scientificname match by first word daisie$scientificname?
#Step 1: extract the first word mus
#Create vector first_word to museo nacional
oviedo$word<- word(oviedo$scientificname, 1,2)
# Step 2: match oviedo$word to the daisie$scientificname
after_1950%>%
fuzzy_inner_join(oviedo,
by=c("species"="word"),
match_fun = str_detect)%>%
dplyr::count(scientificname,sort=TRUE)
spain_pt_1950%>%
dplyr::count(order,sort=TRUE)
# Create a 2-way contingency table
table(spain_pt_1950$order)
# Create a 2-way contingency table
table(spain_pt_1950$year_first_record)
names(mmcnb)
names(mcnb)
after_1950 %>%
fuzzy_inner_join(mcnb,
by=c("species"="word"),
match_fun = str_detect)%>%
dplyr::select(scientificname,locality)
#Does mcnb$scientificname match by first word daisie$scientificname?
#Step 1: extract the first word mus
#Create vector first_word to museo nacional
mcnb$word<- word(mcnb$species, 1,2)
# Step 2: match mcnb$word to the daisie$scientificname
after_1950 %>%
fuzzy_inner_join(mcnb,
by=c("species"="word"),
match_fun = str_detect)%>%
dplyr::count(scientificname,locality,sort=TRUE)
#Does mcnb$scientificname match by first word daisie$scientificname?
#Step 1: extract the first word mus
#Create vector first_word to museo nacional
mcnb$word<- word(mcnb$species, 1,2)
# Step 2: match mcnb$word to the daisie$scientificname
after_1950 %>%
fuzzy_inner_join(mcnb,
by=c("species"="word"),
match_fun = str_detect)%>%
dplyr::count(scientificname,locality,sort=TRUE)
name(mcnb)
names(mcnb)
#Does mcnb$scientificname match by first word daisie$scientificname?
#Step 1: extract the first word mus
#Create vector first_word to museo nacional
mcnb$word<- word(mcnb$species, 1,2)
# Step 2: match mcnb$word to the daisie$scientificname
after_1950 %>%
fuzzy_inner_join(mcnb,
by=c("species"="word"),
match_fun = str_detect)%>%
dplyr::count(scientificname,locality,year,sort=TRUE)
#Does mcnb$scientificname match by first word daisie$scientificname?
#Step 1: extract the first word mus
#Create vector first_word to museo nacional
mcnb$word<- word(mcnb$species, 1,2)
# Step 2: match mcnb$word to the daisie$scientificname
after_1950 %>%
fuzzy_inner_join(mcnb,
by=c("species"="word"),
match_fun = str_detect)%>%
dplyr::count(scientificname,locality,year,sort=TRUE)%>%View()
#Does mcnb$scientificname match by first word daisie$scientificname?
#Step 1: extract the first word mus
#Create vector first_word to museo nacional
mcnb$word<- word(mcnb$species, 1,2)
# Step 2: match mcnb$word to the daisie$scientificname
after_1950 %>%
fuzzy_inner_join(mcnb,
by=c("species"="word"),
match_fun = str_detect)%>%
filter(!is.na(locality))%>%
dplyr::count(scientificname,locality,year,sort=TRUE)
#Does mcnb$scientificname match by first word daisie$scientificname?
#Step 1: extract the first word mus
#Create vector first_word to museo nacional
mcnb$word<- word(mcnb$species, 1,2)
# Step 2: match mcnb$word to the daisie$scientificname
after_1950 %>%
fuzzy_inner_join(mcnb,
by=c("species"="word"),
match_fun = str_detect)%>%
filter(!is.na(locality)|!"")%>%
dplyr::count(scientificname,locality,year,sort=TRUE)
#Does mcnb$scientificname match by first word daisie$scientificname?
#Step 1: extract the first word mus
#Create vector first_word to museo nacional
mcnb$word<- word(mcnb$species, 1,2)
# Step 2: match mcnb$word to the daisie$scientificname
after_1950 %>%
fuzzy_inner_join(mcnb,
by=c("species"="word"),
match_fun = str_detect)%>%
filter(!is.na(locality)|!=="")%>%
dplyr::count(scientificname,locality,year,sort=TRUE)
names(after_1950)
#Does mcnb$scientificname match by first word daisie$scientificname?
#Step 1: extract the first word mus
#Create vector first_word to museo nacional
mcnb$word<- word(mcnb$species, 1,2)
# Step 2: match mcnb$word to the daisie$scientificname
after_1950 %>%
fuzzy_inner_join(mcnb,
by=c("species"="word"),
match_fun = str_detect)%>%
filter(!is.na(locality)|!=="")%>%
dplyr::count(scientificname,locality,year,sort=TRUE)
#Does mcnb$scientificname match by first word daisie$scientificname?
#Step 1: extract the first word mus
#Create vector first_word to museo nacional
mcnb$word<- word(mcnb$species, 1,2)
# Step 2: match mcnb$word to the daisie$scientificname
after_1950 %>%
fuzzy_inner_join(mcnb,
by=c("species"="word"),
match_fun = str_detect)%>%
filter(!is.na(locality)|locality!="")
#Does mcnb$scientificname match by first word daisie$scientificname?
#Step 1: extract the first word mus
#Create vector first_word to museo nacional
mcnb$word<- word(mcnb$species, 1,2)
# Step 2: match mcnb$word to the daisie$scientificname
after_1950 %>%
fuzzy_inner_join(mcnb,
by=c("species"="word"),
match_fun = str_detect)%>%
filter(!is.na(locality)|locality!="")%>%
dplyr::count(scientificname,locality,year,sort=TRUE)
#Does mcnb$scientificname match by first word daisie$scientificname?
#Step 1: extract the first word mus
#Create vector first_word to museo nacional
mcnb$word<- word(mcnb$species, 1,2)
# Step 2: match mcnb$word to the daisie$scientificname
after_1950 %>%
fuzzy_inner_join(mcnb,
by=c("species"="word"),
match_fun = str_detect)%>%
filter(!is.na(locality)&&locality!="")%>%
dplyr::count(scientificname,
locality,
year,
sort=TRUE)
#Does mcnb$scientificname match by first word daisie$scientificname?
#Step 1: extract the first word mus
#Create vector first_word to museo nacional
mcnb$word<- word(mcnb$species, 1,2)
# Step 2: match mcnb$word to the daisie$scientificname
after_1950 %>%
fuzzy_inner_join(mcnb,
by=c("species"="word"),
match_fun = str_detect)%>%
filter(!is.na(locality)&locality!="")%>%
dplyr::count(scientificname,
locality,
year,
sort=TRUE)
#Does uni_lisboa$scientificname match by first word daisie$scientificname?
#Step 1: extract the first word mus
#Create vector first_word to museo nacional
uni_lisboa$word<- word(uni_lisboa$scientificname, 1,2)
# Step 2: match uni_lisboa$word to the daisie$scientificname
after_1950 %>%
fuzzy_inner_join(uni_lisboa,
by=c("species"="word"),
match_fun = str_detect)%>%
filter(!is.na(locality)&locality!="")%>%
dplyr::count(scientificname,
locality,
year,
sort=TRUE)
#Does oviedo$scientificname match by first word daisie$scientificname?
#Step 1: extract the first word mus
#Create vector first_word to museo nacional
oviedo$word<- word(oviedo$scientificname, 1,2)
# Step 2: match oviedo$word to the daisie$scientificname
after_1950 %>%
fuzzy_inner_join(oviedo,
by=c("species"="word"),
match_fun = str_detect)%>%
filter(!is.na(locality)&locality!="")%>%
dplyr::count(scientificname,
locality,
year,
sort=TRUE)
#Does museo_nacional$scientificname match by first word daisie$scientificname?
#Step 1: extract the first word mus
#Create vector first_word to museo nacional
museo_nacional$word<- word(museo_nacional$scientificname, 1,2)
# Step 2: match museo_nacional$word to the daisie$scientificname
after_1950 %>%
fuzzy_inner_join(museo_nacional,
by=c("species"="word"),
match_fun = str_detect)%>%
filter(!is.na(locality)&locality!="")%>%
dplyr::count(scientificname,
locality,
year,
sort=TRUE)
