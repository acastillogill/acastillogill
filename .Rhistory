cv_data_europe <- cv_split_europe%>%
#Create cross-validated data
mutate(train=map(splits, ~training(.x)),
validate=map(splits, ~testing(.x)))
# Chunk 38: creating-models-with-cross-validated-data-europe
cv_models_lm_europe <- cv_data_europe %>%
#Create models
mutate(model=map(train,~lm(formula=n ~ users, data = .x)))
# Chunk 39: extract-actual-and-predicted-values-europe
cv_prep_lm_europe <- cv_models_lm_europe %>%
#Create actual values
mutate(validate_actual=map(validate, ~ .x$n),
#Store predicted values
validate_predicted=map2(model, validate,~predict(.x,.y)))
# Chunk 40: calculate-MAE-europe
cv_eval_lm_europe <- cv_prep_lm_europe%>%
#Compute MAE
mutate(validate_mae=map2_dbl(validate_actual,validate_predicted, ~mae(actual=.x,predicted = .y)))
# Chunk 41: creating-train-test-data-americas
full_americas <- full_hdi%>%
filter(region=="Americas")
#Setting seed
downloads_split_americas <- initial_split(full_americas,prop=0.75)
#Store training_data
training_data_americas <-training(downloads_split_americas)
#Store testing_data
testing_data_americas <- testing(downloads_split_americas)
#Split the data into 3 folds
cv_split_americas <- vfold_cv(training_data_americas, v=3)
# Chunk 42: creating-train-and-validate-data-from-each-fold-americas
cv_data_americas <- cv_split_americas%>%
#Create cross-validated data
mutate(train=map(splits, ~training(.x)),
validate=map(splits, ~testing(.x)))
# Chunk 43: creating-models-with-cross-validated-data-americas
cv_models_lm_americas <- cv_data_americas %>%
#Create models
mutate(model=map(train,~lm(formula=n ~ users, data = .x)))
# Chunk 44: extract-actual-and-predicted-values-americas
cv_prep_lm_americas <- cv_models_lm_americas %>%
#Create actual values
mutate(validate_actual=map(validate, ~ .x$n),
#Store predicted values
validate_predicted=map2(model, validate,~predict(.x,.y)))
# Chunk 45: calculate-MAE-americas
cv_eval_lm_americas <- cv_prep_lm_americas%>%
#Compute MAE
mutate(validate_mae=map2_dbl(validate_actual,validate_predicted, ~mae(actual=.x,predicted = .y)))
# Chunk 46: creating-train-test-data-asia
full_asia <- full_hdi%>%
filter(region=="Asia")
#Setting seed
downloads_split_asia <- initial_split(full_asia,prop=0.75)
#Store training_data
training_data_asia <-training(downloads_split_asia)
#Store testing_data
testing_data_asia <- testing(downloads_split_asia)
#Split the data into 3 folds
cv_split_asia <- vfold_cv(training_data_asia, v=3)
# Chunk 47: creating-train-and-validate-data-from-each-fold-asia
cv_data_asia <- cv_split_asia%>%
#Create cross-validated data
mutate(train=map(splits, ~training(.x)),
validate=map(splits, ~testing(.x)))
# Chunk 48: creating-models-with-cross-validated-data-asia
cv_models_lm_asia <- cv_data_asia %>%
#Create models
mutate(model=map(train,~lm(formula=n ~ users, data = .x)))
# Chunk 49: extract-actual-and-predicted-values-asia
cv_prep_lm_asia <- cv_models_lm_asia %>%
#Create actual values
mutate(validate_actual=map(validate, ~ .x$n),
#Store predicted values
validate_predicted=map2(model, validate,~predict(.x,.y)))
# Chunk 50: calculate-MAE-asia
cv_eval_lm_asia <- cv_prep_lm_asia%>%
#Compute MAE
mutate(validate_mae=map2_dbl(validate_actual,validate_predicted, ~mae(actual=.x,predicted = .y)))
# Chunk 51: testing-the-final-model-europe
#Store the best model with traning data
best_model_europe <- lm(n~users, data=training_data_europe)
#Store test data
test_actual_europe <- testing_data_europe$n
#Use the best model on the the test data
test_predict_europe <-predict(best_model_europe,testing_data_europe)
#Compute mae
mae(test_actual_europe,test_predict_europe)
# Chunk 52: testing-the-final-model-americas
#Store the best model with traning data
best_model_americas <- lm(n~users, data=training_data_americas)
#Store test data
test_actual_americas <- testing_data_americas$n
#Use the best model on the the test data
test_predict_americas <-predict(best_model_americas,testing_data_americas)
#Compute mae
mae(test_actual_americas,test_predict_americas)
# Chunk 53: testing-the-final-model-asia
#Store the best model with traning data
best_model_asia <- lm(n~users, data=training_data_asia)
#Store test data
test_actual_asia <- testing_data_asia$n
#Use the best model on the the test data
test_predict_asia <-predict(best_model_asia,testing_data_asia)
#Compute mae
mae(test_actual_asia,test_predict_asia)
# Chunk 54: create-tibble-with-pop-and-users-only
full_maps <- downloads_per_country%>%
left_join(pop, by=c("name"="name"))%>%
select(country, n, name, iso_3, region, sub_region, pop_2018)%>%
mutate(n_capita=n/pop_2018)%>%
filter(!is.na(n_capita),
pop_2018!=0)
# Chunk 55: see-summary
#view(dfSummary(world_full))
# Chunk 56: read-map-as-sf-object
map_path <- here::here("static","data","world_shapefile","world_shapefile.shp")
world <- sf::st_read(map_path)
# Chunk 57: merge-full-maps-and-map-path
world_full <- world%>%
left_join(full_maps, by=c("ISO3"="iso_3"))
# Chunk 58: plot-n-downloads-per-capita
plot_downloads_per_capita <- tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout("R Downloads per Capita in 2017/18", title.size=.8, frame = FALSE)+
tm_scale_bar(breaks = c(0, 100, 200), size = 1)
tmap_leaflet(plot_downloads_per_capita)
# Chunk 59: plot-n-downloads
plot_total_downloads <- tm_shape(world_full)+
tm_polygons(col="n",n=4, style="jenks") +
tm_layout("Total R Downloads in 2017/18", title.size=.8, frame = FALSE)+
tm_scale_bar(breaks = c(0, 100, 200), size = 1)
tmap_leaflet(plot_total_downloads)
saveWidget(here::here("static","leaflet","plot_downloads_per_capita.html"))
saveWidget()
args(saveWidget)
saveWidget(plot_downloads_per_capita, here::here("static","leaflet","plot_downloads_per_capita.html"))
plot_downloads_per_capita <- tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout("R Downloads per Capita in 2017/18", title.size=.8, frame = FALSE)+
tm_scale_bar(breaks = c(0, 100, 200), size = 1)
saveWidget(plot_downloads_per_capita, here::here("static","leaflet","plot_downloads_per_capita.html"))
plot_downloads_per_capita <- tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout("R Downloads per Capita in 2017/18", title.size=.8, frame = FALSE)+
tm_scale_bar(breaks = c(0, 100, 200), size = 1)
saveWidget(plot_downloads_per_capita, here::here("static","leaflet","plot_downloads_per_capita.html"))
plot_downloads_per_capita <- tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout("R Downloads per Capita in 2017/18", title.size=.8, frame = FALSE)+
tm_scale_bar(breaks = c(0, 100, 200), size = 1)
saveWidget(plot_downloads_per_capita, here::here("static","leaflet","plot_downloads_per_capita.html"))
plot_downloads_per_capita <- tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout("R Downloads per Capita in 2017/18", title.size=.8, frame = FALSE)+
tm_scale_bar(breaks = c(0, 100, 200), size = 1)
saveWidget(plot_downloads_per_capita, here::here("static","leaflet","plot_downloads_per_capita.html"))
saveWidget(plot_downloads_per_capita, "plot_downloads_per_capita.html")
plot_downloads_per_capita <- tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout("R Downloads per Capita in 2017/18", title.size=.8, frame = FALSE)+
tm_scale_bar(breaks = c(0, 100, 200), size = 1)
saveWidget(plot_downloads_per_capita, here::here("static","leaflet","plot_downloads_per_capita.html"))
plot_downloads_per_capita <- tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout("R Downloads per Capita in 2017/18", title.size=.8, frame = FALSE)+
tm_scale_bar(breaks = c(0, 100, 200), size = 1)
widget_capita <- tmap_leaflet(plot_downloads_per_capita)
saveWidget(widget_capita, here::here("static","leaflet","plot_downloads_per_capita.html"))
setwd(currentWD)
saveWidget(widget_capita, here::here("static","leaflet","plot_downloads_per_capita.html"))
here::here("static","leaflet")
saveWidget(widget_capita, here::here("static","leaflet","plot_downloads_per_capita.html"))
currentWD <- getwd()
dir.create("static/leaflet", showWarnings = FALSE)
setwd("static/leaflet")
saveWidget(widget_capita , "plot_downloads_per_capita.html")
setwd(currentWD)
here::here()
<iframe seamless src="/static/leaflet/plot_downloads_per_capita/index.html" width="100%" height="500"></iframe>
blogdown::serve_site()
saveWidget(widget_capita, here::here("static","leaflet","plot_downloads_per_capita.html"))
blogdown::serve_site()
here::here("static","leaflet","plot_downloads_per_capita.html")
save_tmap(widget_capita, here::here("static","leaflet","plot_downloads_per_capita.html"))
tmap_save(widget_capita, here::here("static","leaflet","plot_downloads_per_capita.html"))
plot_downloads_per_capita <- tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout("R Downloads per Capita in 2017/18", title.size=.8, frame = FALSE)+
tm_scale_bar(breaks = c(0, 100, 200), size = 1)
widget_capita <- tmap_leaflet(plot_downloads_per_capita)
tmap_save(widget_capita, here::here("static","leaflet","plot_downloads_per_capita.html"))
class(widget_capita)
widget_capita
widget_capita <- tmap_leaflet(world_full)+ tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout("R Downloads per Capita in 2017/18", title.size=.8, frame = FALSE)+
tm_scale_bar(breaks = c(0, 100, 200), size = 1)
saveWidget(widget_capita, here::here("static","leaflet","plot_downloads_per_capita.html"))
tmap_mode("view")
widget_capita <- tmap_leaflet(world_full)+ tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout("R Downloads per Capita in 2017/18", title.size=.8, frame = FALSE)+
tm_scale_bar(breaks = c(0, 100, 200), size = 1)
saveWidget(widget_capita, here::here("static","leaflet","plot_downloads_per_capita.html"))
leaflet(width = "100%", height = "800px") %>%
# base layers
addTiles(group = "OpenStreeMap.Default") %>%
addPolygons(data = world_full, weight = 1, color = "black", smoothFactor = 0.3,
fillOpacity = 0.8, fillColor = ~n_capita,
label = ~paste0(name, ": ", formatC(n_capita, big.mark = "'")),
group = "Population Density (Europe)")
#saveWidget(widget_capita, #here::here("static","leaflet","plot_downloads_per_capita.html"))
leaflet(width = "100%", height = "800px") %>%
# base layers
addTiles(group = "OpenStreeMap.Default") %>%
addPolygons(data = world_full, weight = 1, color = "black", smoothFactor = 0.3,
fillOpacity = 0.8, fillColor = ~world_full$n_capita,
label = ~paste0(name, ": ", formatC(world_full$n_capita, big.mark = "'")),
group = "Population Density (Europe)")
#saveWidget(widget_capita, #here::here("static","leaflet","plot_downloads_per_capita.html"))
leaflet(width = "100%", height = "800px") %>%
# base layers
addTiles(group = "OpenStreeMap.Default") %>%
addPolygons(data = world_full,
fillColor = ~pal1(world_full$n_capita),
fillOpacity = 1,
color = "darkgrey",       ## color of borders between districts
weight = 1.5,            ## width of borders
popup = popup1,
group = "EOIs")
#saveWidget(widget_capita, #here::here("static","leaflet","plot_downloads_per_capita.html"))
leaflet(width = "100%", height = "800px") %>%
# base layers
addTiles(group = "OpenStreeMap.Default") %>%
addPolygons(data = world_full,
fillColor = ~pal1(world_full$n_capita),
fillOpacity = 1,
color = "darkgrey",       ## color of borders between districts
weight = 1.5,            ## width of borders
group = "EOIs")
#saveWidget(widget_capita, #here::here("static","leaflet","plot_downloads_per_capita.html"))
leaflet(width = "100%", height = "800px") %>%
# base layers
addTiles(group = "OpenStreeMap.Default") %>%
addPolygons(data = world_full,
fillColor = ~world_full$n_capita,
fillOpacity = 1,
color = "darkgrey",       ## color of borders between districts
weight = 1.5,            ## width of borders
group = "EOIs")
#saveWidget(widget_capita, #here::here("static","leaflet","plot_downloads_per_capita.html"))
tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout("R Downloads per Capita in 2017/18", title.size=.8, frame = FALSE)+
tm_scale_bar(breaks = c(0, 100, 200), size = 1)
tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout("R Downloads per Capita in 2017/18", title.size=.8, frame = FALSE)+
tm_scale_bar(breaks = c(0, 100, 200), size = 1)
tmap_mode("plot")
tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout("R Downloads per Capita in 2017/18", title.size=.8, frame = FALSE)+
tm_scale_bar(breaks = c(0, 100, 200), size = 1)
tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout("R Downloads per Capita in 2017/18", title.size=.8, frame = FALSE)+
tm_scale_bar(breaks = c(0, 100, 200), size = 1)+
tm_format("World")
tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout("R Downloads per Capita in 2017/18", title.size=.8, frame = FALSE)+
tm_scale_bar(breaks = c(0, 100, 200), size = 1)+
tm_format("World","The World")
tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks", tit) +
tm_layout("R Downloads per Capita in 2017/18", title.size=.8, frame = FALSE)+
tm_scale_bar(breaks = c(0, 100, 200), size = 1)+
tm_legend(position=c("left", "bottom"), bg.color="grey95", frame=TRUE)
tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout("R Downloads per Capita in 2017/18", title.size=.8, frame = FALSE)+
tm_scale_bar(breaks = c(0, 100, 200), size = 1)+
tm_legend(position=c("left", "bottom"), bg.color="grey95", frame=TRUE)
tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout("R Downloads per Capita in 2017/18", title.size=.8, frame = FALSE)+
tm_legend(position=c("left", "bottom"), bg.color="grey95", frame=TRUE)
tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout("R Downloads per Capita in 2017/18", title.size=.8, frame = FALSE)+
tm_legend(position=c("left", "bottom"), bg.color="grey95", frame=FALSE)
tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout("R Downloads per Capita in 2017/18", title.size=.8, frame = TRUE+
tm_legend(position=c("left", "bottom"), bg.color="grey95", frame=FALSE)
tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout("R Downloads per Capita in 2017/18", title.size=.8, frame = TRUE)+
tm_legend(position=c("left", "bottom"), bg.color="grey95", frame=FALSE)
tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout("R Downloads per Capita in 2017/18", title.size=.8, frame = TRUE)+
tm_legend(position=c("left", "bottom"), bg.color="grey95", frame=FALSE)
tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout("R Downloads per Capita in 2017/18", title.size=.8, frame = TRUE)+
tm_legend(position=c("left", "bottom"), bg.color="grey95", frame=FALSE)
tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout("R Downloads per Capita in 2017/18", title.size=.8, frame = TRUE)+
tm_legend(position=c("left", "bottom"), bg.color="grey95", frame=FALSE)
tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout("R Downloads per Capita in 2017/18", title.size=.8, frame = TRUE)+
tm_legend(position=c("left", "bottom"), bg.color="aliceblue", frame=FALSE)
tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout("R Downloads per Capita in 2017/18", title.size=.8, frame = TRUE)+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=FALSE)
tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout("R Downloads per Capita in 2017/18", title.size=.8, frame = TRUE, bg.color = "aliceblue")+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=FALSE)
tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout("R Downloads per Capita in 2017/18", title.size=.8, frame = TRUE, bg.color = "aliceblue", title.position = c("top","right"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=FALSE)
tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout("R Downloads per Capita in 2017/18", title.size=.8, frame = TRUE, bg.color = "aliceblue", title.position = c("right","top"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=FALSE)
tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout("R Downloads per Capita in 2017/18", title.size=.8, frame = TRUE, bg.color = "aliceblue", title.position = c("right","top",title.bg.color="FALSE"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=FALSE)
tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout("R Downloads per Capita in 2017/18", title.size=.8, frame = TRUE, bg.color = "aliceblue", title.position = c("right","top"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE)
tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout(main.title = "R Downloads per Capita in 2017/18", title.size=.8, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE)
tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout(main.title = "R Downloads per Capita in 2017/18",
main.title.size = 1, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE)
tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout(main.title = "R Downloads per Capita in 2017/18",
main.title.size = 5, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE)
tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout(main.title = "R Downloads per Capita in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE)
tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout(main.title = "R Downloads per capita in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE)
tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout(main.title = "R Downloads per capita in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout(main.title = "R Downloads per capita in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=2)
n_capita_map <- tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout(main.title = "R Downloads per capita in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
tmap_leaflet(n_capita_map, mode = "view", show = TRUE)
n_capita_map <- tm_shape(world_full) +
tm_bubbles(col="n_capita",n=4, style="jenks") +
tm_layout(main.title = "R Downloads per capita in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
tmap_leaflet(n_capita_map, mode = "view", show = TRUE)
n_capita_map <- tm_shape(world_full) +
tm_bubbles(col="n_capita",n=4, style="jenks") +
tm_layout(main.title = "R Downloads per capita in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
html_downloads_capita <- tmap_leaflet(n_capita_map, mode = "view", show = TRUE)
html_downloads_capita
n_capita_map <- tm_shape(world_full) +
tm_fill(col="n_capita",n=4, style="jenks") +
tm_layout(main.title = "R Downloads per capita in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
html_downloads_capita <- tmap_leaflet(n_capita_map, mode = "view", show = TRUE)
n_capita_map <- tm_shape(world_full) +
tm_fill(col="n_capita",n=4, style="jenks") +
tm_layout(main.title = "R Downloads per capita in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
html_downloads_capita <- tmap_leaflet(n_capita_map, mode = "view", show = TRUE)
n_capita_map <- tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout(main.title = "R Downloads per capita in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
html_downloads_capita <- tmap_leaflet(n_capita_map, mode = "view", show = TRUE)
n_capita_map <- tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout(main.title = "R Downloads per capita in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
html_downloads_capita <- tmap_leaflet(n_capita_map, mode = "plot", show = TRUE)
class(html_downloads_capita)
n_capita_map <- tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout(main.title = "R Downloads per capita in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
html_downloads_capita <- tmap_leaflet(n_capita_map, mode = "view", show = TRUE)
class(html_downloads_capita)
html_downloads_capita
n_capita_map <- tm_shape(world_full) +
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout(main.title = "R Downloads per capita in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
n_capita_map
n_capita_map <- tm_shape(world_full) +
tm_borders(col="white")+
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout(main.title = "R Downloads per capita in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
n_capita_map
n_capita_map <- tm_shape(world_full) +
tm_borders(col="black")+
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout(main.title = "R Downloads per capita in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
n_capita_map
n_capita_map <- tm_shape(world_full) +
tm_borders(col="black", lwd=0.5)+
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout(main.title = "R Downloads per capita in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
n_capita_map
n_capita_map <- tm_shape(world_full) +
tm_borders(col="black", lwd=0.1)+
tm_polygons(col="n_capita",n=4, style="jenks") +
tm_layout(main.title = "R Downloads per capita in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
n_capita_map
n_capita_map <- tm_shape(world_full) +
tm_borders(col="black", lwd=0.1)+
tm_fill(col="n_capita",n=4, style="jenks") +
tm_layout(main.title = "R Downloads per capita in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
n_capita_map
tmaptools::palette_explorer()
n_capita_map <- tm_shape(world_full) +
tm_borders(col="black", lwd=0.1)+
tm_fill(col="n_capita",n=4, style="jenks", palette = "virids") +
tm_layout(main.title = "R Downloads per capita in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
n_capita_map
n_capita_map <- tm_shape(world_full) +
tm_borders(col="black", lwd=0.1)+
tm_fill(col="n_capita",n=4, style="jenks", palette = "viridis") +
tm_layout(main.title = "R Downloads per capita in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
n_capita_map
tmaptools::palette_explorer()
get_brewer_pal("BrBG", n = 4, contrast = c(0.37, 0.77))
n_capita_map <- tm_shape(world_full) +
tm_borders(col="black", lwd=0.1)+
tm_fill(col="n_capita",n=4, style="jenks", palette = get_brewer_pal("BrBG", n = 4, contrast = c(0.37, 0.77))) +
tm_layout(main.title = "R Downloads per capita in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
n_capita_map
tmaptools::palette_explorer()
n_capita_map <- tm_shape(world_full) +
tm_borders(col="black", lwd=0.1)+
tm_fill(col="n_capita",n=4, style="jenks", palette = get_brewer_pal("YlOrRd", n = 4, contrast = c(0.13, 0.9))) +
tm_layout(main.title = "R Downloads per capita in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
n_capita_map
n_capita_map <- tm_shape(world_full) +
tm_borders(col="black", lwd=0.1)+
tm_fill(col="n_capita",n=4, style="jenks", palette = get_brewer_pal("BuPu", n = 4, contrast = c(0.13, 0.9))) +
tm_layout(main.title = "Total R downloads in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
n_capita_map
blogdown::serve_site()
n_capita_map <- tm_shape(world_full) +
tm_borders(col="black", lwd=0.1)+
tm_fill(col="n_capita",n=4, style="jenks", palette = get_brewer_pal("YlOrRd", n = 4, contrast = c(0.13, 0.9))) +
tm_layout(main.title = "R Downloads per capita in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
n_capita_map
