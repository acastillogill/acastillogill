Shelf = row.names(.))%>%
colnames(c("Cluster","Number of cereals"))%>%
kable()%>%
kable_styling(full_width=F)
table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)%>%
as_tibble()%>%
mutate(
Shelf = row.names(.))%>%
colnames(c("Cluster","Number of cereals"))%>%
kable()%>%
kable_styling(full_width=F)
table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)%>%
as_tibble()%>%
mutate(
Shelf = row.names(.))%>%
rename(c("Cluster","Number of cereals"))%>%
kable()%>%
kable_styling(full_width=F)
table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)%>%
as_tibble()%>%
mutate(Shelf = row.names(.))
table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)
class(table(cereals_k2_complete$shelf,cereals_k2_complete$cluster))
table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)%>%
as_tibble("1","2")
table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)%>%
colnames(c("Cluster","Number of cereals"))
table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)%>%
colnames(c("Cluster","Number of cereals"))%>%
as_tibble()
table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)%>%
rename(c("Cluster","Number of cereals"))
shelf_cluster <- table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)
colnames(shelf_cluster) <- c("Cluster","Number of cereals")
shelf_cluster
shelf_cluster%>%
as_tibble()%>%
รง
shelf_cluster%>%
as_tibble()%>%
mutate(Shelf = row.names(.))%>%
kable()%>%
kable_styling(full_width=F)
shelf_cluster%>%
as_tibble()%>%
mutate(Shelf = row.names(.))
class(shelf_cluster)
shelf_cluster%>%
as_tibble()%>%
kable()
shelf_cluster <- table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)
colnames(shelf_cluster) <- c("Cluster","Number of cereals")
shelf_cluster%>%
kable()%>%
kable_styling(full_width=F)
shelf_cluster <- table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)
colnames(shelf_cluster) <- c("Cluster","Number of cereals")
shelf_cluster%>%
kable(row.names = TRUE)%>%
kable_styling(full_width=F)
library(formattable)
mutate(
car = row.names(.),
shelf_cluster <- table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)
colnames(shelf_cluster) <- c("Cluster","Number of cereals")
shelf_cluster%>%
mutate(
car = row.names(.))%>%
kable(row.names = TRUE)%>%
kable_styling(full_width=F)
shelf_cluster <- as.data.frame(shelf_cluster)
shelf_cluster
shelf_cluster <- table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)
colnames(shelf_cluster) <- c("Cluster","Number of cereals")
shelf_cluster <- as.tibble(shelf_cluster)
shelf_cluster%>%
mutate(
car = row.names(.))%>%
kable(row.names = TRUE)%>%
kable_styling(full_width=F)
shelf_cluster
colnames(shelf_cluster) <- c("Cluster","Number of cereals")
shelf_cluster <- as.tibble(shelf_cluster)
complete_count
blogdown::serve_site()
hclust
hc_cereals_complete$height
library(dendextend)
dend_cereals <- as.dendrogram(hc_cereals_complete)
dend_colored <- color_branches(dend_cereals, h=11)
plot(dend_colored)
dend_cereals <- as.dendrogram(hc_cereals_complete)
dend_colored <- color_branches(dend_cereals, k=2)
plot(dend_colored)
dend_cereals <- as.dendrogram(hc_cereals_complete)
dend_colored <- color_branches(dend_cereals, h=10)
plot(dend_colored)
dend_cereals <- as.dendrogram(hc_cereals_complete)
dend_colored <- color_branches(dend_cereals, k=2)
plot(dend_colored)
hc_cereals_complete %>%
group_by(cluster) %>%
summarise_all(funs(mean(.))
hc_cereals_complete %>%
group_by(cluster) %>%
summarise_all(funs(mean(.)))
hc_k2_complete %>%
group_by(cluster) %>%
summarise_all(funs(mean(.)))
cereals_k2_complete %>%
group_by(cluster) %>%
summarise_all(funs(mean(.)))
names(cereals_k2_complete)
cereals_k2_complete %>%
select(-shelf,-name,-mfr,-type)%>%
group_by(cluster) %>%
summarise_all(funs(mean(.)))
cereals_k2_complete %>%
select(-shelf,-name,-mfr,-type)%>%
group_by(cluster) %>%
summarise_all(funs(mean(.)))%>%
kable()%>%
kable_styling()
complete_count$n
cereals_k2_complete %>%
cbind(complete_count$n)
cereals_k2_complete %>%
rbind(complete_count$n)
cereals_k2_complete %>%
select(-shelf,-name,-mfr,-type)%>%
group_by(cluster) %>%
summarise_all(funs(mean(.)))%>%
cbind(complete_count$n)
ggplot(cereals_k2_complete, aes(x = sugars, y = shelf, color = factor(cluster))) +
geom_point(alpha=0.5)+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=2, size=3, segment.alpha = 0.5)+
scale_y_continuous(breaks=c(1,2,3))+
labs(title="Which shelf has the most sugary cereals?",
x="Sugar content per serving",
y="Supermarket shelf: from the floor (1) to the top (3)")
blogdown::serve_site()
# Chunk 1: setup
x <-
c("dplyr",
"knitr",
"here",
"scales",
"magrittr",
"ggplot2",
"cowplot",
"tidyverse",
"Metrics",
"rsample",
"broom",
"sf",
"rgdal",
"summarytools",
"tmap",
"tmaptools",
"lubridate",
"RColorBrewer",
"hrbrthemes",
"ggrepel",
"dummies",
"stats",
"ggrepel",
"kableExtra",
"dendextend")
lapply(x, require, character.only = TRUE)
opts_chunk$set(echo = FALSE,
warning = FALSE,
error = FALSE,
message = FALSE,
collapse = TRUE,
comment = NA,
tidy = TRUE,
include = FALSE,
fig.height=10,
fig.width=14)
theme_set(theme_ipsum_rc())
options(
digits=4,
scipen = 999
)
cereals <- read_csv(here::here("static","data","cereals.csv"))
# Chunk 2: scaling-data
#Remove categorical variables
num_cereals <- cereals[,4:16]
#Remove shelf
num_cereals$shelf <- NULL
#scale numeric variables
num_cereals <- scale(num_cereals)
#Calculate distances
dist_cereals <- dist(num_cereals, method = "euclidean")
# Chunk 3: hierarchical-clustering-complete
#Hierarchical clustering by complete linkage
hc_cereals_complete <- hclust(dist_cereals, method = "complete")
#Selecting two clusters
clusters_k2_complete <- cutree(hc_cereals_complete, k=2)
#Appending the clusters to all the dataset
cereals_k2_complete <- mutate(cereals, cluster=clusters_k2_complete)
complete_count <- count(cereals_k2_complete, cluster)
# Chunk 4: hierarchical-clustering-single
#Hierarchical clustering by single linkage
hc_cereals_single <- hclust(dist_cereals, method = "single")
#Selecting two clusters
clusters_k2_single <- cutree(hc_cereals_single, k=2)
#Appending the clusters to all the dataset
cereals_k2_single <- mutate(cereals, cluster=clusters_k2_single)
single_count <- count(cereals_k2_single, cluster)
# Chunk 5: hierarchical-clustering-average
#Hierarchical clustering by average linkage
hc_cereals_average <- hclust(dist_cereals, method = "average")
#Selecting two clusters
clusters_k2_average <- cutree(hc_cereals_average, k=2)
#Appending the clusters to all the dataset
cereals_k2_average <- mutate(cereals, cluster=clusters_k2_average)
average_count <- count(cereals_k2_average, cluster)
# Chunk 6: dendrograms
dend_cereals <- as.dendrogram(hc_cereals_complete)
dend_colored <- color_branches(dend_cereals, k=2)
plot(dend_colored)
# Chunk 7: table-counting-sugar-shelf
shelf_cluster <- table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)
colnames(shelf_cluster) <- c("Cluster 1","    Cluster 2")
shelf_cluster%>%
kable(row.names = TRUE, caption="The top shelf (3), has an equal quantity of cereals belonging to either cluster. The bottom shelf has almost twice as doubl cluster 2 cereals. Finally, the middle shelf has almost as three times cluster 2 cereals.")%>%
kable_styling()
# Chunk 8: mean-for-each-cluster
cereals_k2_complete %>%
select(-shelf,-name,-mfr,-type)%>%
group_by(cluster) %>%
summarise_all(funs(mean(.)))%>%
cbind(complete_count$n)%>%
kable(caption="")%>%
kable_styling()
# Chunk 9: plot-sugar-shelf
ggplot(cereals_k2_complete, aes(x = sugars, y = shelf, color = factor(cluster))) +
geom_point(alpha=0.5)+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=2, size=3, segment.alpha = 0.5)+
scale_y_continuous(breaks=c(1,2,3))+
labs(title="Which shelf has the most sugary cereals?",
x="Sugar content per serving",
y="Supermarket shelf: from the floor (1) to the top (3)")
95.67/114.04
114.04/95.67
1.33/1.33
help("kmeans")
km_cereals <- kmeans(dist_cereals, centers=2)
km_cereals
#K-means clustering with two clusters
km_cereals <- kmeans(dist_cereals, centers=2)
#Appending the clusters to all the dataset
cereals_km_clusters <- mutate(cereals, cluster=km_cereals)
kmeans_count <- count(cereals_km_clusters , cluster)
km_cereals <- kmeans(dist_cereals, centers=2)
km_cereals
#K-means clustering with two clusters
km_cereals <- kmeans(dist_cereals, centers=2)
#Appending the clusters to all the dataset
cereals_km_clusters <- mutate(cereals, cluster=km_cereals$cluster)
kmeans_count <- count(cereals_km_clusters , cluster)
kmeans_count
ggplot(cereals_km_clusters, aes(x = sugars, y = shelf, color = factor(cluster))) +
geom_point(alpha=0.5)+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=2, size=3, segment.alpha = 0.5)+
scale_y_continuous(breaks=c(1,2,3))+
labs(title="Which shelf has the most sugary cereals?",
x="Sugar content per serving",
y="Supermarket shelf: from the floor (1) to the top (3)")
#K-means clustering with two clusters
km_cereals <- kmeans(dist_cereals, centers=2)
#Appending the clusters to all the dataset
cereals_km_clusters <- mutate(cereals, cluster=km_cereals$cluster)
kmeans_count <- count(cereals_km_clusters , cluster)
cereals_km_clusters  %>%
select(-shelf,-name,-mfr,-type)%>%
group_by(cluster) %>%
summarise_all(funs(mean(.)))%>%
cbind(complete_count$n)
#K-means clustering with two clusters
km_cereals <- kmeans(dist_cereals, centers=2)
#Appending the clusters to all the dataset
cereals_km_clusters <- mutate(cereals, cluster=km_cereals$cluster)
kmeans_count <- count(cereals_km_clusters , cluster)
cereals_km_clusters  %>%
select(-shelf,-name,-mfr,-type)%>%
group_by(cluster) %>%
summarise_all(funs(mean(.)))%>%
cbind(kmeans_count$n)
ggplot(cereals_k2_complete, aes(x = sugars, y = shelf, color = factor(cluster))) +
geom_point(alpha=0.5)+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=2, size=3, segment.alpha = 0.5)+
scale_y_continuous(breaks=c(1,2,3))+
labs(title="Which shelf has the most sugary cereals?",
x="Sugar content per serving",
y="Supermarket shelf: from the floor (1) to the top (3)")
ggplot(cereals_km_clusters, aes(x = calories, y = sugars, color = factor(cluster))) +
geom_point(alpha=0.5)+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=2, size=3, segment.alpha = 0.5)+
scale_y_continuous(breaks=c(1,2,3))+
labs(title="Which shelf has the most sugary cereals?",
x="Sugar content per serving",
y="Supermarket shelf: from the floor (1) to the top (3)")
ggplot(cereals_km_clusters, aes(x = calories, y = sugars, color = factor(cluster))) +
geom_point(alpha=0.5)+
scale_color_manual(values=c( "#E31A1C", "#1F78B4" ))+
geom_text_repel(aes(label=name), force=2, size=3, segment.alpha = 0.5)+
scale_y_continuous(breaks=c(1,2,3))+
labs(title="Which shelf has the most sugary cereals?",
x="Sugar content per serving",
y="Supermarket shelf: from the floor (1) to the top (3)")
#K-means clustering with two clusters
km_cereals <- kmeans(dist_cereals, centers=3)
#Appending the clusters to all the dataset
cereals_km_clusters <- mutate(cereals, cluster=km_cereals$cluster)
kmeans_count <- count(cereals_km_clusters , cluster)
cereals_km_clusters  %>%
select(-shelf,-name,-mfr,-type)%>%
group_by(cluster) %>%
summarise_all(funs(mean(.)))%>%
cbind(kmeans_count$n)
tot_withinss <- map_dbl(1:10, function(k){
model <- kmeans(x=lineup, centers=k)
model$tot.withinss
})
elbow_df <- data.frame(
k=1:10,
tot_withinss=tot_withinss
)
tot_withinss <- map_dbl(1:10, function(k){
model <- kmeans(x=lineup, centers=k)
model$tot.withinss
})
elbow_df <- data.frame(
k=1:10,
tot_withinss=tot.withinss
)
tot_withinss <- map_dbl(1:10, function(k){
model <- kmeans(x=dist_cereals, centers=k)
model$tot.withinss
})
elbow_df <- data.frame(
k=1:10,
tot_withinss=tot.withinss
)
cereals_km_clusters$cluster
tot_withinss <- map_dbl(1:10, function(k){
model <- kmeans(x=dist_cereals, centers=k)
model$tot.withinss
})
elbow_df <- data.frame(
k=1:10,
tot_withinss=tot_withinss
)
elbow_df
tot_withinss <- map_dbl(1:10, function(k){
model <- kmeans(x=dist_cereals, centers=k)
model$tot.withinss
})
elbow_df <- data.frame(
k=1:10,
tot_withinss=tot_withinss
)
ggplot(elbow_df, aes(x=k, y=tot_withinss)) +
geom_line()+
scale_x_continuous(breaks = 1:10)
tot_withinss <- map_dbl(1:10, function(k){
model <- kmeans(x=dist_cereals, centers=k)
model$tot.withinss
})
elbow_df <- data.frame(
k=1:10,
tot_withinss=tot_withinss
)
ggplot(elbow_df, aes(x=k, y=tot_withinss)) +
geom_line()+
+geom_point()+
scale_x_continuous(breaks = 1:10)
tot_withinss <- map_dbl(1:10, function(k){
model <- kmeans(x=dist_cereals, centers=k)
model$tot.withinss
})
elbow_df <- data.frame(
k=1:10,
tot_withinss=tot_withinss
)
ggplot(elbow_df, aes(x=k, y=tot_withinss)) +
geom_line()+
geom_point()+
scale_x_continuous(breaks = 1:10)
library(clsuter)
library(cluster)
pam_k2 <- pam(dist_cereals, k=2)
aom_k2
pam_k2
pam_k2 <- pam(dist_cereals, k=2)
sil_plot <- silhouette(pam_k2)
plot(sil_plot)
pam_k2 <- pam(dist_cereals, k=3)
sil_plot <- silhouette(pam_k2)
plot(sil_plot)
sil_width <- map_dbl(2:10, function(k){
model <- pam(x=dist_cereals, centers=k)
model$silinfo$avg.width
})
sil_df <- data.frame(
k=2:10,
sil_width=sil_width
)
ggplot(sil_df, aes(x=k, y=sil_width) +
geom_line()+
geom_point()+
scale_x_continuous(breaks = 1:10)
sil_width <- map_dbl(2:10, function(k){
model <- pam(x=dist_cereals, centers=k)
model$silinfo$avg.width
})
sil_df <- data.frame(
k=2:10,
sil_width=sil_width
)
ggplot(sil_df, aes(x=k, y=sil_width)) +
geom_line()+
geom_point()+
scale_x_continuous(breaks = 1:10)
sil_width <- map_dbl(2:10, function(k){
model <- pam(x=dist_cereals, k=k)
model$silinfo$avg.width
})
sil_df <- data.frame(
k=2:10,
sil_width=sil_width
)
ggplot(sil_df, aes(x=k, y=sil_width)) +
geom_line()+
geom_point()+
scale_x_continuous(breaks = 1:10)
#K-means clustering with two clusters
km_cereals <- kmeans(dist_cereals, centers=7)
#Appending the clusters to all the dataset
cereals_km_clusters <- mutate(cereals, cluster=km_cereals$cluster)
kmeans_count <- count(cereals_km_clusters , cluster)
cereals_km_clusters  %>%
select(-shelf,-name,-mfr,-type)%>%
group_by(cluster) %>%
summarise_all(funs(mean(.)))%>%
cbind(kmeans_count$n)
ggplot(cereals_km_clusters, aes(x = calories, y = sugars, color = factor(cluster))) +
geom_point(alpha=0.5)+
geom_text_repel(aes(label=name), force=2, size=3, segment.alpha = 0.5)+
scale_y_continuous(breaks=c(1,2,3))+
labs(title="Which shelf has the most sugary cereals?",
x="Sugar content per serving",
y="Supermarket shelf: from the floor (1) to the top (3)")
ggplot(cereals_km_clusters, aes(x = calories, y = vitamins, color = factor(cluster))) +
geom_point(alpha=0.5)+
geom_text_repel(aes(label=name), force=2, size=3, segment.alpha = 0.5)+
scale_y_continuous(breaks=c(1,2,3))+
labs(title="Cluster assignement",
x="Sugar content per serving",
y="Vitamins per serving")
ggplot(cereals_km_clusters, aes(x = calories, y = vitamins, color = factor(cluster))) +
geom_point(alpha=0.5)+
geom_text_repel(aes(label=name), force=2, size=3, segment.alpha = 0.5)+
scale_y_continuous(breaks=c(1,2,3))+
labs(title="Cluster assignement using k-means",
x="Sugar content per serving",
y="Vitamins per serving")
ggplot(cereals_km_clusters, aes(x = calories, y = vitamins, color = factor(cluster))) +
geom_point(alpha=0.5)+
geom_text_repel(aes(label=name), force=2, size=3, segment.alpha = 0.5)+
scale_y_continuous(breaks=c(1,2,3))+
labs(title="Cluster assignement using seven-means",
x="Sugar content per serving",
y="Vitamins per serving")
ggplot(cereals_km_clusters, aes(x = calories, y = vitamins, color = factor(cluster))) +
geom_point(alpha=0.5)+
geom_text_repel(aes(label=name), force=2, size=3, segment.alpha = 0.5)+
labs(title="Cluster assignement using seven-means",
x="Sugar content per serving",
y="Vitamins per serving")
ggplot(cereals_km_clusters, aes(x = calories, y = fiber, color = factor(cluster))) +
geom_point(alpha=0.5)+
geom_text_repel(aes(label=name), force=2, size=3, segment.alpha = 0.5)+
labs(title="Cluster assignement using seven-means",
x="Sugar content per serving",
y="Vitamins per serving")
ggplot(cereals_km_clusters, aes(x = sugars, y = fiber, color = factor(cluster))) +
geom_point(alpha=0.5)+
geom_text_repel(aes(label=name), force=2, size=3, segment.alpha = 0.5)+
labs(title="Cluster assignement using seven-means",
x="Sugar content per serving",
y="Vitamins per serving")
ggplot(cereals_km_clusters, aes(x = sugars, y = vitamins, color = factor(cluster))) +
geom_point(alpha=0.5)+
geom_text_repel(aes(label=name), force=2, size=3, segment.alpha = 0.5)+
labs(title="Cluster assignement using seven-means",
x="Sugar content per serving",
y="Vitamins per serving")
ggplot(cereals_km_clusters, aes(x = sugars, y = vitamins, color = factor(cluster))) +
geom_point()+
geom_text_repel(aes(label=name), force=2, size=3, segment.alpha = 0.5)+
labs(title="Cluster assignement using seven-means",
x="Sugar content per serving",
y="Vitamins per serving")
blogdown::serve_site()
