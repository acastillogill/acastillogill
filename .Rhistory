total_attempts=n(),
shots=sum(shot_made))%>%
arrange(desc(shots))%>%
top_n(1)
)) %>%
unnest
season_NBA_play <- NBA_play%>%
group_by(season)%>%
nest() %>%
mutate(data = map(data, ~ .x %>%
group_by(player)%>%
summarise(shots_attempts_ratio=sum(shot_made)/n(),
total_attempts=n(),
shots=sum(shot_made))%>%
arrange(desc(shots))%>%
top_n(1)
)) %>%
unnest
blues <- brewer.pal(9,"Blues")
blue_range <- colorRampPalette(blues)
reds <- brewer.pal(9,"Reds")
red_range <- colorRampPalette(reds)
best_players_plot_ratio_reg <- all_NBA_reg%>%
mutate(player=fct_reorder(player, shots_attempts_ratio))%>%
ggplot(aes(x=player,y=shots_attempts_ratio))+
geom_col(fill=blue_range(10))+
coord_flip()+
labs(title="Shots per free throws, top ten players (2006/16)",
subtitle = "Regular season, players ranked by total shots.",
x="",
y="Shots per free throws")+
theme(text = element_text(size=30))+
scale_y_comma(labels = scales::percent_format())
best_players_plot_ratio_play <- all_NBA_play%>%
mutate(player=fct_reorder(player, shots_attempts_ratio))%>%
ggplot(aes(x=player,y=shots_attempts_ratio))+
geom_col(fill=red_range(10))+
coord_flip()+
labs(title="Shots per free throws, top ten players (2006/16)",
subtitle = "Playoffs season, players ranked by total shots.",
x="",
y="Shots per free throws")+
theme(text = element_text(size=30))+
scale_y_comma(labels = scales::percent_format())
all_time_ratio <- arrangeGrob(best_players_plot_ratio_reg,
best_players_plot_ratio_play,
nrow=1)
ggsave("all_time_ratio.png",all_time_ratio,width = 14,height=5,limitsize = FALSE,bg="white")
blogdown::serve_site()
nrow(NBA)*length(NBA)
names
names(NBA)
ggsave("all_time_ratio.png",
all_time_ratio,width = 14,
height=5,
limitsize = FALSE,
bg="white",
path = here::here("content","static","img","all_time_ratio.png"))
("content","static","img","all_time_ratio.png")
here::here("content","static","img","all_time_ratio.png")
args(ggsvae)
help(ggsave)
blues <- brewer.pal(9,"Blues")
blue_range <- colorRampPalette(blues)
reds <- brewer.pal(9,"Reds")
red_range <- colorRampPalette(reds)
best_players_plot_ratio_reg <- all_NBA_reg%>%
mutate(player=fct_reorder(player, shots_attempts_ratio))%>%
ggplot(aes(x=player,y=shots_attempts_ratio))+
geom_col(fill=blue_range(10))+
coord_flip()+
labs(title="Shots per free throws, top ten players (2006/16)",
subtitle = "Regular season, players ranked by total shots.",
x="",
y="Shots per free throws")+
theme(text = element_text(size=30))+
scale_y_comma(labels = scales::percent_format())
best_players_plot_ratio_play <- all_NBA_play%>%
mutate(player=fct_reorder(player, shots_attempts_ratio))%>%
ggplot(aes(x=player,y=shots_attempts_ratio))+
geom_col(fill=red_range(10))+
coord_flip()+
labs(title="Shots per free throws, top ten players (2006/16)",
subtitle = "Playoffs season, players ranked by total shots.",
x="",
y="Shots per free throws")+
theme(text = element_text(size=30))+
scale_y_comma(labels = scales::percent_format())
all_time_ratio <- arrangeGrob(best_players_plot_ratio_reg,
best_players_plot_ratio_play,
nrow=1)
ggsave("all_time_ratio.png",
all_time_ratio,width = 14,
height=5,
limitsize = FALSE,
bg="white",
path = here::here("content","static","img","all_time_ratio.png"))
blues <- brewer.pal(9,"Blues")
blue_range <- colorRampPalette(blues)
reds <- brewer.pal(9,"Reds")
red_range <- colorRampPalette(reds)
best_players_plot_ratio_reg <- all_NBA_reg%>%
mutate(player=fct_reorder(player, shots_attempts_ratio))%>%
ggplot(aes(x=player,y=shots_attempts_ratio))+
geom_col(fill=blue_range(10))+
coord_flip()+
labs(title="Shots per free throws, top ten players (2006/16)",
subtitle = "Regular season, players ranked by total shots.",
x="",
y="Shots per free throws")+
theme(text = element_text(size=30))+
scale_y_comma(labels = scales::percent_format())
best_players_plot_ratio_play <- all_NBA_play%>%
mutate(player=fct_reorder(player, shots_attempts_ratio))%>%
ggplot(aes(x=player,y=shots_attempts_ratio))+
geom_col(fill=red_range(10))+
coord_flip()+
labs(title="Shots per free throws, top ten players (2006/16)",
subtitle = "Playoffs season, players ranked by total shots.",
x="",
y="Shots per free throws")+
theme(text = element_text(size=30))+
scale_y_comma(labels = scales::percent_format())
all_time_ratio <- arrangeGrob(best_players_plot_ratio_reg,
best_players_plot_ratio_play,
nrow=1)
ggsave("all_time_ratio.png",
all_time_ratio,width = 14,
height=5,
limitsize = FALSE,
bg="white",
path = here::here("content","static","img"))
ggsave(all_time_ratio,width = 14,
height=5,
limitsize = FALSE,
bg="white",
path = here::here("content","static","img","all_time_ratio.png"))
blues <- brewer.pal(9,"Blues")
blue_range <- colorRampPalette(blues)
reds <- brewer.pal(9,"Reds")
red_range <- colorRampPalette(reds)
best_players_plot_ratio_reg <- all_NBA_reg%>%
mutate(player=fct_reorder(player, shots_attempts_ratio))%>%
ggplot(aes(x=player,y=shots_attempts_ratio))+
geom_col(fill=blue_range(10))+
coord_flip()+
labs(title="Shots per free throws, top ten players (2006/16)",
subtitle = "Regular season, players ranked by total shots.",
x="",
y="Shots per free throws")+
theme(text = element_text(size=30))+
scale_y_comma(labels = scales::percent_format())
best_players_plot_ratio_play <- all_NBA_play%>%
mutate(player=fct_reorder(player, shots_attempts_ratio))%>%
ggplot(aes(x=player,y=shots_attempts_ratio))+
geom_col(fill=red_range(10))+
coord_flip()+
labs(title="Shots per free throws, top ten players (2006/16)",
subtitle = "Playoffs season, players ranked by total shots.",
x="",
y="Shots per free throws")+
theme(text = element_text(size=30))+
scale_y_comma(labels = scales::percent_format())
all_time_ratio <- arrangeGrob(best_players_plot_ratio_reg,
best_players_plot_ratio_play,
nrow=1)
ggsave(path = here::here("content","static","img","all_time_ratio.png"),
all_time_ratio,
width = 14,
height=5,
limitsize = FALSE,
bg="white"
)
blues <- brewer.pal(9,"Blues")
blue_range <- colorRampPalette(blues)
reds <- brewer.pal(9,"Reds")
red_range <- colorRampPalette(reds)
best_players_plot_ratio_reg <- all_NBA_reg%>%
mutate(player=fct_reorder(player, shots_attempts_ratio))%>%
ggplot(aes(x=player,y=shots_attempts_ratio))+
geom_col(fill=blue_range(10))+
coord_flip()+
labs(title="Shots per free throws, top ten players (2006/16)",
subtitle = "Regular season, players ranked by total shots.",
x="",
y="Shots per free throws")+
theme(text = element_text(size=30))+
scale_y_comma(labels = scales::percent_format())
best_players_plot_ratio_play <- all_NBA_play%>%
mutate(player=fct_reorder(player, shots_attempts_ratio))%>%
ggplot(aes(x=player,y=shots_attempts_ratio))+
geom_col(fill=red_range(10))+
coord_flip()+
labs(title="Shots per free throws, top ten players (2006/16)",
subtitle = "Playoffs season, players ranked by total shots.",
x="",
y="Shots per free throws")+
theme(text = element_text(size=30))+
scale_y_comma(labels = scales::percent_format())
all_time_ratio <- arrangeGrob(best_players_plot_ratio_reg,
best_players_plot_ratio_play,
nrow=1)
ggsave(path = here::here(static","img","all_time_ratio.png"),
all_time_ratio,
width = 14,
height=5,
limitsize = FALSE,
bg="white")
blues <- brewer.pal(9,"Blues")
blue_range <- colorRampPalette(blues)
reds <- brewer.pal(9,"Reds")
red_range <- colorRampPalette(reds)
best_players_plot_ratio_reg <- all_NBA_reg%>%
mutate(player=fct_reorder(player, shots_attempts_ratio))%>%
ggplot(aes(x=player,y=shots_attempts_ratio))+
geom_col(fill=blue_range(10))+
coord_flip()+
labs(title="Shots per free throws, top ten players (2006/16)",
subtitle = "Regular season, players ranked by total shots.",
x="",
y="Shots per free throws")+
theme(text = element_text(size=30))+
scale_y_comma(labels = scales::percent_format())
best_players_plot_ratio_play <- all_NBA_play%>%
mutate(player=fct_reorder(player, shots_attempts_ratio))%>%
ggplot(aes(x=player,y=shots_attempts_ratio))+
geom_col(fill=red_range(10))+
coord_flip()+
labs(title="Shots per free throws, top ten players (2006/16)",
subtitle = "Playoffs season, players ranked by total shots.",
x="",
y="Shots per free throws")+
theme(text = element_text(size=30))+
scale_y_comma(labels = scales::percent_format())
all_time_ratio <- arrangeGrob(best_players_plot_ratio_reg,
best_players_plot_ratio_play,
nrow=1)
ggsave(path = here::here("static","img","all_time_ratio.png"),
all_time_ratio,
width = 14,
height=5,
limitsize = FALSE,
bg="white")
library(cowplot)
all_time_ratio <- plot_grid(best_players_plot_ratio_reg,
best_players_plot_ratio_play,
nrow=1)
all_time_ratio
all_time_shots
all_time_shots_reg <- all_NBA_reg%>%
mutate(player=fct_reorder(player, shots))%>%
ggplot(aes(x=player,y=shots))+
geom_col(fill=blue_range(10))+
coord_flip()+
labs(
title="Total shots, top ten players (2006/16)",
subtitle = "Regular season, players ranked by total shots.",
x="",
y="Total shots")
all_time_shots_play  <- all_NBA_play%>%
mutate(player=fct_reorder(player, shots))%>%
ggplot(aes(x=player,y=shots))+
geom_col(fill=red_range(10))+
coord_flip()+
labs(
title="Total shots, top ten players (2006/16)",
subtitle = "Playoffs season, players ranked by total shots.",
x="",
y="Total shots")
all_time_shots <- plot_grid(all_time_shots_reg,
all_time_shots_play,
nrow=2)
all_time_shots
# Chunk 1: setup
x <-
c("dplyr",
"knitr",
"here",
"scales",
"magrittr",
"ggplot2",
"cowplot",
"tidyverse",
"Metrics",
"rsample",
"broom",
"sf",
"rgdal",
"summarytools",
"tmap",
"tmaptools",
"lubridate",
"RColorBrewer",
"hrbrthemes")
lapply(x, require, character.only = TRUE)
opts_chunk$set(echo = FALSE,
warning = FALSE,
error = FALSE,
message = FALSE,
collapse = TRUE,
comment = NA,
tidy = TRUE,
include = FALSE)
theme_set(theme_minimal())
options(
digits=3,
scipen = 999
)
knit_hooks$set(inline = function(x) {
prettyNum(round(x,2), big.mark=",")
})
r_downloads <- readRDS(file=here::here("static","data","r-downloads.rds"))
r_downloads <- na.omit(r_downloads)%>%
filter(date<"2018-10-20")
# Chunk 2: read-data
iso_codes <- read_csv(here::here("static","data","iso_countries.csv"))
pop <-read_csv(here::here("static","data","country_populations.csv"))
map_path <- here::here("static","data","world_shapefile","world_shapefile.shp")
world <- sf::st_read(map_path)
educ <- read_csv(here::here("static","data","edu_year.csv"))
educ$edu_index <- as.double(educ$edu_index)
# Chunk 3: merge-country-codes
r_downloads%<>%
full_join(iso_codes, by=c("country"="iso"))%>%
filter(!is.na(sub_region))
# Chunk 4: downloads-by-country
r_downloads%>%
group_by(name)%>%
summarise(n=n())%>%
filter(!is.na(n))%>%
arrange(desc(n))->downloads_per_country
# Chunk 5: plot-top-10-countries
blues <- brewer.pal(9,"BuPu")
blue_range <- colorRampPalette(blues)
downloads_per_country%>%
arrange(desc(n))%>%
head(10)%>%
mutate(name=fct_reorder(name,n))%>%
ggplot(aes(name,n,fill=name))+
geom_col()+
expand_limits(y=0)+
coord_flip()+
scale_y_continuous(labels=comma_format())+
labs(title="Top 10 countries by R downloads in 2017/18",
x="",
y="Downloads")+
theme_ipsum_rc()+
theme(legend.position = "none")+
scale_fill_manual(values=blue_range(10))
# Chunk 6: create-tibble-with-pop-and-users-only
full_maps <- downloads_per_country%>%
full_join(iso_codes, by=c("name"="name"))%>%
filter(!is.na(sub_region))%>%
left_join(pop, by=c("name"="name"))%>%
select(n, name, iso_3, region, sub_region, pop_2018)%>%
mutate(n_capita=n/pop_2018)%>%
filter(!is.na(n_capita),
pop_2018!=0)
# Chunk 7: merge-full-maps-and-map-path
world_full <- world%>%
left_join(full_maps, by=c("ISO3"="iso_3"))
# Chunk 8: create-total-downloads-map
n_map <- tm_shape(world_full) +
tm_borders(col="black", lwd=0.1)+
tm_fill(col="n",n=4, style="jenks", palette = get_brewer_pal("BuPu", n = 4, contrast = c(0.13, 0.9))) +
tm_layout(main.title = "Total R downloads in 2017/18",
main.title.size = 1, frame = FALSE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=FALSE, legend.title.size=1)
# Chunk 9: plot-total-downloads-map
n_map
# Chunk 10: plot-top-10-countries-per-capita
yellows <- brewer.pal(9,"OrRd")
yellow_range <- colorRampPalette(yellows)
full_maps%>%
arrange(desc(n_capita))%>%
head(10)%>%
mutate(name=fct_reorder(name,n_capita))%>%
ggplot(aes(name,n_capita,fill=name))+
geom_col()+
expand_limits(y=0)+
coord_flip()+
scale_y_continuous(labels=comma_format())+
labs(title="Top 10 countries by \n R downloads per capita in 2017/18",
x="",
y="Downloads")+
theme_ipsum_rc()+
theme(legend.position = "none")+
scale_fill_manual(values=yellow_range(10))
# Chunk 11: create-downloads-per-capita-map
n_capita_map <- tm_shape(world_full) +
tm_borders(col="black", lwd=0.1)+
tm_fill(col="n_capita",n=4, style="jenks", palette = get_brewer_pal("OrRd", n = 4, contrast = c(0.13, 0.9))) +
tm_layout(main.title = "R downloads per capita in 2017/18",
main.title.size = 1, frame = FALSE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=FALSE, legend.title.size=1)
# Chunk 12: plot-downloads-per-capita-map
n_capita_map
# Chunk 13: create-r-downloads-per-region
monthly_downloads_per_region <- r_downloads%>%
#Group by the month of the year
group_by(month(date), sub_region)%>%
#Count downloads by the month of the year
summarise(monthly_downloads=n())%>%
#Pipe to make a plot
ggplot(aes(x=`month(date)`,y= monthly_downloads))+
#Add line
geom_line(alpha=0.5, color="seagreen4")+
geom_point(color="seagreen4")+
scale_x_continuous(breaks=c(seq(1,12,1)))+
#Add nice commas y axis
scale_y_continuous(labels=comma_format())+
#Add title
labs(title="Monthly R downloads around the world 2017/2018",
y="Downloads",
x="Month",
caption = "Data source: Tidy Tuesday (2018-10-30)")+
facet_wrap(~sub_region, scales="free", nrow = 6)+
theme(strip.background =element_rect(fill="white"))+
theme(strip.text = element_text(size=8,face="bold"))+
theme(title =element_text(size=12, face='bold'))+
theme_classic()
# Chunk 14: plot-monthly-downloads-per-region
monthly_downloads_per_region
# Chunk 15: merge-years-of-education
full_maps_edu <- full_maps%>%
left_join(educ, by="name")%>%
na.omit()
# Chunk 16: create-model-of-educ-r-capita
fit <- lm( log(n_capita) ~ edu_index, data = full_maps_edu)
summary(fit)
par(mfrow=c(2,2))
plot(fit)
# Chunk 17: plot-relationship-between-educ-and-n-capita
ggplot(full_maps_edu, aes(x=edu_index, y=log(n_capita)))+
geom_point(alpha=0.5)+
geom_smooth(method="lm")
library(gridExtra)
no_title_map_1 <- tm_shape(world_full) +
tm_borders(col="black", lwd=0.1)+
tm_fill(col="n",n=4, style="jenks", palette = get_brewer_pal("BuPu", n = 4, contrast = c(0.13, 0.9))) +
tm_layout(main.title.size = 1, frame = FALSE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=FALSE, legend.title.size=1)
no_title_map_1
no_title_map_1 <- tm_shape(world_full) +
tm_borders(col="black", lwd=0.1)+
tm_fill(col="n",n=4, style="jenks", palette = get_brewer_pal("BuPu", n = 4, contrast = c(0.13, 0.9))) +
tm_layout(main.title.size = 1, frame = FALSE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=FALSE, legend.title.size=1)
bar_plot_1 <- downloads_per_country%>%
arrange(desc(n))%>%
head(10)%>%
mutate(name=fct_reorder(name,n))%>%
ggplot(aes(name,n,fill=name))+
geom_col()+
expand_limits(y=0)+
coord_flip()+
scale_y_continuous(labels=comma_format())+
labs(title="Top 10 countries by R downloads in 2017/18",
x="",
y="Downloads")+
theme_ipsum_rc()+
theme(legend.position = "none")+
scale_fill_manual(values=blue_range(10))
no_title_map_1 <- tm_shape(world_full) +
tm_borders(col="black", lwd=0.1)+
tm_fill(col="n",n=4, style="jenks", palette = get_brewer_pal("BuPu", n = 4, contrast = c(0.13, 0.9))) +
tm_layout(main.title.size = 1, frame = FALSE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=FALSE, legend.title.size=1)
bar_plot_1 <- downloads_per_country%>%
arrange(desc(n))%>%
head(10)%>%
mutate(name=fct_reorder(name,n))%>%
ggplot(aes(name,n,fill=name))+
geom_col()+
expand_limits(y=0)+
coord_flip()+
scale_y_continuous(labels=comma_format())+
labs(title="Top 10 countries by R downloads in 2017/18",
x="",
y="Downloads")+
theme_ipsum_rc()+
theme(legend.position = "none")+
scale_fill_manual(values=blue_range(10))
total_downloads <- arrangeGrob(no_title_map_1, bar_plot_1, nrow=2)
ggsave("total_downloads.png",all_time,width = 14,height=10,limitsize = FALSE,bg="white")
no_title_map_1 <- tm_shape(world_full) +
tm_borders(col="black", lwd=0.1)+
tm_fill(col="n",n=4, style="jenks", palette = get_brewer_pal("BuPu", n = 4, contrast = c(0.13, 0.9))) +
tm_layout(main.title.size = 1, frame = FALSE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=FALSE, legend.title.size=1)
bar_plot_1 <- downloads_per_country%>%
arrange(desc(n))%>%
head(10)%>%
mutate(name=fct_reorder(name,n))%>%
ggplot(aes(name,n,fill=name))+
geom_col()+
expand_limits(y=0)+
coord_flip()+
scale_y_continuous(labels=comma_format())+
labs(title="Top 10 countries by R downloads in 2017/18",
x="",
y="Downloads")+
theme_ipsum_rc()+
theme(legend.position = "none")+
scale_fill_manual(values=blue_range(10))
total_downloads <- arrangeGrob(no_title_map_1, bar_plot_1, nrow=2)
ggsave("total_downloads.png",total_downloads,width = 14,height=10,limitsize = FALSE,bg="white")
no_title_map_1
library(cowplot)
total_downloads <- cowplot(no_title_map_1, bar_plot_1, nrow=2)
total_downloads <- plot_grid(no_title_map_1, bar_plot_1, nrow=2)
class(no_title_map_1)
