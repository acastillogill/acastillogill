summarise(n=n())%>%
filter(!is.na(n))%>%
arrange(desc(n))->downloads_per_country
# Chunk 5: create-tibble-with-pop-and-users-only
full_maps <- downloads_per_country%>%
full_join(iso_codes, by=c("name"="name"))%>%
filter(!is.na(sub_region))%>%
left_join(pop, by=c("name"="name"))%>%
select(n, name, iso_3, region, sub_region, pop_2018)%>%
mutate(n_capita=n/pop_2018)%>%
filter(!is.na(n_capita),
pop_2018!=0)
# Chunk 6: merge-years-of-education
full_maps_edu <- full_maps%>%
left_join(educ, by="name")%>%
na.omit()
# Chunk 7: plot-relationship-between-educ-and-n-capita
ggplot(full_maps_edu, aes(x=edu_index, y=n_capita))+
geom_point(alpha=0.5)+
labs(title="The education index vs. R downloads per capita",
x="Education index",
y="R downloads per capita")
# Chunk 8: plot-relationship-between-educ-and-n-capita-log
ggplot(full_maps_edu, aes(x=edu_index, y=log(n_capita)))+
geom_point(alpha=0.5)+
geom_smooth(method="lm", color="salmon", se=FALSE, size=2, alpha=0.5)+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)+
labs(title="The education index vs. R downloads per capita",
x="Education index",
y="R downloads per capita (logarithm applied)")
# Chunk 9: create-model-of-educ-r-capita
fit <- lm( log(n_capita) ~ edu_index, data = full_maps_edu)
summary(fit)
plot(fit)
full_maps_edu_sans_outliers <- full_maps_edu[-outliers,]
fit_2 <- lm( log(n_capita) ~ edu_index, data = full_maps_edu_sans_outliers)
summary(fit_2)
plot(fit_2)
# Chunk 11: nesting-models
full_maps_edu%>%
group_by(region)%>%
#Nest models
nest()%>%
#Create linear regression
mutate(model=map(data,~lm(formula=log(n_capita) ~ edu_index, data=.x)))%>%
#Metrics of all models
mutate(coef=map(model,~glance(.x)))%>%
#Models
unnest(coef)%>%
select(region, adj.r.squared)%>%
kable()
# Chunk 12: plot-relationship-between-educ-and-n-capita-log-regions
ggplot(full_maps_edu, aes(x=edu_index, y=log(n_capita)))+
geom_point(alpha=0.5)+
geom_smooth(method="lm", color="salmon", se=FALSE, size=2, alpha=0.5)+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)+
labs(title="The education index vs. R downloads per capita by region",
x="Education index",
y="R downloads per capita (logarithm applied)")+
facet_wrap(.~region, scales="free")
# Chunk 1: setup
x <-
c("dplyr",
"knitr",
"here",
"scales",
"magrittr",
"ggplot2",
"cowplot",
"tidyverse",
"Metrics",
"rsample",
"broom",
"sf",
"rgdal",
"summarytools",
"tmap",
"tmaptools",
"lubridate",
"RColorBrewer",
"hrbrthemes")
lapply(x, require, character.only = TRUE)
opts_chunk$set(echo = FALSE,
warning = FALSE,
error = FALSE,
message = FALSE,
collapse = TRUE,
comment = NA,
tidy = TRUE,
include = FALSE)
theme_set(theme_minimal())
options(
digits=3,
scipen = 999
)
knit_hooks$set(inline = function(x) {
prettyNum(round(x,2), big.mark=",")
})
r_downloads <- readRDS(file=here::here("static","data","r-downloads.rds"))
r_downloads <- na.omit(r_downloads)%>%
filter(date<"2018-10-20")
# Chunk 2: read-data
iso_codes <- read_csv(here::here("static","data","iso_countries.csv"))
pop <-read_csv(here::here("static","data","country_populations.csv"))
map_path <- here::here("static","data","world_shapefile","world_shapefile.shp")
world <- sf::st_read(map_path)
educ <- read_csv(here::here("static","data","edu_year.csv"))
educ$edu_index <- as.double(educ$edu_index)
# Chunk 3: merge-country-codes
r_downloads%<>%
full_join(iso_codes, by=c("country"="iso"))%>%
filter(!is.na(sub_region))
# Chunk 4: downloads-by-country
r_downloads%>%
group_by(name)%>%
summarise(n=n())%>%
filter(!is.na(n))%>%
arrange(desc(n))->downloads_per_country
# Chunk 5: plot-top-10-countries
blues <- brewer.pal(9,"BuPu")
blue_range <- colorRampPalette(blues)
downloads_per_country%>%
arrange(desc(n))%>%
head(10)%>%
mutate(name=fct_reorder(name,n))%>%
ggplot(aes(name,n,fill=name))+
geom_col()+
expand_limits(y=0)+
coord_flip()+
scale_y_continuous(labels=comma_format())+
labs(title="Top 10 countries by R downloads in 2017/18",
x="",
y="Downloads")+
theme(legend.position = "none")+
scale_fill_manual(values=blue_range(10))
# Chunk 6: create-tibble-with-pop-and-users-only
full_maps <- downloads_per_country%>%
full_join(iso_codes, by=c("name"="name"))%>%
filter(!is.na(sub_region))%>%
left_join(pop, by=c("name"="name"))%>%
select(n, name, iso_3, region, sub_region, pop_2018)%>%
mutate(n_capita=n/pop_2018)%>%
filter(!is.na(n_capita),
pop_2018!=0)
# Chunk 7: merge-full-maps-and-map-path
world_full <- world%>%
left_join(full_maps, by=c("ISO3"="iso_3"))
# Chunk 8: create-total-downloads-map
n_map <- tm_shape(world_full) +
tm_borders(col="black", lwd=0.1)+
tm_fill(col="n",n=4, style="jenks", palette = get_brewer_pal("BuPu", n = 4, contrast = c(0.13, 0.9))) +
tm_layout(main.title = "Total R downloads in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
# Chunk 9: plot-total-downloads-map
n_map
yellows <- brewer.pal(9,"OrRd")
yellow_range <- colorRampPalette(yellows)
full_maps%>%
arrange(desc(n_capita))%>%
head(10)%>%
mutate(name=fct_reorder(name,n_capita))%>%
ggplot(aes(name,n_capita,fill=name))+
geom_col()+
expand_limits(y=0)+
coord_flip()+
scale_y_continuous(labels=comma_format())+
labs(title="Top 10 countries by R downloads \n per capita in 2017/18",
x="",
y="Downloads")+
theme(legend.position = "none")+
scale_fill_manual(values=yellow_range(10))+
theme_ipsum_rc()
blues <- brewer.pal(9,"BuPu")
blue_range <- colorRampPalette(blues)
downloads_per_country%>%
arrange(desc(n))%>%
head(10)%>%
mutate(name=fct_reorder(name,n))%>%
ggplot(aes(name,n,fill=name))+
geom_col()+
expand_limits(y=0)+
coord_flip()+
scale_y_continuous(labels=comma_format())+
labs(title="Top 10 countries by R downloads in 2017/18",
x="",
y="Downloads")+
theme(legend.position = "none")+
scale_fill_manual(values=blue_range(10))+
theme_ipsum_rc()
backslash
blues <- brewer.pal(9,"BuPu")
blue_range <- colorRampPalette(blues)
downloads_per_country%>%
arrange(desc(n))%>%
head(10)%>%
mutate(name=fct_reorder(name,n))%>%
ggplot(aes(name,n,fill=name))+
geom_col()+
expand_limits(y=0)+
coord_flip()+
scale_y_continuous(labels=comma_format())+
labs(title="Top 10 countries by \n R downloads in 2017/18",
x="",
y="Downloads")+
theme(legend.position = "none")+
scale_fill_manual(values=blue_range(10))+
theme_ipsum_rc()
blues <- brewer.pal(9,"BuPu")
blue_range <- colorRampPalette(blues)
downloads_per_country%>%
arrange(desc(n))%>%
head(10)%>%
mutate(name=fct_reorder(name,n))%>%
ggplot(aes(name,n,fill=name))+
geom_col()+
expand_limits(y=0)+
coord_flip()+
scale_y_continuous(labels=comma_format())+
labs(title="Top 10 countries by \n R downloads in 2017/18",
x="",
y="Downloads")+
scale_fill_manual(values=blue_range(10))+
theme_ipsum_rc(legend.position = "none")
blues <- brewer.pal(9,"BuPu")
blue_range <- colorRampPalette(blues)
downloads_per_country%>%
arrange(desc(n))%>%
head(10)%>%
mutate(name=fct_reorder(name,n))%>%
ggplot(aes(name,n,fill=name))+
geom_col()+
expand_limits(y=0)+
coord_flip()+
scale_y_continuous(labels=comma_format())+
labs(title="Top 10 countries by \n R downloads in 2017/18",
x="",
y="Downloads")+
scale_fill_manual(values=blue_range(10))+
theme_ipsum_rc(legend.position = "none")
blues <- brewer.pal(9,"BuPu")
blue_range <- colorRampPalette(blues)
downloads_per_country%>%
arrange(desc(n))%>%
head(10)%>%
mutate(name=fct_reorder(name,n))%>%
ggplot(aes(name,n,fill=name))+
geom_col()+
expand_limits(y=0)+
coord_flip()+
scale_y_continuous(labels=comma_format())+
labs(title="Top 10 countries by \n R downloads in 2017/18",
x="",
y="Downloads")+
theme_ipsum_rc()+
theme(legend.position = "none")+
scale_fill_manual(values=blue_range(10))
yellows <- brewer.pal(9,"OrRd")
yellow_range <- colorRampPalette(yellows)
full_maps%>%
arrange(desc(n_capita))%>%
head(10)%>%
mutate(name=fct_reorder(name,n_capita))%>%
ggplot(aes(name,n_capita,fill=name))+
geom_col()+
expand_limits(y=0)+
coord_flip()+
scale_y_continuous(labels=comma_format())+
labs(title="Top 10 countries by \n R downloads per capita in 2017/18",
x="",
y="Downloads")+
theme_ipsum_rc()+
theme(legend.position = "none")+
scale_fill_manual(values=yellow_range(10))
blogdown::serve_site()
ggplot(full_maps_edu, aes(x=edu_index, y=log(n_capita)))+
geom_point(alpha=0.5)+
geom_smooth(method="lm", color="salmon", se=FALSE, size=2, alpha=0.5)+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)+
labs(title="The education index vs. R downloads per capita by region",
x="Education index",
y="R downloads per capita (logarithm applied)")+
facet_wrap(.~region, scales="free")+hrbrthemes::theme_ft_rc()
ggplot(full_maps_edu, aes(x=edu_index, y=log(n_capita)))+
geom_point(alpha=0.5)+
geom_smooth(method="lm", color="salmon", se=FALSE, size=2, alpha=0.5)+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)+
labs(title="The education index vs. R downloads per capita by region",
x="Education index",
y="R downloads per capita (logarithm applied)")+
facet_wrap(.~region, scales="free")
fit <- lm( log(n_capita) ~ edu_index, data = full_maps_edu)
summary(fit)
plot(fit)
summary(fit)$coef*100
summary(fit)$coef[2]*100
summary(fit)$coef[2]
e^summary(fit)$coef[2]
exp(summary(fit)$coef[2])
summary(fit)$coef
exp(summary(fit)$coef[2])
full_maps_edu%>%
mutate(logged=log(n_capita))%>%
View()
full_maps_edu%>%
mutate(logged=log(n_capita))%>%
select(country,logged,n_capita,edu_index)
View()
full_maps_edu%>%
mutate(logged=log(n_capita))%>%
select(country,logged,n_capita,edu_index)%>%
View()
full_maps_edu%>%
mutate(logged=log(n_capita))%>%
select(country,logged,n_capita,edu_index)%>%
View()
full_maps_edu%>%
mutate(logged=log(n_capita))%>%
select(name,logged,n_capita,edu_index)%>%
View()
x <-
c("dplyr",
"knitr",
"here",
"scales",
"magrittr",
"ggplot2",
"cowplot",
"tidyverse",
"Metrics",
"rsample",
"broom",
"sf",
"rgdal",
"summarytools",
"tmap",
"tmaptools",
"lubridate",
"RColorBrewer",
"hrbrthemes",
"ggrepel")
lapply(x, require, character.only = TRUE)
opts_chunk$set(echo = FALSE,
warning = FALSE,
error = FALSE,
message = FALSE,
collapse = TRUE,
comment = NA,
tidy = TRUE,
include = FALSE)
theme_set(theme_ipsum_rc())
options(
digits=2,
scipen = 999
)
knit_hooks$set(inline = function(x) {
prettyNum(round(x,2), big.mark=",")
})
r_downloads <- readRDS(file=here::here("static","data","r-downloads.rds"))
r_downloads <- na.omit(r_downloads)%>%
filter(date<"2018-10-20")
# Chunk 1: setup
x <-
c("dplyr",
"knitr",
"here",
"scales",
"magrittr",
"ggplot2",
"cowplot",
"tidyverse",
"Metrics",
"rsample",
"broom",
"sf",
"rgdal",
"summarytools",
"tmap",
"tmaptools",
"lubridate",
"RColorBrewer",
"hrbrthemes",
"ggrepel")
lapply(x, require, character.only = TRUE)
opts_chunk$set(echo = FALSE,
warning = FALSE,
error = FALSE,
message = FALSE,
collapse = TRUE,
comment = NA,
tidy = TRUE,
include = FALSE)
theme_set(theme_ipsum_rc())
options(
digits=2,
scipen = 999
)
knit_hooks$set(inline = function(x) {
prettyNum(round(x,2), big.mark=",")
})
r_downloads <- readRDS(file=here::here("static","data","r-downloads.rds"))
r_downloads <- na.omit(r_downloads)%>%
filter(date<"2018-10-20")
# Chunk 2: read-data
iso_codes <- read_csv(here::here("static","data","iso_countries.csv"))
pop <-read_csv(here::here("static","data","country_populations.csv"))
map_path <- here::here("static","data","world_shapefile","world_shapefile.shp")
world <- sf::st_read(map_path)
educ <- read_csv(here::here("static","data","edu_year.csv"))
educ$edu_index <- as.double(educ$edu_index)
# Chunk 3: merge-country-codes
r_downloads%<>%
full_join(iso_codes, by=c("country"="iso"))%>%
filter(!is.na(sub_region))
# Chunk 4: downloads-by-country
r_downloads%>%
group_by(name)%>%
summarise(n=n())%>%
filter(!is.na(n))%>%
arrange(desc(n))->downloads_per_country
# Chunk 5: create-tibble-with-pop-and-users-only
full_maps <- downloads_per_country%>%
full_join(iso_codes, by=c("name"="name"))%>%
filter(!is.na(sub_region))%>%
left_join(pop, by=c("name"="name"))%>%
select(n, name, iso_3, region, sub_region, pop_2018)%>%
mutate(n_capita=n/pop_2018)%>%
filter(!is.na(n_capita),
pop_2018!=0)
# Chunk 6: merge-years-of-education
full_maps_edu <- full_maps%>%
left_join(educ, by="name")%>%
na.omit()
# Chunk 7: plot-relationship-between-educ-and-n-capita
ggplot(full_maps_edu, aes(x=edu_index, y=n_capita))+
geom_point(alpha=0.5)+
labs(title="The education index vs. R downloads per capita",
x="Education index",
y="R downloads per capita")
# Chunk 8: plot-relationship-between-educ-and-n-capita-log
ggplot(full_maps_edu, aes(x=edu_index, y=log(n_capita)))+
geom_point(alpha=0.5)+
geom_smooth(method="lm", color="salmon", se=FALSE, size=2, alpha=0.5)+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)+
labs(title="The Education Index vs. R Downloads per Capita",
x="Education index",
y="R downloads per capita (logarithm applied)")
# Chunk 9: create-model-of-educ-r-capita
fit <- lm( log(n_capita) ~ edu_index, data = full_maps_edu)
summary(fit)
plot(fit)
full_maps_edu_sans_outliers <- full_maps_edu[-outliers,]
fit_2 <- lm( log(n_capita) ~ edu_index, data = full_maps_edu_sans_outliers)
summary(fit_2)
plot(fit_2)
# Chunk 11: nesting-models
full_maps_edu%>%
group_by(region)%>%
#Nest models
nest()%>%
#Create linear regression
mutate(model=map(data,~lm(formula=log(n_capita) ~ edu_index, data=.x)))%>%
#Metrics of all models
mutate(coef=map(model,~glance(.x)))%>%
#Models
unnest(coef)%>%
select(region, adj.r.squared)%>%
kable()
# Chunk 12: plot-relationship-between-educ-and-n-capita-log-regions
ggplot(full_maps_edu, aes(x=edu_index, y=log(n_capita)))+
geom_point(alpha=0.5)+
geom_smooth(method="lm", color="salmon", se=FALSE, size=2, alpha=0.5)+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)+
labs(title="The education index vs. R downloads per capita by region",
x="Education index",
y="R downloads per capita (logarithm applied)")+
facet_wrap(.~region, scales="free")
# Chunk 13
full_maps_edu%>%
mutate(logged=log(n_capita))%>%
select(name,logged,n_capita,edu_index)%>%
View()
full_maps_edu%>%
mutate(logged=log(n_capita))%>%
select(name,logged,n_capita,edu_index)%>%
View()
0.19*exp(summary(fit)$coef[2])
0.92973*exp(summary(fit)$coef[2])
fit%>%glance()
fit%>%augment()
fit%>%
augment()%>%
select(log.n_capita, edu_index, .fitted)
View()
fit%>%
augment()%>%
select(log.n_capita, edu_index, .fitted)%>%
View()
fit%>%
augment()%>%
select(log.n_capita., edu_index, .fitted)%>%
View()
-6.9*exp(summary(fit)$coef[2])
exp(1)
exp(0)
View(full_maps_edu)%>%select(name)
log(1.56086)
summary(fit)$coef[2]
exp(summary(fit)$coef[2])
exp(summary(fit)$coef[2])*0.001108
exp(summary(fit)$coef[2])
summary(fit)
