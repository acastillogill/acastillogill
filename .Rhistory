# Chunk 6: merge-years-of-education
full_maps_edu <- full_maps%>%
left_join(educ, by="name")%>%
mutate(edu_index_percent=edu_index*100)%>%
na.omit()
# Chunk 7: plot-relationship-between-educ-and-n-capita
ggplot(full_maps_edu, aes(x=edu_index_percent, y=n_capita))+
geom_point(alpha=0.5)+
labs(title="The education index vs. R downloads per capita",
x="Education index",
y="R downloads per capita")+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)
# Chunk 8: plot-relationship-between-educ-and-n-capita-log
ggplot(full_maps_edu, aes(x=edu_index_percent, y=log(n_capita)))+
geom_point(alpha=0.5)+
geom_smooth(method="lm", color="salmon", se=FALSE, size=2, alpha=0.5)+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)+
labs(title="The Education Index vs. R Downloads per Capita",
x="Education index",
y="R downloads per capita (logarithm applied)")
# Chunk 9: create-model-of-educ-r-capita
fit <- lm( log(n_capita) ~ edu_index_percent, data = full_maps_edu)
fit%>%
tidy()%>%
kable()
# Chunk 10: remove-outliers
outliers <- c(160,148,140,95,162)
full_maps_edu_sans_outliers <- full_maps_edu[-outliers,]
fit_2 <- lm( log(n_capita) ~ edu_index_percent, data = full_maps_edu_sans_outliers)
summary(fit_2)
plot(fit_2)
group_by(region)%>%
#Nest models
nest()%>%
#Create linear regression
mutate(model=map(data,~lm(formula=log(n_capita) ~ edu_index, data=.x)))%>%
#Metrics of all models
mutate(coef=map(model,~glance(.x)))%>%
#Models
unnest(coef)%>%
select(region, adj.r.squared)%>%
kable()
# Chunk 12: plot-relationship-between-educ-and-n-capita-log-regions
ggplot(full_maps_edu, aes(x=edu_index, y=log(n_capita)))+
geom_point(alpha=0.5)+
geom_smooth(method="lm", color="salmon", se=FALSE, size=2, alpha=0.5)+
labs(title="The education index vs. R downloads per capita by region",
x="Education index",
y="R downloads per capita (logarithm applied)")+
facet_wrap(.~region, scales="free")
# Chunk 13: plot-fitted-values
fit%>%
augment()%>%
ggplot(aes(x=edu_index_percent, y=exp(.fitted)))+
geom_point(alpha=0.5, color="red")+
geom_point(data=full_maps_edu,aes(x=edu_index_percent, y=n_capita),alpha=0.5)+
labs(title="The Education Index vs. R Downloads per Capita",
subtitle="Black dots are real values and red dots are fitted values. For every percentage point \nincrease in the education index, the geometric mean of R downloads per capita is \nexpected to increase, on average, by 10.9%. Also, ",
x="Education index",
y="R downloads per capita")+
expand_limits(0,0)
blogdown::serve_site()
summary(fit)$coef[2]
(exp(summary(fit)$coef[2])-1)*100
summary(fit)$coef[2]
summary(fit)$coef[2]*100
summary(fit)$coef[2]*100-2*summary(fit)$coef[2,2]
summary(fit)$coef[2]
summary(fit)$coef[2]-2*summary(fit)$coef[2,2]
summary(fit)$coef[2]-2*summary(fit)$coef[2,2])*100
(summary(fit)$coef[2]-2*summary(fit)$coef[2,2])*100
1(summary(fit)$coef[2]+2*summary(fit)$coef[2,2])*100
(summary(fit)$coef[2]+2*summary(fit)$coef[2,2])*100
args(tm_fill)
(summary(fit)$coef[2]-2*summary(fit)$coef[2,2])*100
1.1 * 1.0916
(summary(fit)$coef[2]+2*summary(fit)$coef[2,2])
1.1 * 1.1153
blogdown::serve_site()
kiva_loans <- readRDS(here::here("static","data","datakiva_loans.rds"))
nrow(kiva_loans)
length(kiva_loans)
help("tmap")
# Chunk 1: setup
x <-
c("dplyr",
"knitr",
"here",
"scales",
"magrittr",
"ggplot2",
"cowplot",
"tidyverse",
"Metrics",
"rsample",
"broom",
"sf",
"rgdal",
"summarytools",
"tmap",
"tmaptools",
"lubridate",
"RColorBrewer",
"hrbrthemes",
"ggrepel")
lapply(x, require, character.only = TRUE)
opts_chunk$set(echo = FALSE,
warning = FALSE,
error = FALSE,
message = FALSE,
collapse = TRUE,
comment = NA,
tidy = TRUE,
include = FALSE)
theme_set(theme_ipsum_rc())
options(
digits=4,
scipen = 999
)
knit_hooks$set(inline = function(x) {
prettyNum(round(x,4), big.mark=",")
})
r_downloads <- readRDS(file=here::here("static","data","r-downloads.rds"))
r_downloads <- na.omit(r_downloads)%>%
filter(date<"2018-10-20")
# Chunk 2: read-data
iso_codes <- read_csv(here::here("static","data","iso_countries.csv"))
pop <-read_csv(here::here("static","data","country_populations.csv"))
map_path <- here::here("static","data","world_shapefile","world_shapefile.shp")
world <- sf::st_read(map_path)
educ <- read_csv(here::here("static","data","edu_year.csv"))
educ$edu_index <- as.double(educ$edu_index)
# Chunk 3: merge-country-codes
r_downloads%<>%
full_join(iso_codes, by=c("country"="iso"))%>%
filter(!is.na(sub_region))
# Chunk 4: downloads-by-country
r_downloads%>%
group_by(name)%>%
summarise(n=n())%>%
filter(!is.na(n))%>%
arrange(desc(n))->downloads_per_country
# Chunk 5: create-tibble-with-pop-and-users-only
full_maps <- downloads_per_country%>%
full_join(iso_codes, by=c("name"="name"))%>%
filter(!is.na(sub_region))%>%
left_join(pop, by=c("name"="name"))%>%
select(n, name, iso_3, region, sub_region, pop_2018)%>%
mutate(n_capita=n/pop_2018)%>%
filter(!is.na(n_capita),
pop_2018!=0)
# Chunk 6: merge-years-of-education
full_maps_edu <- full_maps%>%
left_join(educ, by="name")%>%
mutate(edu_index_percent=edu_index*100)%>%
na.omit()
# Chunk 7: plot-relationship-between-educ-and-n-capita
ggplot(full_maps_edu, aes(x=edu_index_percent, y=n_capita))+
geom_point(alpha=0.5)+
labs(title="The education index vs. R downloads per 1,000 capita",
x="Education index",
y="R downloads per 1,000 capita")+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)
# Chunk 8: plot-relationship-between-educ-and-n-capita-log
ggplot(full_maps_edu, aes(x=edu_index_percent, y=log(n_capita)))+
geom_point(alpha=0.5)+
geom_smooth(method="lm", color="salmon", se=FALSE, size=2, alpha=0.5)+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)+
labs(title="The Education Index vs. R Downloads per 1,000 capita",
x="Education index",
y="R downloads per 1,000 capita (logarithm applied)")
# Chunk 9: create-model-of-educ-r-capita
fit <- lm( log(n_capita) ~ edu_index_percent, data = full_maps_edu)
fit%>%
tidy()%>%
kable()
# Chunk 10: remove-outliers
outliers <- c(160,148,140,95,162)
full_maps_edu_sans_outliers <- full_maps_edu[-outliers,]
fit_2 <- lm( log(n_capita) ~ edu_index_percent, data = full_maps_edu_sans_outliers)
summary(fit_2)
plot(fit_2)
# Chunk 11: nesting-models
full_maps_edu %>%
group_by(region) %>%
#Nest models
nest() %>%
#Create linear regression
mutate(model = map(data,~lm(formula=log(n_capita) ~ edu_index, data=.x))) %>%
#Metrics of all models
mutate(coef = map(model,~glance(.x))) %>%
#Models
unnest(coef) %>%
select(region, adj.r.squared) %>%
kable()
# Chunk 12: plot-relationship-between-educ-and-n-capita-log-regions
ggplot(full_maps_edu, aes(x = edu_index, y = log(n_capita)))+
geom_point(alpha = 0.5) +
geom_smooth(method="lm", color="salmon", se=FALSE, size=2, alpha = 0.5) +
labs(title ="The education index vs. R downloads per 1,000 capita by region",
x="Education index",
y="R downloads per 1,000 capita (logarithm applied)")+
facet_wrap(.~region, scales="free")
# Chunk 1: setup
x <-
c("dplyr",
"knitr",
"here",
"scales",
"magrittr",
"ggplot2",
"cowplot",
"tidyverse",
"Metrics",
"rsample",
"broom",
"sf",
"rgdal",
"summarytools",
"tmap",
"tmaptools",
"lubridate",
"RColorBrewer",
"hrbrthemes",
"ggrepel")
lapply(x, require, character.only = TRUE)
opts_chunk$set(echo = FALSE,
warning = FALSE,
error = FALSE,
message = FALSE,
collapse = TRUE,
comment = NA,
tidy = TRUE,
include = FALSE)
theme_set(theme_ipsum_rc())
options(
digits=4,
scipen = 999
)
knit_hooks$set(inline = function(x) {
prettyNum(round(x,4), big.mark=",")
})
r_downloads <- readRDS(file=here::here("static","data","r-downloads.rds"))
r_downloads <- na.omit(r_downloads)%>%
filter(date<"2018-10-20")
# Chunk 2: read-data
iso_codes <- read_csv(here::here("static","data","iso_countries.csv"))
pop <-read_csv(here::here("static","data","country_populations.csv"))
map_path <- here::here("static","data","world_shapefile","world_shapefile.shp")
world <- sf::st_read(map_path)
educ <- read_csv(here::here("static","data","edu_year.csv"))
educ$edu_index <- as.double(educ$edu_index)
# Chunk 3: merge-country-codes
r_downloads%<>%
full_join(iso_codes, by=c("country"="iso"))%>%
filter(!is.na(sub_region))
# Chunk 4: downloads-by-country
r_downloads%>%
group_by(name)%>%
summarise(n=n())%>%
filter(!is.na(n))%>%
arrange(desc(n))->downloads_per_country
# Chunk 5: create-tibble-with-pop-and-users-only
full_maps <- downloads_per_country%>%
full_join(iso_codes, by=c("name"="name"))%>%
filter(!is.na(sub_region))%>%
left_join(pop, by=c("name"="name"))%>%
select(n, name, iso_3, region, sub_region, pop_2018)%>%
mutate(n_capita=n/pop_2018)%>%
filter(!is.na(n_capita),
pop_2018!=0)
# Chunk 6: merge-years-of-education
full_maps_edu <- full_maps%>%
left_join(educ, by="name")%>%
mutate(edu_index_percent=edu_index*100)%>%
na.omit()
# Chunk 7: plot-relationship-between-educ-and-n-capita
ggplot(full_maps_edu, aes(x=edu_index_percent, y=n_capita))+
geom_point(alpha=0.5)+
labs(title="The education index vs. R downloads per 1,000 capita",
x="Education index",
y="R downloads per 1,000 capita")+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)
# Chunk 8: plot-relationship-between-educ-and-n-capita-log
ggplot(full_maps_edu, aes(x=edu_index_percent, y=log(n_capita)))+
geom_point(alpha=0.5)+
geom_smooth(method="lm", color="salmon", se=FALSE, size=2, alpha=0.5)+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)+
labs(title="The Education Index vs. R Downloads per 1,000 capita",
x="Education index",
y="R downloads per 1,000 capita (logarithm applied)")
# Chunk 9: create-model-of-educ-r-capita
fit <- lm( log(n_capita) ~ edu_index_percent, data = full_maps_edu)
fit%>%
tidy()%>%
kable()
# Chunk 10: remove-outliers
outliers <- c(160,148,140,95,162)
full_maps_edu_sans_outliers <- full_maps_edu[-outliers,]
fit_2 <- lm( log(n_capita) ~ edu_index_percent, data = full_maps_edu_sans_outliers)
summary(fit_2)
plot(fit_2)
# Chunk 11: nesting-models
full_maps_edu %>%
group_by(region) %>%
#Nest models
nest() %>%
#Create linear regression
mutate(model = map(data,~lm(formula=log(n_capita) ~ edu_index, data=.x))) %>%
#Metrics of all models
mutate(coef = map(model,~glance(.x))) %>%
#Models
unnest(coef) %>%
select(region, adj.r.squared) %>%
kable()
# Chunk 12: plot-relationship-between-educ-and-n-capita-log-regions
ggplot(full_maps_edu, aes(x = edu_index, y = log(n_capita)))+
geom_point(alpha = 0.5) +
geom_smooth(method="lm", color="salmon", se=FALSE, size=2, alpha = 0.5) +
labs(title ="The education index vs. R downloads per 1,000 capita by region",
x="Education index",
y="R downloads per 1,000 capita (logarithm applied)")+
facet_wrap(.~region, scales="free")
summary(fit)
blogdown::serve_site()
seatbelts <- datasets::Seatbelts
datasets::Seatbelts
UKDriverDeaths
plot(UKDriverDeaths)
datasets::women
names(seatbelts)
x <-
c("dplyr",
"knitr",
"here",
"scales",
"magrittr",
"ggplot2",
"cowplot",
"tidyverse",
"Metrics",
"rsample",
"broom",
"sf",
"rgdal",
"summarytools",
"tmap",
"tmaptools",
"lubridate",
"RColorBrewer",
"hrbrthemes",
"ggrepel")
lapply(x, require, character.only = TRUE)
opts_chunk$set(echo = FALSE,
warning = FALSE,
error = FALSE,
message = FALSE,
collapse = TRUE,
comment = NA,
tidy = TRUE,
include = FALSE)
theme_set(theme_ipsum_rc())
options(
digits=4,
scipen = 999
)
knit_hooks$set(inline = function(x) {
prettyNum(round(x,4), big.mark=",")
})
seatbelts <- datasets::Seatbelts
names(seatbelts)
seatbelts
class(seatbelts)
seatbelts <- as.tibble(seatbelts)
seatbelts <- as_tibble(seatbelts)
seatblets
names(seatbelts)
rownames(seatbelts)
seatbelts <- datasets::Seatbelts
head(seatbelts)
names(seatbelts)
class(seatbelts)
seatbelts <- as.matrix(seatbelts)
head(seatbelts)
x <-
c("dplyr",
"knitr",
"here",
"scales",
"magrittr",
"ggplot2",
"cowplot",
"tidyverse",
"Metrics",
"rsample",
"broom",
"sf",
"rgdal",
"summarytools",
"tmap",
"tmaptools",
"lubridate",
"RColorBrewer",
"hrbrthemes",
"ggrepel")
lapply(x, require, character.only = TRUE)
opts_chunk$set(echo = FALSE,
warning = FALSE,
error = FALSE,
message = FALSE,
collapse = TRUE,
comment = NA,
tidy = TRUE,
include = FALSE)
theme_set(theme_ipsum_rc())
options(
digits=4,
scipen = 999
)
knit_hooks$set(inline = function(x) {
prettyNum(round(x,4), big.mark=",")
})
seatbelts <- datasets::Seatbelts
seatbelts_time <- time(seatbelts)
seatbelts_time
class(seatbelts_time)
library(zoo)
as.yearmon(Seatbelts)
dim(seatbelts_time)
x <-
c("dplyr",
"knitr",
"here",
"scales",
"magrittr",
"ggplot2",
"cowplot",
"tidyverse",
"Metrics",
"rsample",
"broom",
"sf",
"rgdal",
"summarytools",
"tmap",
"tmaptools",
"lubridate",
"RColorBrewer",
"hrbrthemes",
"ggrepel")
lapply(x, require, character.only = TRUE)
opts_chunk$set(echo = FALSE,
warning = FALSE,
error = FALSE,
message = FALSE,
collapse = TRUE,
comment = NA,
tidy = TRUE,
include = FALSE)
theme_set(theme_ipsum_rc())
options(
digits=4,
scipen = 999
)
knit_hooks$set(inline = function(x) {
prettyNum(round(x,4), big.mark=",")
})
seatbelts <- datasets::Seatbelts
data.frame(Y=as.matrix(seatbelts), date=time(seatbelts))
x <-
c("dplyr",
"knitr",
"here",
"scales",
"magrittr",
"ggplot2",
"cowplot",
"tidyverse",
"Metrics",
"rsample",
"broom",
"sf",
"rgdal",
"summarytools",
"tmap",
"tmaptools",
"lubridate",
"RColorBrewer",
"hrbrthemes",
"ggrepel")
lapply(x, require, character.only = TRUE)
opts_chunk$set(echo = FALSE,
warning = FALSE,
error = FALSE,
message = FALSE,
collapse = TRUE,
comment = NA,
tidy = TRUE,
include = FALSE)
theme_set(theme_ipsum_rc())
options(
digits=4,
scipen = 999
)
knit_hooks$set(inline = function(x) {
prettyNum(round(x,4), big.mark=",")
})
seatbelts <- datasets::Seatbelts
data.frame(as.matrix(seatbelts), date=time(seatbelts))
head(Seatbelts)
Seatbelts
blogdown::serve_site()
