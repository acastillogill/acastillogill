ggplot(cereals_k2_complete, aes(x = shelf, y = calories, color = factor(cluster))) +
geom_jitter()+
scale_color_manual(values=c("#E31A1C",  "#1F78B4" ))+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)
names(cereals)
ggplot(cereals_k2_complete, aes(x = shelf, y = sugars, color = factor(cluster))) +
geom_jitter()+
scale_color_manual(values=c("#E31A1C",  "#1F78B4" ))+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)
ggplot(cereals_k2_complete, aes(x = shelf, y = fat, color = factor(cluster))) +
geom_jitter()+
scale_color_manual(values=c("#E31A1C",  "#1F78B4" ))+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)
ggplot(cereals_k2_complete, aes(x = shelf, y = calories, color = factor(cluster))) +
geom_jitter()+
scale_color_manual(values=c("#E31A1C",  "#1F78B4" ))+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)
ggplot(cereals_k2_complete, aes(x = as.factor(shelf), y = calories, color = factor(cluster))) +
geom_jitter()+
scale_color_manual(values=c("#E31A1C",  "#1F78B4" ))+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)
ggplot(cereals_k2_complete, aes(x = sugar, y = calories, color = factor(cluster))) +
geom_jitter()+
scale_color_manual(values=c("#E31A1C",  "#1F78B4" ))+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)
ggplot(cereals_k2_complete, aes(x = sugars, y = calories, color = factor(cluster))) +
geom_jitter()+
scale_color_manual(values=c("#E31A1C",  "#1F78B4" ))+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)
ggplot(cereals_k2_complete, aes(x = sugars, y = calories, color = factor(cluster))) +
geom_jitter()+
scale_color_manual(values=c("#1F78B4" , "#E31A1C")+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)
ggplot(cereals_k2_complete, aes(x = sugars, y = shelf, color = factor(cluster))) +
geom_jitter()+
scale_color_manual(values=c("#1F78B4" , "#E31A1C")+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)
ggplot(cereals_k2_complete, aes(x = sugars, y = shelf, color = factor(cluster))) +
geom_jitter()+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)
ggplot(cereals_k2_complete, aes(x = sugars, y = shelf, color = factor(cluster))) +
geom_jitter()+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)
ggplot(cereals_k2_complete, aes(x = calories, y = shelf, color = factor(cluster))) +
geom_jitter()+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)
ggplot(cereals_k2_complete, aes(x = vitamins, y = shelf, color = factor(cluster))) +
geom_jitter()+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)
ggplot(cereals_k2_complete, aes(x = fiber, y = shelf, color = factor(cluster))) +
geom_jitter()+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)
ggplot(cereals_k2_complete, aes(x = carbo, y = shelf, color = factor(cluster))) +
geom_jitter()+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)
ggplot(cereals_k2_complete, aes(x = carbo, y = shelf, color = factor(cluster))) +
geom_point()+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)
ggplot(cereals_k2_complete, aes(x = sugar, y = shelf, color = factor(cluster))) +
geom_point()+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)
ggplot(cereals_k2_complete, aes(x = sugars, y = shelf, color = factor(cluster))) +
geom_point()+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)
#Hierarchical clustering by complete linkage
hc_cereals_complete <- hclust(dist_cereals, method = "complete")
#Selecting two clusters
clusters_k2_complete <- cutree(hc_cereals_complete, k=3)
#Appending the clusters to all the dataset
cereals_k2_complete <- mutate(cereals, cluster=clusters_k2_complete)
complete_count <- count(cereals_k2_complete, cluster)
ggplot(cereals_k2_complete, aes(x = sugars, y = shelf, color = factor(cluster))) +
geom_point()+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)
ggplot(cereals_k2_complete, aes(x = sugars, y = shelf, color = factor(cluster))) +
geom_point()+
scale_color_manual(values=c("#1F78B4" , "#E31A1C",  "#33A02C" ))+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)
ggplot(cereals_k2_complete, aes(x = mfr, y = shelf, color = factor(cluster))) +
geom_point()+
scale_color_manual(values=c("#1F78B4" , "#E31A1C",  "#33A02C" ))+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)
#Hierarchical clustering by complete linkage
hc_cereals_complete <- hclust(dist_cereals, method = "complete")
#Selecting two clusters
clusters_k2_complete <- cutree(hc_cereals_complete, k=2)
#Appending the clusters to all the dataset
cereals_k2_complete <- mutate(cereals, cluster=clusters_k2_complete)
complete_count <- count(cereals_k2_complete, cluster)
ggplot(cereals_k2_complete, aes(x = sugars, y = shelf, color = factor(cluster))) +
geom_point()+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)
ggplot(cereals_k2_complete, aes(x = sugars, y = shelf, color = factor(cluster))) +
geom_point()+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)+
scale_y_discrete()
ggplot(cereals_k2_complete, aes(x = sugars, y = shelf, color = factor(cluster))) +
geom_point()+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)+
scale_y_continuous(breaks=c(1,2,3))
ggplot(cereals_k2_complete, aes(x = mfr, y = shelf, color = factor(cluster))) +
geom_point()+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)+
scale_y_continuous(breaks=c(1,2,3))
ggplot(cereals_k2_complete, aes(x = fat, y = shelf, color = factor(cluster))) +
geom_point()+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)+
scale_y_continuous(breaks=c(1,2,3))
ggplot(cereals_k2_complete, aes(x = weight, y = shelf, color = factor(cluster))) +
geom_point()+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)+
scale_y_continuous(breaks=c(1,2,3))
ggplot(cereals_k2_complete, aes(x = carbo, y = shelf, color = factor(cluster))) +
geom_point()+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)+
scale_y_continuous(breaks=c(1,2,3))
ggplot(cereals_k2_complete, aes(x = rating y = shelf, color = factor(cluster))) +
geom_point()+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)+
scale_y_continuous(breaks=c(1,2,3))
ggplot(cereals_k2_complete, aes(x = rating, y = shelf, color = factor(cluster))) +
geom_point()+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)+
scale_y_continuous(breaks=c(1,2,3))
ggplot(cereals_k2_complete, aes(x = cups, y = shelf, color = factor(cluster))) +
geom_point()+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)+
scale_y_continuous(breaks=c(1,2,3))
ggplot(cereals_k2_complete, aes(x = sugars, y = shelf, color = factor(cluster))) +
geom_point()+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)+
scale_y_continuous(breaks=c(1,2,3))
table(cereals_k2_complete$factor,cereals_k2_complete$cluster)
table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)
table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)%>%
kableExtra::kable()
ggplot(cereals_k2_complete, aes(x = sugars, y = shelf, color = factor(cluster))) +
geom_point()+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)+
scale_y_continuous(breaks=c(1,2,3))
blogdown::serve_site()
plot(hc_cereals_complete)
ggplot(cereals_k2_complete, aes(x = sugars, y = shelf, color = factor(cluster))) +
geom_point()+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)+
scale_y_continuous(breaks=c(1,2,3))+
labs(title="Which shelves have the most sugary cereals?",
x="Sugar content per serving",
y="Supermarket shelf: from the floor (1) to the top (3)")
ggplot(cereals_k2_complete, aes(x = sugars, y = shelf, color = factor(cluster))) +
geom_point()+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=1, size=1, segment.alpha = 0.5)+
scale_y_continuous(breaks=c(1,2,3))+
labs(title="Which shelves have the most sugary cereals?",
x="Sugar content per serving",
y="Supermarket shelf: from the floor (1) to the top (3)")
---
title: "Cluster analysis: wear your seatbelts"
author: √Ångela Castillo-Gill
date: '2018-10-17'
slug: cluster-analysis-wear-your-seatbelts
categories: []
tags:
- Cluster Analysis
description: "I do hierarchical clustering on the seatbelts dataset."
banner: "banners/cluster.png"
images: ["banners/cluster.png"]
draft: FALSE
header:
image: "banners/cluster.png"
caption: ""
output:
blogdown::html_page:
toc: true
number_sections: true
toc_depth: 2
fig_caption: true
editor_options:
chunk_output_type: console
---
```{r setup, include=FALSE}
x <-
c("dplyr",
"knitr",
"here",
"scales",
"magrittr",
"ggplot2",
"cowplot",
"tidyverse",
"Metrics",
"rsample",
"broom",
"sf",
"rgdal",
"summarytools",
"tmap",
"tmaptools",
"lubridate",
"RColorBrewer",
"hrbrthemes",
"ggrepel",
"dummies",
"stats",
"ggrepel")
lapply(x, require, character.only = TRUE)
opts_chunk$set(echo = FALSE,
warning = FALSE,
error = FALSE,
message = FALSE,
collapse = TRUE,
comment = NA,
tidy = TRUE,
include = FALSE)
theme_set(theme_ipsum_rc())
options(
digits=4,
scipen = 999
)
knit_hooks$set(inline = function(x) {
prettyNum(round(x,4), big.mark=",")
})
cereals <- read_csv(here::here("static","data","cereals.csv"))
```
# Summary
*To see the all the code used in this post, visit my [GitHub repository for this site](https://github.com/acastillogill/acastillogill)*
- Objectives: To find what what kind of clusters are there in the [cereals dataset](https://www.kaggle.com/crawford/80-cereals/home) available on Kaggle.
- Challenge: To implement a clustering algorithm for the first time.
- Data points: `r length(cereals)*nrow(cereals)`
- Language: R
# Question
**What types of clusters are there in the cereals dataset?**
# Dataset description
The dataset is available on Kaggle. It contains nutrition data on 80 cereal products. I chose this dataset because it had plenty of numeric variables and I'm interested in using two types of clustering algorithms to explore the data. Another reason I chose this dataset is because the data is unlabelled so I can add labels with clustering.
I wanted to focus on numeric variables using Euclidean distances. Not all variables in the dataset were numeric: the cereal name, the manufacturer, the type of cereal (hot or cold). There was also a numeric variable `Shelf` corresponding to the supemarket display shelf that doesn't make much sense as a numeric variable, so I removed it from the analysis. After leaving just numeric variables, I was left with 12 variables.
I first scaled the data because I will calculate the Euclidean distance between each cereal but the variables are on different scales. When the data are scaled, the mean for each variable will be zero and a standard deviation of one.
```{r scaling-data}
#Remove categorical variables
num_cereals <- cereals[,4:16]
#Remove shelf
num_cereals$shelf <- NULL
#scale numeric variables
num_cereals <- scale(num_cereals)
#Calculate distances
dist_cereals <- dist(num_cereals, method = "euclidean")
```
```{r include=TRUE}
head(num_cereals)
```
# Hierarchical clustering
I first implemented hierarchical clustering with three different linkage methods.
- Complete: maximum distance between two sets.
- Single: minimum distance between two sets.
- Average: average distance between two sets.
```{r hierarchical-clustering-complete}
#Hierarchical clustering by complete linkage
hc_cereals_complete <- hclust(dist_cereals, method = "complete")
#Selecting two clusters
clusters_k2_complete <- cutree(hc_cereals_complete, k=2)
#Appending the clusters to all the dataset
cereals_k2_complete <- mutate(cereals, cluster=clusters_k2_complete)
complete_count <- count(cereals_k2_complete, cluster)
```
```{r hierarchical-clustering-single}
#Hierarchical clustering by single linkage
hc_cereals_single <- hclust(dist_cereals, method = "single")
#Selecting two clusters
clusters_k2_single <- cutree(hc_cereals_single, k=2)
#Appending the clusters to all the dataset
cereals_k2_single <- mutate(cereals, cluster=clusters_k2_single)
single_count <- count(cereals_k2_single, cluster)
```
```{r hierarchical-clustering-average}
#Hierarchical clustering by average linkage
hc_cereals_average <- hclust(dist_cereals, method = "average")
#Selecting two clusters
clusters_k2_average <- cutree(hc_cereals_average, k=2)
#Appending the clusters to all the dataset
cereals_k2_average <- mutate(cereals, cluster=clusters_k2_average)
average_count <- count(cereals_k2_average, cluster)
```
```{r dendrograms}
plot(hc_cereals_complete)
```
```{r counting-sugar-shelf}
table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)
```
```{r sugar-shelf, include=TRUE, fig.height=7, fig.width=14}
ggplot(cereals_k2_complete, aes(x = sugars, y = shelf, color = factor(cluster))) +
geom_point()+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=1, size=1, segment.alpha = 0.5)+
scale_y_continuous(breaks=c(1,2,3))+
labs(title="Which shelves have the most sugary cereals?",
x="Sugar content per serving",
y="Supermarket shelf: from the floor (1) to the top (3)")
```
# Results
# Conclusion
plot(hc_cereals_complete)
ggplot(cereals_k2_complete, aes(x = sugars, y = shelf, color = factor(cluster))) +
geom_point(alpha=0.5)+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=1, size=3, segment.alpha = 0.5)+
scale_y_continuous(breaks=c(1,2,3))+
labs(title="Which shelf has the most sugary cereals?",
x="Sugar content per serving",
y="Supermarket shelf: from the floor (1) to the top (3)")
complete_count
blogdown::serve_site()
as.vector(complete_count)
vector(complete_count)
kable(complete_count)
table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)%>%
kable(row.names = TRUE)%>%
kable_styling(full_width=F)%>%
add_header_above(c("Cluster","Number of cereals"))
library(kableExtra)
table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)%>%
kable(row.names = TRUE)%>%
kable_styling(full_width=F)%>%
add_header_above(c("Cluster","Number of cereals"))
table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)%>%
kable(row.names = TRUE)%>%
kable_styling(full_width=F)%>%
add_header_above(c("Cluster"=1,"Number of cereals"=1))
table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)
table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)%>%
mutate(
Shelf = row.names(.))%>%
colnames(c("Cluster","Number of cereals"))%>%
kable()%>%
kable_styling(full_width=F)
table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)%>%
as.data.frame()%>%
mutate(
Shelf = row.names(.))%>%
colnames(c("Cluster","Number of cereals"))%>%
kable()%>%
kable_styling(full_width=F)
table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)%>%
as.data.frame()%>%
table
table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)%>%
as.tibble()%>%
mutate(
Shelf = row.names(.))%>%
colnames(c("Cluster","Number of cereals"))%>%
kable()%>%
kable_styling(full_width=F)
table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)%>%
as_tibble()%>%
mutate(
Shelf = row.names(.))%>%
colnames(c("Cluster","Number of cereals"))%>%
kable()%>%
kable_styling(full_width=F)
table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)%>%
as_tibble()%>%
mutate(
Shelf = row.names(.))%>%
rename(c("Cluster","Number of cereals"))%>%
kable()%>%
kable_styling(full_width=F)
table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)%>%
as_tibble()%>%
mutate(Shelf = row.names(.))
table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)
class(table(cereals_k2_complete$shelf,cereals_k2_complete$cluster))
table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)%>%
as_tibble("1","2")
table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)%>%
colnames(c("Cluster","Number of cereals"))
table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)%>%
colnames(c("Cluster","Number of cereals"))%>%
as_tibble()
table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)%>%
rename(c("Cluster","Number of cereals"))
shelf_cluster <- table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)
colnames(shelf_cluster) <- c("Cluster","Number of cereals")
shelf_cluster
shelf_cluster%>%
as_tibble()%>%
√ß
shelf_cluster%>%
as_tibble()%>%
mutate(Shelf = row.names(.))%>%
kable()%>%
kable_styling(full_width=F)
shelf_cluster%>%
as_tibble()%>%
mutate(Shelf = row.names(.))
class(shelf_cluster)
shelf_cluster%>%
as_tibble()%>%
kable()
shelf_cluster <- table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)
colnames(shelf_cluster) <- c("Cluster","Number of cereals")
shelf_cluster%>%
kable()%>%
kable_styling(full_width=F)
shelf_cluster <- table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)
colnames(shelf_cluster) <- c("Cluster","Number of cereals")
shelf_cluster%>%
kable(row.names = TRUE)%>%
kable_styling(full_width=F)
library(formattable)
mutate(
car = row.names(.),
shelf_cluster <- table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)
colnames(shelf_cluster) <- c("Cluster","Number of cereals")
shelf_cluster%>%
mutate(
car = row.names(.))%>%
kable(row.names = TRUE)%>%
kable_styling(full_width=F)
shelf_cluster <- as.data.frame(shelf_cluster)
shelf_cluster
shelf_cluster <- table(cereals_k2_complete$shelf,cereals_k2_complete$cluster)
colnames(shelf_cluster) <- c("Cluster","Number of cereals")
shelf_cluster <- as.tibble(shelf_cluster)
shelf_cluster%>%
mutate(
car = row.names(.))%>%
kable(row.names = TRUE)%>%
kable_styling(full_width=F)
shelf_cluster
colnames(shelf_cluster) <- c("Cluster","Number of cereals")
shelf_cluster <- as.tibble(shelf_cluster)
complete_count
blogdown::serve_site()
hclust
hc_cereals_complete$height
library(dendextend)
dend_cereals <- as.dendrogram(hc_cereals_complete)
dend_colored <- color_branches(dend_cereals, h=11)
plot(dend_colored)
dend_cereals <- as.dendrogram(hc_cereals_complete)
dend_colored <- color_branches(dend_cereals, k=2)
plot(dend_colored)
dend_cereals <- as.dendrogram(hc_cereals_complete)
dend_colored <- color_branches(dend_cereals, h=10)
plot(dend_colored)
dend_cereals <- as.dendrogram(hc_cereals_complete)
dend_colored <- color_branches(dend_cereals, k=2)
plot(dend_colored)
hc_cereals_complete %>%
group_by(cluster) %>%
summarise_all(funs(mean(.))
hc_cereals_complete %>%
group_by(cluster) %>%
summarise_all(funs(mean(.)))
hc_k2_complete %>%
group_by(cluster) %>%
summarise_all(funs(mean(.)))
cereals_k2_complete %>%
group_by(cluster) %>%
summarise_all(funs(mean(.)))
names(cereals_k2_complete)
cereals_k2_complete %>%
select(-shelf,-name,-mfr,-type)%>%
group_by(cluster) %>%
summarise_all(funs(mean(.)))
cereals_k2_complete %>%
select(-shelf,-name,-mfr,-type)%>%
group_by(cluster) %>%
summarise_all(funs(mean(.)))%>%
kable()%>%
kable_styling()
complete_count$n
cereals_k2_complete %>%
cbind(complete_count$n)
cereals_k2_complete %>%
rbind(complete_count$n)
cereals_k2_complete %>%
select(-shelf,-name,-mfr,-type)%>%
group_by(cluster) %>%
summarise_all(funs(mean(.)))%>%
cbind(complete_count$n)
ggplot(cereals_k2_complete, aes(x = sugars, y = shelf, color = factor(cluster))) +
geom_point(alpha=0.5)+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=2, size=3, segment.alpha = 0.5)+
scale_y_continuous(breaks=c(1,2,3))+
labs(title="Which shelf has the most sugary cereals?",
x="Sugar content per serving",
y="Supermarket shelf: from the floor (1) to the top (3)")
blogdown::serve_site()
