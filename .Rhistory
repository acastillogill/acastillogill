gather(key = "type",value="amount",2:3)%>%
ggplot(aes(x=time,
y=amount,
color=type))+
geom_area(aes(fill=type),
position = "dodge",
alpha=0.5,linetype="dashed",size=1 )+
theme_classic()+
scale_fill_manual(values=c("#00BA38","#F8766D"))+
scale_color_manual(values=c("#00BA38","#F8766D"))+
scale_x_continuous(breaks = int_breaks)+
guides( color = FALSE,
fill = guide_legend(title = ""))+
labs(
title = "Costs vs. benefits (upper bound)",
subtitle = "Costs were divided by 1,000 to allow benefits to appear in the plot.",
x = "Time",
y = "Euros"
)+theme(legend.position = "top",
text=element_text(size=10),
plot.background = element_rect(fill = "transparent", colour = NA)) -> cb_upper_plot
cost_benefit_plot<- arrangeGrob(cb_lower_plot,cb_upper_plot, nrow=2)
ggsave("cost_benefit_plot.png",
cost_benefit_plot,
width = 8,
height= 8,
limitsize = FALSE,
bg="transparent")
cb_lower %>%
mutate(costs=costs/1000)%>%
gather(key = "type",value="amount",2:3)%>%
ggplot(aes(x=time,
y=amount,
color=type))+
geom_area(aes(fill=type),
position = "dodge",
alpha=0.5,linetype="dashed",size=1 )+
theme_classic()+
scale_x_continuous(breaks = int_breaks)+
guides( color = FALSE,
fill = guide_legend(title = ""))+
scale_fill_manual(values=c("#00BA38","#F8766D"))+
scale_color_manual(values=c("#00BA38","#F8766D"))+
labs(
title = "Costs vs. benefits (lower bound)",
subtitle = "Costs were divided by 1,000 to allow benefits to appear in the plot.",
x = "Time",
y = "Euros")+
theme(legend.position = "top",
text=element_text(size=10),
plot.background = element_rect(fill = "transparent",
colour = NA),
title=element_text(color="#BCE2D7",
size=12),
plot.subtitle=element_text(color="#BCE2D7"),
axis.ticks = element_line(color="#BCE2D7"),
axis.text = element_text(color="#BCE2D7",
size=8))-> cb_lower_plot
cb_upper %>%
mutate(costs=costs/1000)%>%
gather(key = "type",value="amount",2:3)%>%
ggplot(aes(x=time,
y=amount,
color=type))+
geom_area(aes(fill=type),
position = "dodge",
alpha=0.5,linetype="dashed",size=1 )+
theme_classic()+
scale_fill_manual(values=c("#00BA38","#F8766D"))+
scale_color_manual(values=c("#00BA38","#F8766D"))+
scale_x_continuous(breaks = int_breaks)+
guides( color = FALSE,
fill = guide_legend(title = ""))+
labs(
title = "Costs vs. benefits (upper bound)",
subtitle = "Costs were divided by 1,000 to allow benefits to appear in the plot.",
x = "Time",
y = "Euros"
)+theme(legend.position = "top",
text=element_text(size=10),
plot.background = element_rect(fill = "transparent", colour = NA)) -> cb_upper_plot
cost_benefit_plot<- arrangeGrob(cb_lower_plot,cb_upper_plot, nrow=2)
ggsave("cost_benefit_plot.png",
cost_benefit_plot,
width = 8,
height= 8,
limitsize = FALSE,
bg="transparent")
cb_lower %>%
mutate(costs=costs/1000)%>%
gather(key = "type",value="amount",2:3)%>%
ggplot(aes(x=time,
y=amount,
color=type))+
geom_area(aes(fill=type),
position = "dodge",
alpha=0.5,linetype="dashed",size=1 )+
theme_classic()+
scale_x_continuous(breaks = int_breaks)+
guides( color = FALSE,
fill = guide_legend(title = ""))+
scale_fill_manual(values=c("#00BA38","#F8766D"))+
scale_color_manual(values=c("#00BA38","#F8766D"))+
labs(
title = "Costs vs. benefits (lower bound)",
subtitle = "Costs were divided by 1,000 to allow benefits to appear in the plot.",
x = "Time",
y = "Euros")+
theme(legend.position = "top",
text=element_text(size=10),
plot.background = element_rect(fill = "transparent",
colour = NA),
title=element_text(color="#BCE2D7",
size=12),
plot.subtitle=element_text(color="#BCE2D7"),
axis.ticks = element_line(color="#BCE2D7"),
axis.text = element_text(color="#BCE2D7",
size=12))-> cb_lower_plot
cb_upper %>%
mutate(costs=costs/1000)%>%
gather(key = "type",value="amount",2:3)%>%
ggplot(aes(x=time,
y=amount,
color=type))+
geom_area(aes(fill=type),
position = "dodge",
alpha=0.5,linetype="dashed",size=1 )+
theme_classic()+
scale_fill_manual(values=c("#00BA38","#F8766D"))+
scale_color_manual(values=c("#00BA38","#F8766D"))+
scale_x_continuous(breaks = int_breaks)+
guides( color = FALSE,
fill = guide_legend(title = ""))+
labs(
title = "Costs vs. benefits (upper bound)",
subtitle = "Costs were divided by 1,000 to allow benefits to appear in the plot.",
x = "Time",
y = "Euros"
)+theme(legend.position = "top",
text=element_text(size=10),
plot.background = element_rect(fill = "transparent", colour = NA)) -> cb_upper_plot
cost_benefit_plot<- arrangeGrob(cb_lower_plot,cb_upper_plot, nrow=2)
ggsave("cost_benefit_plot.png",
cost_benefit_plot,
width = 8,
height= 8,
limitsize = FALSE,
bg="transparent")
cb_lower %>%
mutate(costs=costs/1000)%>%
gather(key = "type",value="amount",2:3)%>%
ggplot(aes(x=time,
y=amount,
color=type))+
geom_area(aes(fill=type),
position = "dodge",
alpha=0.5,linetype="dashed",size=1 )+
theme_classic()+
scale_x_continuous(breaks = int_breaks)+
guides( color = FALSE,
fill = guide_legend(title = ""))+
scale_fill_manual(values=c("#00BA38","#F8766D"))+
scale_color_manual(values=c("#00BA38","#F8766D"))+
labs(
title = "Costs vs. benefits (lower bound)",
subtitle = "Costs were divided by 1,000 to allow benefits to appear in the plot.",
x = "Time",
y = "Euros")+
theme(legend.position = "top",
text=element_text(size=10),
plot.background = element_rect(fill = "transparent",
colour = NA),
title=element_text(color="#BCE2D7",
size=20),
plot.subtitle=element_text(color="#BCE2D7"),
axis.ticks = element_line(color="#BCE2D7"),
axis.text = element_text(color="#BCE2D7",
size=12))-> cb_lower_plot
cb_upper %>%
mutate(costs=costs/1000)%>%
gather(key = "type",value="amount",2:3)%>%
ggplot(aes(x=time,
y=amount,
color=type))+
geom_area(aes(fill=type),
position = "dodge",
alpha=0.5,linetype="dashed",size=1 )+
theme_classic()+
scale_fill_manual(values=c("#00BA38","#F8766D"))+
scale_color_manual(values=c("#00BA38","#F8766D"))+
scale_x_continuous(breaks = int_breaks)+
guides( color = FALSE,
fill = guide_legend(title = ""))+
labs(
title = "Costs vs. benefits (upper bound)",
subtitle = "Costs were divided by 1,000 to allow benefits to appear in the plot.",
x = "Time",
y = "Euros"
)+theme(legend.position = "top",
text=element_text(size=10),
plot.background = element_rect(fill = "transparent", colour = NA)) -> cb_upper_plot
cost_benefit_plot<- arrangeGrob(cb_lower_plot,cb_upper_plot, nrow=2)
ggsave("cost_benefit_plot.png",
cost_benefit_plot,
width = 8,
height= 8,
limitsize = FALSE,
bg="transparent")
cb_lower %>%
mutate(costs=costs/1000)%>%
gather(key = "type",value="amount",2:3)%>%
ggplot(aes(x=time,
y=amount,
color=type))+
geom_area(aes(fill=type),
position = "dodge",
alpha=0.5,linetype="dashed",size=1 )+
theme_classic()+
scale_x_continuous(breaks = int_breaks)+
guides( color = FALSE,
fill = guide_legend(title = ""))+
scale_fill_manual(values=c("#00BA38","#F8766D"))+
scale_color_manual(values=c("#00BA38","#F8766D"))+
labs(
title = "Costs vs. benefits (lower bound)",
subtitle = "Costs were divided by 1,000 to allow benefits to appear in the plot.",
x = "Time",
y = "Euros")+
theme(legend.position = "top",
text=element_text(size=10),
plot.background = element_rect(fill = "transparent",
colour = NA),
title=element_text(color="#BCE2D7",
size=20),
plot.subtitle=element_text(color="#BCE2D7",
size=15),
axis.ticks = element_line(color="#BCE2D7"),
axis.text = element_text(color="#BCE2D7",
size=12))-> cb_lower_plot
cb_upper %>%
mutate(costs=costs/1000)%>%
gather(key = "type",value="amount",2:3)%>%
ggplot(aes(x=time,
y=amount,
color=type))+
geom_area(aes(fill=type),
position = "dodge",
alpha=0.5,linetype="dashed",size=1 )+
theme_classic()+
scale_fill_manual(values=c("#00BA38","#F8766D"))+
scale_color_manual(values=c("#00BA38","#F8766D"))+
scale_x_continuous(breaks = int_breaks)+
guides( color = FALSE,
fill = guide_legend(title = ""))+
labs(
title = "Costs vs. benefits (upper bound)",
subtitle = "Costs were divided by 1,000 to allow benefits to appear in the plot.",
x = "Time",
y = "Euros"
)+theme(legend.position = "top",
text=element_text(size=10),
plot.background = element_rect(fill = "transparent", colour = NA)) -> cb_upper_plot
cost_benefit_plot<- arrangeGrob(cb_lower_plot,cb_upper_plot, nrow=2)
ggsave("cost_benefit_plot.png",
cost_benefit_plot,
width = 8,
height= 8,
limitsize = FALSE,
bg="transparent")
cb_lower %>%
mutate(costs=costs/1000)%>%
gather(key = "type",value="amount",2:3)%>%
ggplot(aes(x=time,
y=amount,
color=type))+
geom_area(aes(fill=type),
position = "dodge",
alpha=0.5,linetype="dashed",size=1 )+
theme_classic()+
scale_x_continuous(breaks = int_breaks)+
guides( color = FALSE,
fill = guide_legend(title = ""))+
scale_fill_manual(values=c("#00BA38","#F8766D"))+
scale_color_manual(values=c("#00BA38","#F8766D"))+
labs(
title = "Costs vs. benefits (lower bound)",
subtitle = "Costs were divided by 1,000 to allow benefits to appear in the plot.",
x = "Time",
y = "Euros")+
theme(legend.position = "top",
text=element_text(size=10),
plot.background = element_rect(fill = "transparent",
colour = NA),
title=element_text(color="#BCE2D7",
size=20),
plot.subtitle=element_text(color="#BCE2D7",
size=15),
axis.ticks = element_line(color="#BCE2D7"),
axis.text = element_text(color="#BCE2D7",
size=12))-> cb_lower_plot
cb_upper %>%
mutate(costs=costs/1000)%>%
gather(key = "type",value="amount",2:3)%>%
ggplot(aes(x=time,
y=amount,
color=type))+
geom_area(aes(fill=type),
position = "dodge",
alpha=0.5,linetype="dashed",size=1 )+
theme_classic()+
scale_fill_manual(values=c("#00BA38","#F8766D"))+
scale_color_manual(values=c("#00BA38","#F8766D"))+
scale_x_continuous(breaks = int_breaks)+
guides( color = FALSE,
fill = guide_legend(title = ""))+
labs(
title = "Costs vs. benefits (upper bound)",
subtitle = "Costs were divided by 1,000 to allow benefits to appear in the plot.",
x = "Time",
y = "Euros"
)+theme(legend.position = "top",
text=element_text(size=10),
plot.background = element_rect(fill = "transparent",
colour = NA),
title=element_text(color="#BCE2D7",
size=20),
plot.subtitle=element_text(color="#BCE2D7",
size=15),
axis.ticks = element_line(color="#BCE2D7"),
axis.text = element_text(color="#BCE2D7",
size=12))-> cb_upper_plot
cost_benefit_plot<- arrangeGrob(cb_lower_plot,cb_upper_plot, nrow=2)
ggsave("cost_benefit_plot.png",
cost_benefit_plot,
width = 8,
height= 8,
limitsize = FALSE,
bg="transparent")
#Creating breaks for years
int_breaks <-
function(x, n = 13)
pretty(x, n)[pretty(x, n) %% 1 == 0]
#Simulations date
healthy_sim <- ggplot(df_date,aes(x=time,
y=sHeal,
group=run,
fill=run,
color=run))+
geom_area(
position = "dodge",
alpha=0.5,linetype="dashed",size=1)+
ylab("Healthy")+
xlab("Time") +theme_classic()+
scale_fill_viridis_c()+
scale_color_viridis_c()+
scale_x_continuous(breaks = int_breaks)+
guides(color=FALSE,
fill = guide_legend(title = "Run"))+
labs(
title = "Healthy date palms",
x = "Time",
y = "Date palms"
)+
theme(legend.position = "top",
text = element_text(color="BCE2D7"))
early_date <- read.xlsx("early.xlsx",sheet = 3)
early_date$year <- as.double(early_date$year)
jesus_line <- ggplot(early_date,aes(x=year,y=Trees,group=Classification))+
geom_line(color="red",
size=1)
infested_sim <- ggplot(df_date,aes(x=time,
y=sInf,
fill=run,
group=run,
color=run))+
geom_area(
position = "dodge",
alpha=0.5,linetype="dashed",size=1)+
ylab("Infested")+
xlab("Time") +
theme_classic()+
scale_fill_viridis_c()+
scale_color_viridis_c()+
geom_line(data=early_date,
aes(x=year,
y=Trees,
group=Classification),
color="red",
inherit.aes = F,
size=2,
alpha=0.5)+
scale_x_continuous(breaks = int_breaks)+
guides(color=FALSE,
fill = guide_legend(title = "Run"))+
labs(
title = "Infested date palms",
subtitle = "Red line represents reported volume of infested palms.",
x = "Time",
y = "Date palms"
)+theme(legend.position = "top")
treated_sim <- ggplot(df_date,aes(x=time,
y=sTre,
fill=run,
group=run,
color=run))+
geom_area(
position = "dodge",
alpha=0.5,
linetype="dashed",
size=1)+
ylab("Treated")+
xlab("Time")  +
theme_classic()+
scale_fill_viridis_c()+
scale_color_viridis_c()+
scale_x_continuous(breaks = int_breaks)+
guides(color=FALSE,
fill = guide_legend(title = "Run"))+
labs(
title = "Date palms under treatment",
x = "Time",
y = "Date palms"
)+theme(legend.position = "top")
simulations_date<- arrangeGrob(healthy_sim,infested_sim,treated_sim, nrow=1)
#Creating breaks for years
int_breaks <-
function(x, n = 13)
pretty(x, n)[pretty(x, n) %% 1 == 0]
#Simulations date
healthy_sim <- ggplot(df_date,aes(x=time,
y=sHeal,
group=run,
fill=run,
color=run))+
geom_area(
position = "dodge",
alpha=0.5,linetype="dashed",size=1)+
ylab("Healthy")+
xlab("Time") +theme_classic()+
scale_fill_viridis_c()+
scale_color_viridis_c()+
scale_x_continuous(breaks = int_breaks)+
guides(color=FALSE,
fill = guide_legend(title = "Run"))+
labs(
title = "Healthy date palms",
x = "Time",
y = "Date palms"
)+
theme(legend.position = "top",
text = element_text(color="#BCE2D7"))
early_date <- read.xlsx("early.xlsx",sheet = 3)
early_date$year <- as.double(early_date$year)
jesus_line <- ggplot(early_date,aes(x=year,y=Trees,group=Classification))+
geom_line(color="red",
size=1)
infested_sim <- ggplot(df_date,aes(x=time,
y=sInf,
fill=run,
group=run,
color=run))+
geom_area(
position = "dodge",
alpha=0.5,linetype="dashed",size=1)+
ylab("Infested")+
xlab("Time") +
theme_classic()+
scale_fill_viridis_c()+
scale_color_viridis_c()+
geom_line(data=early_date,
aes(x=year,
y=Trees,
group=Classification),
color="red",
inherit.aes = F,
size=2,
alpha=0.5)+
scale_x_continuous(breaks = int_breaks)+
guides(color=FALSE,
fill = guide_legend(title = "Run"))+
labs(
title = "Infested date palms",
subtitle = "Red line represents reported volume of infested palms.",
x = "Time",
y = "Date palms"
)+theme(legend.position = "top")
treated_sim <- ggplot(df_date,aes(x=time,
y=sTre,
fill=run,
group=run,
color=run))+
geom_area(
position = "dodge",
alpha=0.5,
linetype="dashed",
size=1)+
ylab("Treated")+
xlab("Time")  +
theme_classic()+
scale_fill_viridis_c()+
scale_color_viridis_c()+
scale_x_continuous(breaks = int_breaks)+
guides(color=FALSE,
fill = guide_legend(title = "Run"))+
labs(
title = "Date palms under treatment",
x = "Time",
y = "Date palms"
)+theme(legend.position = "top")
simulations_date<- arrangeGrob(healthy_sim,infested_sim,treated_sim, nrow=1)
ggsave("simulations_date.png",simulations_date,width = 14,height=8,limitsize = FALSE,bg="transparent")
blogdown::serve_site()
