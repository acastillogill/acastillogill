theme_minimal() +
labs(title = "Asia",
x = "",
y = "Number of loans") +
theme(axis.text.x = element_text(angle = 45, hjust=1),
axis.ticks.x = element_blank()) +
#guides(fill = guide_legend(title = "Repayment interval")) +
scale_fill_viridis_d()+
scale_color_viridis_d()+
coord_flip(ylim = c(0,170000))
SA_repayment_interval <- kiva_loans %>%
filter(region=="SA")%>%
dplyr::count(repayment_interval)%>%
mutate(repayment_interval=reorder(repayment_interval, n))%>%
ggplot(aes(
x = repayment_interval,
y = n,
fill = repayment_interval,
color = repayment_interval)) +
geom_col(show.legend = FALSE, alpha=0.7) +
theme_minimal() +
labs(title = "South America",
x = "",
y = "Number of loans") +
theme(axis.text.x = element_text(angle = 45, hjust=1),
axis.ticks.x = element_blank()) +
#guides(fill = guide_legend(title = "Repayment interval")) +
scale_fill_viridis_d()+
scale_color_viridis_d()+
coord_flip(ylim = c(0,170000))
grid.arrange(AS_repayment_interval,
AF_repayment_interval,
SA_repayment_interval, OC_repayment_interval,
nrow=1,
top = grid::textGrob("Repayment interval by region",
x=0,
hjust=0,
gp=gpar(fontsize=30,
font=8))
)
AF_sector <- kiva_loans %>%
filter(region=="AF")%>%
dplyr::count(sector)%>%
mutate(sector=reorder(sector, n))%>%
ggplot(aes(
x = sector,
y = n,
fill = sector,
color = sector)) +
geom_col(show.legend = FALSE, alpha=0.7) +
theme_minimal() +
labs(title = "Africa",
x = "",
y = "Number of loans") +
theme(axis.text.x = element_text(angle = 45, hjust=1),
axis.ticks.x = element_blank()) +
#guides(fill = guide_legend(title = "Sector")) +
scale_fill_viridis_d()+
scale_color_viridis_d()+
coord_flip(ylim = c(0,80000))
OC_sector <- kiva_loans %>%
filter(region=="OC")%>%
dplyr::count(sector)%>%
mutate(sector=reorder(sector, n))%>%
ggplot(aes(
x = sector,
y = n,
fill = sector,
color = sector)) +
geom_col(show.legend = FALSE, alpha=0.7) +
theme_minimal() +
labs(title = "Oceania",
x = "",
y = "Number of loans") +
theme(axis.text.x = element_text(angle = 45, hjust=1),
axis.ticks.x = element_blank()) +
#guides(fill = guide_legend(title = "Sector")) +
scale_fill_viridis_d()+
scale_color_viridis_d()+
coord_flip(ylim = c(0,80000))
AS_sector <- kiva_loans %>%
filter(region=="AS")%>%
dplyr::count(sector)%>%
mutate(sector=reorder(sector, n))%>%
ggplot(aes(
x = sector,
y = n,
fill = sector,
color = sector)) +
geom_col(show.legend = FALSE, alpha=0.7) +
theme_minimal() +
labs(title = "Asia",
x = "",
y = "Number of loans") +
theme(axis.text.x = element_text(angle = 45, hjust=1),
axis.ticks.x = element_blank()) +
#guides(fill = guide_legend(title = "Sector")) +
scale_fill_viridis_d()+
scale_color_viridis_d()+
coord_flip(ylim = c(0,80000))
SA_sector <- kiva_loans %>%
filter(region=="SA")%>%
dplyr::count(sector)%>%
mutate(sector=reorder(sector, n))%>%
ggplot(aes(
x = sector,
y = n,
fill = sector,
color = sector)) +
geom_col(show.legend = FALSE, alpha=0.7) +
theme_minimal() +
labs(title = "South America",
x = "",
y = "Number of loans") +
theme(axis.text.x = element_text(angle = 45, hjust=1),
axis.ticks.x = element_blank()) +
#guides(fill = guide_legend(title = "Sector")) +
scale_fill_viridis_d()+
scale_color_viridis_d()+
coord_flip(ylim = c(0,80000))
grid.arrange(AS_sector,
AF_sector,
SA_sector,
OC_sector,
nrow=1,
top = grid::textGrob("Loan use by region",
x=0,
hjust=0,
gp=gpar(fontsize=30,
font=8))
)
kiva_loans %>%
group_by(country_code) %>%
dplyr::count(country_code, sort = TRUE) %>%
ungroup() %>%
top_n(10) %>%
ggplot(aes(reorder(x = country_code, n), y = n)) +
geom_col(position = "dodge",
color = "#84628e",
fill = "#84628e",
alpha=0.6) +
coord_flip() +
theme_minimal() +
labs(title = "Top 10 countries requesting Kiva loans",
x = "",
y = "Number of loans")+
geom_label(aes(label=n))
#Count all loans per country
loans_per_country <- kiva_loans %>%
group_by(country_code) %>%
dplyr::count(country_code, sort = TRUE) %>%
ungroup()
population <- read_csv(paste0(path,"country_populations.csv"))
iso <- read_csv(paste0(path,"iso_countries.csv"))
users <- read_csv(paste0(path,"internet_users.csv"))
population <- read_csv(here::here("static","data","country_populations.csv"))
iso <- read_csv(here::here("static","data","iso_countries.csv"))
users <- read_csv(here::here("static","data","internet_users.csv"))
names(population)
names(iso)
#Left join country codes with population amounts
population_iso <- left_join(population,iso,by="name")
#population_iso_loans
pop_iso_loans <- left_join(loans_per_country,
population_iso,
by=c("country_code"="iso"))
pop_iso_loans <- pop_iso_loans %>%
select(n,
`2018 Population`,
country_code,
name)
#Calculate loans per capita
pop_iso_loans$n_per_cap <- pop_iso_loans$n/pop_iso_loans$`2018 Population`
#Arrange in descending order
pop_iso_loans <- pop_iso_loans %>%
arrange(desc(n_per_cap))
#Remove strange first row
pop_iso_loans <- pop_iso_loans[-1,]
names(population)
#Left join country codes with population amounts
population_iso <- left_join(population,iso,by="name")
#population_iso_loans
pop_iso_loans <- left_join(loans_per_country,
population_iso,
by=c("country_code"="iso"))
pop_iso_loans <- pop_iso_loans %>%
select(n,
pop_2018,
country_code,
name)
#Calculate loans per capita
pop_iso_loans$n_per_cap <- pop_iso_loans$n/pop_iso_loans$`2018 Population`
#Arrange in descending order
pop_iso_loans <- pop_iso_loans %>%
arrange(desc(n_per_cap))
#Remove strange first row
pop_iso_loans <- pop_iso_loans[-1,]
population_iso <- left_join(population,iso,by="name")
names(population_iso)
names(loans_per_country)
head(loans_per_country)
pop_iso_loans <- left_join(loans_per_country,
population_iso,
by=c("country_code"="iso"))
pop_iso_loans <- pop_iso_loans %>%
select(n,
pop_2018,
country_code,
name)
pop_iso_loans$n_per_cap <- pop_iso_loans$n/pop_iso_loans$pop_2018
pop_iso_loans <- pop_iso_loans %>%
arrange(desc(n_per_cap))
head(pop_iso_loans)
pop_iso_loans %>%
top_n(10) %>%
ggplot(aes(reorder(x = country_code,
n_per_cap),
y = n_per_cap)) +
geom_col(position = "dodge",
color = "#a0d985",
fill = "#a0d985",
alpha=0.6) +
coord_flip() +
theme_minimal() +
labs(title = "Top 10 countries requesting Kiva loans per 1,000 capita",
x = "",
y = "Number of loans per 1,000 capita")+
geom_label(aes(label=round(n_per_cap,
digits = 2)))
pop_iso_loans <- pop_iso_loans[-1,]
pop_iso_loans %>%
top_n(10) %>%
ggplot(aes(reorder(x = country_code,
n_per_cap),
y = n_per_cap)) +
geom_col(position = "dodge",
color = "#a0d985",
fill = "#a0d985",
alpha=0.6) +
coord_flip() +
theme_minimal() +
labs(title = "Top 10 countries requesting Kiva loans per 1,000 capita",
x = "",
y = "Number of loans per 1,000 capita")+
geom_label(aes(label=round(n_per_cap,
digits = 2)))
#Left join country codes with users
users_iso <- left_join(users,iso,by="name")
#users_iso_loans
users_iso_loans <- left_join(loans_per_country,
users_iso,
by=c("country_code"="iso"))
users_iso_loans <- users_iso_loans%>%
select(n,
users,
country_code,
name)
#Calculate loans per users
users_iso_loans$n_per_users <- users_iso_loans$n/users_iso_loans$users*1000
#Arrange in descending order
users_iso_loans <- users_iso_loans %>%
arrange(desc(n_per_users))
users_iso_loans %>%
top_n(10) %>%
ggplot(aes(reorder(x = country_code, n_per_users), y = n_per_users)) +
geom_col(position = "dodge",
color = "#8283ad",
fill = "#8283ad",
alpha=0.6) +
coord_flip() +
theme_minimal() +
labs(title = "Top 10 countries requesting Kiva loans per 1,000 internet users",
x = "",
y = "Number of loans per 1,000 internet users")+
geom_label(aes(label=round(n_per_users,
digits = 2)))
ggplot(kiva_loans, aes(x = loan_usd)) +
geom_density(color="#84628e",alpha=0.3,fill="#84628e") +
theme_classic() +
scale_x_continuous(limits = c(0, 15)) +
geom_vline(
xintercept = median(kiva_loans$loan_usd),
color = "#84628e",
linetype = "dashed") +
annotate(geom="label",
y=0.4,
label=paste("Median =", round(median(kiva_loans$loan_usd),
digits = 2)),
x=round(median(kiva_loans$loan_usd),
digits = 2),
color="#84628e")+
labs(title = "Distribution of Kiva loan amounts in USD",
x = "US Dollars",
y = "Density")
ggplot(kiva_loans,
aes(x=term_in_months))+
geom_density(color="#84628e",alpha=0.3,fill="#84628e")+
theme_classic()+
scale_x_continuous(limits=c(0,50))+
geom_vline(xintercept = median(kiva_loans$term_in_months),
color="#84628e",
linetype="dashed")+
annotate("label",
label=paste("Median =",                          median(kiva_loans$term_in_months)),
x=median(kiva_loans$term_in_months),
y=0.2,
color="#84628e")+
labs(title = "Distribution of Kiva loan terms in months",
x = "Months",
y = "Density")
blogdown::serve_site()
# Chunk 1: setup
x <-
c("dplyr",
"knitr",
"here",
"scales",
"magrittr",
"ggplot2",
"cowplot",
"tidyverse",
"Metrics",
"rsample",
"broom",
"sf",
"rgdal",
"summarytools",
"leaflet",
"tmap",
"tmaptools",
"lubridate")
lapply(x, require, character.only = TRUE)
opts_chunk$set(echo = FALSE,
warning = FALSE,
error = FALSE,
message = FALSE,
collapse = TRUE,
comment = NA,
tidy = TRUE,
include = FALSE)
theme_set(theme_light())
options(
digits=3,
scipen = 999
)
knit_hooks$set(inline = function(x) {
prettyNum(round(x,2), big.mark=",")
})
scale_colour_discrete <- function(...) scale_colour_brewer(..., palette="Paired")
scale_fill_discrete <- function(...) scale_fill_brewer(... , palette="Paired")
r_downloads <- readRDS(file=here::here("static","data","r-downloads.rds"))
r_downloads <- na.omit(r_downloads)%>%
filter(date<"2018-10-20")
# Chunk 2: read-country-codes-and-pop-and-map
iso_codes <- read_csv(here::here("static","data","iso_countries.csv"))
pop <-read_csv(here::here("static","data","country_populations.csv"))
map_path <- here::here("static","data","world_shapefile","world_shapefile.shp")
world <- sf::st_read(map_path)
# Chunk 3: merge-country-codes
r_downloads%<>%
full_join(iso_codes, by=c("country"="iso"))%>%
filter(!is.na(sub_region))
# Chunk 4: downloads-by-country
r_downloads%>%
group_by(name)%>%
summarise(n=n())%>%
filter(!is.na(n))%>%
arrange(desc(n))->downloads_per_country
# Chunk 5: plot-top-10-countries
downloads_per_country%>%
arrange(desc(n))%>%
head(10)%>%
mutate(name=fct_reorder(name,n))%>%
ggplot(aes(name,n,fill=name))+
geom_col()+
expand_limits(y=0)+
coord_flip()+
scale_y_continuous(labels=comma_format())+
labs(title="Top 10 countries by R downloads in 2017/18",
x="",
y="Downloads")+
theme(legend.position = "none")
# Chunk 6: create-tibble-with-pop-and-users-only
full_maps <- downloads_per_country%>%
full_join(iso_codes, by=c("name"="name"))%>%
filter(!is.na(sub_region))%>%
left_join(pop, by=c("name"="name"))%>%
select(n, name, iso_3, region, sub_region, pop_2018)%>%
mutate(n_capita=n/pop_2018)%>%
filter(!is.na(n_capita),
pop_2018!=0)
# Chunk 7: merge-full-maps-and-map-path
world_full <- world%>%
left_join(full_maps, by=c("ISO3"="iso_3"))
# Chunk 8: create-total-downloads-map
n_map <- tm_shape(world_full) +
tm_borders(col="black", lwd=0.1)+
tm_fill(col="n",n=4, style="jenks", palette = get_brewer_pal("BuPu", n = 4, contrast = c(0.13, 0.9))) +
tm_layout(main.title = "Total R downloads in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
tmap_mode("plot")
n_map
blogdown::serve_site()
blogdown::build_dir()
blogdown::serve_site()
here::here()
# Chunk 1: setup
x <-
c("dplyr",
"knitr",
"here",
"scales",
"magrittr",
"ggplot2",
"cowplot",
"tidyverse",
"Metrics",
"rsample",
"broom",
"sf",
"rgdal",
"summarytools",
"leaflet",
"tmap",
"tmaptools",
"lubridate")
lapply(x, require, character.only = TRUE)
opts_chunk$set(echo = FALSE,
warning = FALSE,
error = FALSE,
message = FALSE,
collapse = TRUE,
comment = NA,
tidy = TRUE,
include = FALSE)
theme_set(theme_light())
options(
digits=3,
scipen = 999
)
knit_hooks$set(inline = function(x) {
prettyNum(round(x,2), big.mark=",")
})
scale_colour_discrete <- function(...) scale_colour_brewer(..., palette="Paired")
scale_fill_discrete <- function(...) scale_fill_brewer(... , palette="Paired")
r_downloads <- readRDS(file=here::here("static","data","r-downloads.rds"))
r_downloads <- na.omit(r_downloads)%>%
filter(date<"2018-10-20")
# Chunk 2: read-country-codes-and-pop-and-map
iso_codes <- read_csv(here::here("static","data","iso_countries.csv"))
pop <-read_csv(here::here("static","data","country_populations.csv"))
map_path <- here::here("static","data","world_shapefile","world_shapefile.shp")
world <- sf::st_read(map_path)
# Chunk 3: merge-country-codes
r_downloads%<>%
full_join(iso_codes, by=c("country"="iso"))%>%
filter(!is.na(sub_region))
# Chunk 4: downloads-by-country
r_downloads%>%
group_by(name)%>%
summarise(n=n())%>%
filter(!is.na(n))%>%
arrange(desc(n))->downloads_per_country
# Chunk 5: plot-top-10-countries
downloads_per_country%>%
arrange(desc(n))%>%
head(10)%>%
mutate(name=fct_reorder(name,n))%>%
ggplot(aes(name,n,fill=name))+
geom_col()+
expand_limits(y=0)+
coord_flip()+
scale_y_continuous(labels=comma_format())+
labs(title="Top 10 countries by R downloads in 2017/18",
x="",
y="Downloads")+
theme(legend.position = "none")
# Chunk 6: create-tibble-with-pop-and-users-only
full_maps <- downloads_per_country%>%
full_join(iso_codes, by=c("name"="name"))%>%
filter(!is.na(sub_region))%>%
left_join(pop, by=c("name"="name"))%>%
select(n, name, iso_3, region, sub_region, pop_2018)%>%
mutate(n_capita=n/pop_2018)%>%
filter(!is.na(n_capita),
pop_2018!=0)
# Chunk 7: merge-full-maps-and-map-path
world_full <- world%>%
left_join(full_maps, by=c("ISO3"="iso_3"))
# Chunk 8: create-total-downloads-map
n_map <- tm_shape(world_full) +
tm_borders(col="black", lwd=0.1)+
tm_fill(col="n",n=4, style="jenks", palette = get_brewer_pal("BuPu", n = 4, contrast = c(0.13, 0.9))) +
tm_layout(main.title = "Total R downloads in 2017/18",
main.title.size = 2, frame = TRUE, bg.color = "aliceblue", title.position = c("right","bottom"))+
tm_legend(position=c("left", "bottom"), bg.color="white", frame=TRUE, legend.title.size=1)
# Chunk 9: plot-total-downloads-map
n_map
blogdown::serve_site()
blogdown::build_site()
getwd()
here::here()
here::set_here("/Volumes/TOSHIBAEXT/google_drive/acastillogill")
here::here()
setwd("/Volumes/TOSHIBAEXT/google_drive/acastillogill")
blogdown::serve_site()
here::here("static","pdf","cv.pdf")
blogdown::serve_it()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
