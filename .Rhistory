"lubridate",
"RColorBrewer",
"hrbrthemes",
"ggrepel",
"googlesheets")
lapply(x, require, character.only = TRUE)
opts_chunk$set(echo = FALSE,
warning = FALSE,
error = FALSE,
message = FALSE,
collapse = TRUE,
comment = NA,
tidy = TRUE,
include = FALSE)
theme_set(theme_ipsum_rc())
options(
digits=4,
scipen = 999
)
knit_hooks$set(inline = function(x) {
prettyNum(round(x,4), big.mark=",")
})
money_gs <-  gs_title("Money tracker (Responses)")
money <- gs_read(money_gs)
money$Timestamp <- dmy_hms(money$Timestamp)
money$amount <- as.numeric(money$amount)
factors <- c("category", "payment_form", "who")
lapply(factors, as.factor)
head(money)
x <-
c("dplyr",
"knitr",
"here",
"scales",
"magrittr",
"ggplot2",
"cowplot",
"tidyverse",
"Metrics",
"rsample",
"broom",
"tmaptools",
"lubridate",
"RColorBrewer",
"hrbrthemes",
"ggrepel",
"googlesheets")
lapply(x, require, character.only = TRUE)
opts_chunk$set(echo = FALSE,
warning = FALSE,
error = FALSE,
message = FALSE,
collapse = TRUE,
comment = NA,
tidy = TRUE,
include = FALSE)
theme_set(theme_ipsum_rc())
options(
digits=4,
scipen = 999
)
knit_hooks$set(inline = function(x) {
prettyNum(round(x,4), big.mark=",")
})
money_gs <-  gs_title("Money tracker (Responses)")
money <- gs_read(money_gs)
money$Timestamp <- dmy_hms(money$Timestamp)
money$amount <- as.numeric(money$amount)
factors <- c("category", "payment_form", "who")
money[factors] <- lapply(money[factors] , factor)
head(money)
money %>%
filter(Timestamp > "2018-12-01" & Timestamp < "2019-02-01")
money %>%
filter(Timestamp > "2018-12-01" & Timestamp < "2019-02-01") %>%
summarise(total_money=sum(amount))
money %>%
filter(Timestamp > "2018-12-01" & Timestamp < "2019-02-01") %>%
group_by(who)%>%
summarise(total_money=sum(amount))
levels(money$category)
categories_interest <- c(
"going_out_others",
"utility_bills",
"beauty_grooming",
"car_related",
"gym",
"household_items",
"weekly_food",
"petrol",
"clothes",
"medication",
"rent",
"gifts",
"monthly_subscriptions",
"solo_food",
"going_out_date",
"transport",
"networking_food")
money %>%
filter(Timestamp > "2018-12-01" & Timestamp < "2019-02-01")%>%
group_by(who, country) %>%
summarise(total_money = sum(amount))
categories_interest <- c(
"going_out_others",
"utility_bills",
"beauty_grooming",
"car_related",
"gym",
"household_items",
"weekly_food",
"petrol",
"clothes",
"medication",
"rent",
"gifts",
"monthly_subscriptions",
"solo_food",
"going_out_date",
"transport",
"networking_food")
money %>%
filter(Timestamp > "2018-12-01" & Timestamp < "2019-02-01")%>%
group_by(who, category) %>%
summarise(total_money = sum(amount))
categories_interest <- c(
"going_out_others",
"utility_bills",
"beauty_grooming",
"car_related",
"gym",
"household_items",
"weekly_food",
"petrol",
"clothes",
"medication",
"rent",
"gifts",
"monthly_subscriptions",
"solo_food",
"going_out_date",
"transport",
"networking_food")
money %>%
filter(Timestamp > "2018-12-01" & Timestamp < "2019-02-01")%>%
group_by(category) %>%
summarise(total_money = sum(amount))
categories_interest <- c(
"going_out_others",
"utility_bills",
"beauty_grooming",
"car_related",
"gym",
"household_items",
"weekly_food",
"petrol",
"clothes",
"medication",
"rent",
"gifts",
"monthly_subscriptions",
"solo_food",
"going_out_date",
"transport",
"networking_food")
money %>%
filter(Timestamp > "2018-12-01" & Timestamp < "2019-02-01")%>%
group_by(category) %>%
summarise(total_money = sum(amount))%>%
arrange(desc(total_money))
categories_interest <- c(
"going_out_others",
"utility_bills",
"beauty_grooming",
"car_related",
"gym",
"household_items",
"weekly_food",
"petrol",
"clothes",
"medication",
"rent",
"gifts",
"monthly_subscriptions",
"solo_food",
"going_out_date",
"transport",
"networking_food")
money %>%
filter(Timestamp > "2018-12-01" & Timestamp < "2019-02-01",
category %in% categories_interest) %>%
group_by(category) %>%
summarise(total_money = sum(amount)) %>%
arrange(desc(total_money))
categories_interest <- c(
"going_out_others",
"utility_bills",
"beauty_grooming",
"car_related",
"gym",
"household_items",
"weekly_food",
"petrol",
"clothes",
"medication",
"rent",
"gifts",
"monthly_subscriptions",
"solo_food",
"going_out_date",
"transport",
"networking_food",
"personal_items")
money %>%
filter(Timestamp > "2018-12-01" & Timestamp < "2019-02-01",
category %in% categories_interest) %>%
group_by(category) %>%
summarise(total_money = sum(amount)) %>%
arrange(desc(total_money))
categories_interest <- c(
"going_out_others",
"utility_bills",
"beauty_grooming",
"car_related",
"gym",
"household_items",
"weekly_food",
"petrol",
"clothes",
"medication",
"rent",
"gifts",
"monthly_subscriptions",
"solo_food",
"going_out_date",
"transport",
"networking_food",
"personal_items")
money %>%
filter(Timestamp > "2018-12-01" & Timestamp < "2019-02-01",
category %in% categories_interest) %>%
group_by(category, who) %>%
summarise(total_money = sum(amount)) %>%
arrange(desc(total_money))
money %>%
filter(category=="utility_bills")
money %>%
filter(Timestamp > "2018-12-01" & Timestamp < "2019-02-01",
category=="utility_bills")
money %>%
filter(Timestamp > "2018-12-01" & Timestamp < "2019-02-01",
category =="utility_bills") %>%
arrange (desc(amount))
x <-
c("dplyr",
"knitr",
"here",
"scales",
"magrittr",
"ggplot2",
"cowplot",
"tidyverse",
"Metrics",
"rsample",
"broom",
"tmaptools",
"lubridate",
"RColorBrewer",
"hrbrthemes",
"ggrepel",
"googlesheets")
lapply(x, require, character.only = TRUE)
opts_chunk$set(echo = FALSE,
warning = FALSE,
error = FALSE,
message = FALSE,
collapse = TRUE,
comment = NA,
tidy = TRUE,
include = FALSE)
theme_set(theme_ipsum_rc())
options(
digits=4,
scipen = 999
)
knit_hooks$set(inline = function(x) {
prettyNum(round(x,4), big.mark=",")
})
money_gs <-  gs_title("Money tracker (Responses)")
money <- gs_read(money_gs)
money$Timestamp <- dmy_hms(money$Timestamp)
money$amount <- as.numeric(money$amount)
factors <- c("category", "payment_form", "who")
money[factors] <- lapply(money[factors] , factor)
money %>%
filter(Timestamp > "2018-12-01" & Timestamp < "2019-02-01",
category =="utility_bills") %>%
arrange(desc(amount))
categories_interest <- c(
"going_out_others",
"utility_bills",
"beauty_grooming",
"car_related",
"gym",
"household_items",
"weekly_food",
"petrol",
"clothes",
"medication",
"rent",
"gifts",
"monthly_subscriptions",
"solo_food",
"going_out_date",
"transport",
"networking_food",
"personal_items")
money %>%
filter(Timestamp > "2018-12-01" & Timestamp < "2019-02-01",
category %in% categories_interest) %>%
group_by(category, who) %>%
summarise(total_money = sum(amount)) %>%
arrange(desc(total_money))
money %>%
filter(Timestamp > "2018-12-01" & Timestamp < "2019-02-01",
category =="beauty_grooming") %>%
arrange(desc(amount))
blogdown::serve_site()
# Chunk 1: setup
x <-
c("dplyr",
"knitr",
"here",
"scales",
"magrittr",
"ggplot2",
"cowplot",
"tidyverse",
"Metrics",
"rsample",
"broom",
"sf",
"rgdal",
"summarytools",
"tmap",
"tmaptools",
"lubridate",
"RColorBrewer",
"hrbrthemes",
"ggrepel")
lapply(x, require, character.only = TRUE)
opts_chunk$set(echo = FALSE,
warning = FALSE,
error = FALSE,
message = FALSE,
collapse = TRUE,
comment = NA,
tidy = TRUE,
include = FALSE)
theme_set(theme_ipsum_rc())
options(
digits=4,
scipen = 999
)
knit_hooks$set(inline = function(x) {
prettyNum(round(x,4), big.mark=",")
})
r_downloads <- readRDS(file=here::here("static","data","r-downloads.rds"))
r_downloads <- na.omit(r_downloads)%>%
filter(date<"2018-10-20")
# Chunk 2: read-data
iso_codes <- read_csv(here::here("static","data","iso_countries.csv"))
pop <-read_csv(here::here("static","data","country_populations.csv"))
map_path <- here::here("static","data","world_shapefile","world_shapefile.shp")
world <- sf::st_read(map_path)
educ <- read_csv(here::here("static","data","edu_year.csv"))
educ$edu_index <- as.double(educ$edu_index)
# Chunk 3: merge-country-codes
r_downloads%<>%
full_join(iso_codes, by=c("country"="iso"))%>%
filter(!is.na(sub_region))
# Chunk 4: downloads-by-country
r_downloads%>%
group_by(name)%>%
summarise(n=n())%>%
filter(!is.na(n))%>%
arrange(desc(n))->downloads_per_country
# Chunk 5: create-tibble-with-pop-and-users-only
full_maps <- downloads_per_country%>%
full_join(iso_codes, by=c("name"="name"))%>%
filter(!is.na(sub_region))%>%
left_join(pop, by=c("name"="name"))%>%
select(n, name, iso_3, region, sub_region, pop_2018)%>%
mutate(n_capita=n/pop_2018)%>%
filter(!is.na(n_capita),
pop_2018!=0)
# Chunk 6: merge-years-of-education
full_maps_edu <- full_maps%>%
left_join(educ, by="name")%>%
mutate(edu_index_percent=edu_index*100)%>%
na.omit()
# Chunk 7: plot-relationship-between-educ-and-n-capita
ggplot(full_maps_edu, aes(x=edu_index_percent, y=n_capita))+
geom_point(alpha=0.5)+
labs(title="The education index vs. R downloads per 1,000 capita",
x="Education index",
y="R downloads per 1,000 capita")+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)
# Chunk 8: plot-relationship-between-educ-and-n-capita-log
ggplot(full_maps_edu, aes(x=edu_index_percent, y=log(n_capita)))+
geom_point(alpha=0.5)+
geom_smooth(method="lm", color="salmon", se=FALSE, size=2, alpha=0.5)+
geom_text_repel(aes(label=name), force=0.2, size=2, segment.alpha = 0.5)+
labs(title="The Education Index vs. R Downloads per 1,000 capita",
x="Education index",
y="R downloads per 1,000 capita (logarithm applied)")
# Chunk 9: create-model-of-educ-r-capita
fit <- lm( log(n_capita) ~ edu_index_percent, data = full_maps_edu)
fit%>%
tidy()%>%
kable()
# Chunk 10: remove-outliers
outliers <- c(160,148,140,95,162)
full_maps_edu_sans_outliers <- full_maps_edu[-outliers,]
fit_2 <- lm( log(n_capita) ~ edu_index_percent, data = full_maps_edu_sans_outliers)
summary(fit_2)
plot(fit_2)
group_by(region) %>%
#Nest models
nest() %>%
#Create linear regression
mutate(model = map(data,~lm(formula=log(n_capita) ~ edu_index, data=.x))) %>%
#Metrics of all models
mutate(coef = map(model,~glance(.x))) %>%
#Models
unnest(coef) %>%
select(region, adj.r.squared) %>%
kable()
# Chunk 12: plot-relationship-between-educ-and-n-capita-log-regions
ggplot(full_maps_edu, aes(x = edu_index, y = log(n_capita)))+
geom_point(alpha = 0.5) +
geom_smooth(method="lm", color="salmon", se=FALSE, size=2, alpha = 0.5) +
labs(title ="The education index vs. R downloads per 1,000 capita by region",
x="Education index",
y="R downloads per 1,000 capita (logarithm applied)")+
facet_wrap(.~region, scales="free")
# Chunk 13: plot-fitted-values
fit %>%
augment() %>%
ggplot(aes (x = edu_index_percent, y = exp(.fitted)))+
geom_point(alpha=0.5, color="red")+
geom_point(data=full_maps_edu,aes(x= edu_index_percent, y= n_capita),alpha=0.5)+
labs(title= "The Education Index vs. R Downloads per 1,000 capita",
subtitle="Black dots are real values and red dots are fitted values. For every percentage point \nincrease in the education index, the geometric mean of R downloads per 1,000 capita is \nexpected to increase, on average, by 10.9%. Also, ",
x = "Education index",
y = "R downloads per 1,000 capita") +
expand_limits(0,0)
blogdown::serve_site()
summary(fit)$coef[2]
exp(summary(fit)$coef[2])
exp(summary(fit)$coef[1])
summary(fit)
angela <- data.frame(edu_index_percent=79)
predict.lm(fit, angela, interval="prediction")
generic <- data.frame(edu_index_percent=1)
predict.lm(fit, generic, interval="confidence")
generic <- data.frame(edu_index_percent=50)
predict.lm(fit, generic, interval="confidence")
angela <- data.frame(edu_index_percent=79)
predict.lm(fit, angela, interval="prediction")
exp(0.1034)
summary(fit)$f
summary(fit)$p.value
summary(fit)
summary(fit)$fstatistic[1]
summary(fit)$fstatistic[4]
summary(fit)$fstatistic[3]
f_statistic <- fit$fstatistic
pf(f_statistic[1],f_statistic[2],f_statistic[3])
fit <- lm( log(n_capita) ~ edu_index_percent, data = full_maps_edu)
fit%>%
tidy()%>%
kable()
f_statistic <- fit$fstatistic
pf(f_statistic[1],f_statistic[2],f_statistic[3],lower.tail = FALSE)
fit$fstatistic
f_statistic <- fit$f
f_statistic
f_statistic <- summary(fit)$fstatistic
f_statistic
fit <- lm( log(n_capita) ~ edu_index_percent, data = full_maps_edu)
fit%>%
tidy()%>%
kable()
f_statistic <- summary(fit)$fstatistic
pf(f_statistic[1],f_statistic[2],f_statistic[3],lower.tail = FALSE)
fit <- lm( log(n_capita) ~ edu_index_percent, data = full_maps_edu)
fit%>%
tidy()%>%
kable()
f_statistic <- summary(fit)$fstatistic
p_value_f_statistic <- pf(f_statistic[1],f_statistic[2],f_statistic[3],lower.tail = FALSE)
0.1034-2*0.0059
0.1034+2*0.0059
exp(0.0916)
exp(0.1152)
blogdown::stop_server()
blogdown:::insert_image_addin()
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(tidy = FALSE, eval = FALSE)
knitr::include_graphics("/slides/2019-02-21-r-ladies-data-science-interviews-presentation_files/base_r.png")
blogdown::serve_site()
