meals <- gs_read(meals_gs)
full_data <- moodnotes  %>%
#Join vitals and meals tables
safe_left_join(vitals, by = "Date", conflict = coalesce) %>%
safe_left_join(meals, by = "Date", conflict = coalesce) %>%
#Remove unhelpful variables
select(-Timestamp,
-`Control?_1`) %>%
mutate(Date =  dmy(Date)) %>%
filter(Date >= "2019-03-01" & Date <= "2019-03-31")
install.packages('safejoin')
nstall.packages("remotes")
remotes::install_github("moodymudskipper/safejoin")
install.packages("rlang")
install.packages("rlang")
remotes::install_github("moodymudskipper/safejoin")
x <-
c(
"knitr",
"here",
"scales",
"cowplot",
"tidyverse",
"Metrics",
"rsample",
"broom",
"summarytools",
"lubridate",
"RColorBrewer",
"hrbrthemes",
"safejoin",
"googlesheets",
"ggrepel")
lapply(x, require, character.only = TRUE)
opts_chunk$set(echo = FALSE,
warning = FALSE,
error = FALSE,
message = FALSE,
collapse = TRUE,
comment = NA,
tidy = TRUE,
include = FALSE)
theme_set(theme_ipsum_rc())
moodnotes_gs <-  gs_title("Moodnotes (Responses)")
moodnotes <- gs_read(moodnotes_gs)
names(moodnotes)
moodnotes_gs <-  gs_title("Moodnotes (Responses)")
moodnotes <- gs_read(moodnotes_gs)
moodnotes %>%
mutate(Date =  dmy(Date)) %>%
filter(Date >= "2019-03-01" & Date <= "2019-03-31") %>%
ggplot(aes(x=Date, y=`How are you feeling?`)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_x_date(breaks = "1 day") +
labs(title ="Daily mood throughout the month",
x="",
y="Mood")+
geom_line()
moodnotes %>%
mutate(Date =  dmy(Date)) %>%
filter(Date >= "2019-03-01" & Date <= "2019-03-31") %>%
ggplot(aes(x=Date, y=`How are you feeling?`)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_x_date(breaks = "1 day") +
labs(title ="Daily mood throughout the month",
x="",
y="Mood")+
geom_line()
moodnotes %>%
mutate(Date =  dmy(Date)) %>%
filter(Date >= "2019-03-01" & Date <= "2019-03-31") %>%
ggplot(aes(x=Date, y=`How are you feeling?`)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_x_date(breaks = "1 day") +
labs(title ="What was my monthly mood?",
subtitle = "Data collected during my first month as a data scientist in London",
x="",
y="Mood")+
geom_line()+
geom_smooth(method="lm")
moodnotes %>%
mutate(Date =  dmy(Date)) %>%
filter(Date >= "2019-03-01" & Date <= "2019-03-31") %>%
ggplot(aes(x=Date, y=`How are you feeling?`)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_x_date(breaks = "1 day") +
labs(title ="What was my daily mood?",
subtitle = "Data collected during my first month as a data scientist in London.",
x="",
y="Mood")+
geom_line(color = "purple")+
geom_smooth(method="lm")
moodnotes %>%
mutate(Date =  dmy(Date)) %>%
filter(Date >= "2019-03-01" & Date <= "2019-03-31") %>%
ggplot(aes(x=Date, y=`How are you feeling?`)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_x_date(breaks = "1 day") +
labs(title ="What was my daily mood?",
subtitle = "Data collected during my first month as a data scientist in London.",
x="",
y="Mood")+
geom_line()+
geom_smooth(method="lm", color = "purple")
moodnotes %>%
mutate(Date =  dmy(Date)) %>%
filter(Date >= "2019-03-01" & Date <= "2019-03-31") %>%
ggplot(aes(x=Date, y=`How are you feeling?`)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_x_date(breaks = "1 day") +
labs(title ="What was my daily mood?",
subtitle = "Data collected during my first month as a data scientist in London.",
x="",
y="Mood")+
geom_line()+
geom_smooth(method = "lm",
color = "purple",
se = "FALSE")
moodnotes %>%
mutate(Date =  dmy(Date)) %>%
filter(Date >= "2019-03-01" & Date <= "2019-03-31") %>%
ggplot(aes(x=Date, y=`How are you feeling?`)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_x_date(breaks = "1 day") +
labs(title ="What was my daily mood?",
subtitle = "Data collected during my first month as a data scientist in London.",
x="",
y="Mood")+
geom_line()+
geom_smooth(method = "lm",
color = "purple",
fill = "purple")
moodnotes %>%
mutate(Date =  dmy(Date)) %>%
filter(Date >= "2019-03-01" & Date <= "2019-03-31") %>%
ggplot(aes(x=Date, y=`How are you feeling?`)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_x_date(breaks = "1 day") +
labs(title ="What was my daily mood?",
subtitle = "Data collected during my first month as a data scientist in London.",
x="",
y="Mood")+
geom_line()+
geom_smooth(method = "lm",
fill = "purple")
moodnotes %>%
mutate(Date =  dmy(Date)) %>%
filter(Date >= "2019-03-01" & Date <= "2019-03-31") %>%
ggplot(aes(x=Date, y=`How are you feeling?`)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_x_date(breaks = "1 day") +
labs(title ="What was my daily mood?",
subtitle = "Data collected during my first month as a data scientist in London.",
x="",
y="Mood")+
geom_line()+
geom_smooth(method = "lm",
fill = "purple")
moodnotes %>%
mutate(Date =  dmy(Date)) %>%
filter(Date >= "2019-03-01" & Date <= "2019-03-31") %>%
ggplot(aes(x=Date, y=`How are you feeling?`)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_x_date(breaks = "1 day") +
labs(title ="What was my daily mood?",
subtitle = "Data collected during my first month as a data scientist in London.",
x="",
y="Mood")+
geom_line()+
geom_smooth(method = "lm",
fill = "purple")
moodnotes %>%
mutate(Date =  dmy(Date)) %>%
filter(Date >= "2019-03-01" & Date <= "2019-03-31") %>%
ggplot(aes(x=Date, y=`How are you feeling?`)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_x_date(breaks = "1 day") +
labs(title ="What was my daily mood?",
subtitle = "Data collected during my first month as a data scientist in London.",
x="",
y="Mood")+
geom_line()+
geom_smooth(method = "lm",
fill = "purple",
color = "purple")
x <-
c("dplyr",
"knitr",
"here",
"scales",
"magrittr",
"ggplot2",
"cowplot",
"tidyverse",
"Metrics",
"rsample",
"broom",
"lubridate",
"safejoin",
"RColorBrewer",
"hrbrthemes",
"ggrepel",
"googlesheets",
"tidylog")
lapply(x, require, character.only = TRUE)
opts_chunk$set(echo = FALSE,
warning = FALSE,
error = FALSE,
message = FALSE,
collapse = TRUE,
comment = NA,
tidy = TRUE,
include = FALSE)
theme_set(theme_ipsum_rc())
options(
digits=4,
scipen = 999
)
knit_hooks$set(inline = function(x) {
prettyNum(round(x,4), big.mark=",")
})
import_roboto_condensed()
moodnotes_gs <-  gs_title("Moodnotes (Responses)")
vitals_gs <-  gs_title("Vitals tracking (Responses)")
meals_gs <-  gs_title("Meal tracker (Responses)")
moodnotes <- gs_read(moodnotes_gs)
vitals<- gs_read(vitals_gs)
meals <- gs_read(meals_gs)
full_data %>%
mutate(Date = wday(Date, label = TRUE)) %>%
group_by(Date) %>%
summarise(average_mood_wday = median (`How are you feeling?`)) %>%
ggplot(aes(Date, average_mood_wday)) +
geom_col()+
labs(title ="Daily mood by day of the week",
x="Day of the week",
y="Mood")
moodnotes <- moodnotes %>%
mutate(Date =  dmy(Date)) %>%
filter(Date >= "2019-03-01" & Date <= "2019-03-31")
install.packages("emo")
devtools::install_github("hadley/emo")
devtools::install_github("hadley/emo", force = TRUE)
blogdown::serve_site()
install.packages("tidyr")
install.packages("tidyr")
blogdown::serve_site()
blogdown::serve_site()
install.packages("glue")
install.packages("glue")
blogdown::serve_site()
moodnotes %>%
group_by(`How are you feeling?`) %>%
summarise(Days = count())%>%
formattable::formattable()
moodnotes %>%
group_by(`How are you feeling?`) %>%
summarise(Days = count())%>%
formattable::formattable()
library(magrittr)
moodnotes %>%
group_by(`How are you feeling?`) %>%
summarise(Days = count())%>%
formattable::formattable()
moodnotes %>%
group_by(`How are you feeling?`) %>%
summarise(Days = count())%>%
formattable::formattable()
x <-
c(
"knitr",
"here",
"scales",
"cowplot",
"tidyverse",
"Metrics",
"rsample",
"broom",
"summarytools",
"lubridate",
"RColorBrewer",
"hrbrthemes",
"safejoin",
"googlesheets",
"ggrepel")
lapply(x, require, character.only = TRUE)
opts_chunk$set(echo = FALSE,
warning = FALSE,
error = FALSE,
message = FALSE,
collapse = TRUE,
comment = NA,
tidy = TRUE,
include = FALSE)
theme_set(theme_ipsum_rc())
moodnotes %>%
group_by(`How are you feeling?`) %>%
summarise(Days = count())%>%
formattable::formattable()
names(moodnotes)
moodnotes %>%
group_by(`How are you feeling?`) %>%
summarise(Days = count())%>%
formattable::formattable()
moodnotes %>%
group_by(`How are you feeling?`) %>%
summarise(Days = count())%>%
formattable::formattable()
moodnotes$`How are you feeling?`
moodnotes %>%
mutate(Date = wday(Date, label = TRUE)) %>%
group_by(Date) %>%
summarise(average_mood_wday = median (`How are you feeling?`)) %>%
ggplot(aes(Date, average_mood_wday)) +
geom_col()+
labs(title ="Daily mood by day of the week",
x="Day of the week",
y="Mood")
moodnotes %>%
mutate(Date = wday(Date, label = TRUE)) %>%
group_by(Date) %>%
summarise(average_mood_wday = median (`How are you feeling?`)) %>%
ggplot(aes(Date, average_mood_wday)) +
geom_col(color = "purple",
)+
labs(title ="Daily mood by day of the week",
x="Day of the week",
y="Mood")
unique(moodnotes$`Did you fall into any traps?`)
thinking_traps <- c("Catastrophising",
"Fortune Telling",
"Intolerance of Uncertainty",
"Negative Filtering",
"Should and Must Statements",
"Not Accepting",
"Labelling",
"All-or-Nothing Thinking",
"Blaming"
)
"Blaming"
)
moodnotes %>%
mutate(thinking_trap = str_split (`Did you fall into any traps?`, ","),) %>%
unnest(thinking_trap) %>%
mutate(thinking_trap = str_split (thinking_trap, ":"),) %>%
select(thinking_trap) %>%
unnest(thinking_trap) %>%
filter (thinking_trap %in% thinking_traps) %>%
group_by(thinking_trap)%>%
summarise(Cases = n()) %>%
ggplot(aes(reorder( thinking_trap, Cases), Cases)) +
geom_col()+
labs(title ="Most Common Thinking Traps",
x="",
y="Cases")+
coord_flip()
moodnotes %>%
mutate(negative_feelings = str_split(`Negative feelings`, ","),) %>%
unnest(negative_feelings) %>%
mutate(negative_feelings = str_trim(negative_feelings, "left")) %>%
filter(!is.na(negative_feelings))%>%
group_by(negative_feelings)%>%
summarise(Cases = n()) %>%
ggplot(aes(reorder(negative_feelings, Cases), Cases)) +
geom_col()+
labs(title ="Most Common Negative feelings",
x="",
y="Cases")+
coord_flip()
moodnotes %>%
mutate(positive_feelings = str_split(`Positive feelings?`, ","),) %>%
unnest(positive_feelings) %>%
mutate(positive_feelings = str_trim(positive_feelings, "left")) %>%
filter(!is.na(positive_feelings))%>%
group_by(positive_feelings)%>%
summarise(Cases = n()) %>%
ggplot(aes(reorder(positive_feelings, Cases), Cases)) +
geom_col()+
labs(title ="Most Common Positive feelings",
x="",
y="Cases")+
coord_flip()
moodnotes %>%
mutate(positive_feelings = str_split(`Positive feelings?`, ","),) %>%
unnest(positive_feelings) %>%
mutate(positive_feelings = str_trim(positive_feelings, "left")) %>%
filter(!is.na(positive_feelings))%>%
group_by(positive_feelings)%>%
summarise(Cases = n()) %>%
ggplot(aes(reorder(positive_feelings, Cases), Cases)) +
geom_col()+
labs(title ="Most Common Positive feelings",
x="",
y="Cases")+
coord_flip()
devtools::install_github("yutannihilation/mediumr")
negative_feelings <- moodnotes %>%
mutate(negative_feelings = str_split(`Negative feelings`, ","),) %>%
unnest(negative_feelings) %>%
mutate(negative_feelings = str_trim(negative_feelings, "left")) %>%
filter(!is.na(negative_feelings))%>%
group_by(negative_feelings)%>%
summarise(Cases = n()) %>%
ggplot(aes(reorder(negative_feelings, Cases), Cases)) +
geom_col( fill = "olivedrab4")+
labs(title ="Most Common Negative feelings",
x="",
y="Cases")+
coord_flip()
negative_feelings <- moodnotes %>%
mutate(negative_feelings = str_split(`Negative feelings`, ","),) %>%
unnest(negative_feelings) %>%
mutate(negative_feelings = str_trim(negative_feelings, "left")) %>%
filter(!is.na(negative_feelings))%>%
group_by(negative_feelings)%>%
summarise(Cases = n()) %>%
ggplot(aes(reorder(negative_feelings, Cases), Cases)) +
geom_col( fill = "olivedrab4")+
labs(title ="Most Common Negative feelings",
x="",
y="Cases")+
coord_flip()
negative_feelings <- moodnotes %>%
mutate(negative_feelings = str_split(`Negative feelings`, ","),) %>%
unnest(negative_feelings) %>%
mutate(negative_feelings = str_trim(negative_feelings, "left")) %>%
filter(!is.na(negative_feelings))%>%
group_by(negative_feelings)%>%
summarise(Cases = n()) %>%
ggplot(aes(reorder(negative_feelings, Cases), Cases)) +
geom_col( fill = "olivedrab4")+
labs(title ="Most Common Negative feelings",
x="",
y="Cases")+
coord_flip()
negative_feelings <- moodnotes %>%
mutate(negative_feelings = str_split(`Negative feelings`, ","),) %>%
unnest(negative_feelings) %>%
mutate(negative_feelings = str_trim(negative_feelings, "left")) %>%
filter(!is.na(negative_feelings))%>%
group_by(negative_feelings)%>%
summarise(Cases = n()) %>%
ggplot(aes(reorder(negative_feelings, Cases), Cases)) +
geom_col( fill = "olivedrab4")+
labs(title ="Most Common Negative feelings",
x="",
y="Cases")+
coord_flip()
negative_feelings <- moodnotes %>%
mutate(negative_feelings = str_split(`Negative feelings`, ","),) %>%
unnest(negative_feelings) %>%
mutate(negative_feelings = str_trim(negative_feelings, "left")) %>%
filter(!is.na(negative_feelings))%>%
group_by(negative_feelings)%>%
summarise(Cases = n()) %>%
ggplot(aes(reorder(negative_feelings, Cases), Cases)) +
geom_col( fill = "olivedrab4")+
labs(title ="Most Common Negative feelings",
x="",
y="Cases")+
coord_flip()
negative_feelings <- moodnotes %>%
mutate(negative_feelings = str_split(`Negative feelings`, ","),) %>%
unnest(negative_feelings) %>%
mutate(negative_feelings = str_trim(negative_feelings, "left")) %>%
filter(!is.na(negative_feelings))%>%
group_by(negative_feelings)%>%
summarise(Cases = n()) %>%
ggplot(aes(reorder(negative_feelings, Cases), Cases)) +
geom_col( fill = "olivedrab4")+
labs(title ="Most Common Negative feelings",
x="",
y="Cases")+
coord_flip()
cowplot::plot_grid(positive_feelings,
negative_feelings,
nrow = 2)
positive_feelings <- moodnotes %>%
mutate(positive_feelings = str_split(`Positive feelings?`, ","),) %>%
unnest(positive_feelings) %>%
mutate(positive_feelings = str_trim(positive_feelings, "left")) %>%
filter(!is.na(positive_feelings))%>%
group_by(positive_feelings)%>%
summarise(Cases = n()) %>%
ggplot(aes(reorder(positive_feelings, Cases), Cases)) +
geom_col(fill = "royalblue4")+
labs(title ="Most common positive feelings",
x="",
y="Cases")+
coord_flip()
negative_feelings <- moodnotes %>%
mutate(negative_feelings = str_split(`Negative feelings`, ","),) %>%
unnest(negative_feelings) %>%
mutate(negative_feelings = str_trim(negative_feelings, "left")) %>%
filter(!is.na(negative_feelings))%>%
group_by(negative_feelings)%>%
summarise(Cases = n()) %>%
ggplot(aes(reorder(negative_feelings, Cases), Cases)) +
geom_col( fill = "olivedrab4")+
labs(title ="Most common negative feelings",
x="",
y="Cases")+
coord_flip()
cowplot::plot_grid(positive_feelings,
negative_feelings,
nrow = 2)
cowplot::plot_grid(positive_feelings,
negative_feelings,
nrow = 1)
blogdown::serve_site()
install.packages("httpuv")
blogdown::serve_site()
