"dendextend",
"cluster",
"tidylog",
"flextable")
lapply(x, require, character.only = TRUE)
opts_chunk$set(echo = FALSE,
warning = FALSE,
error = FALSE,
message = FALSE,
collapse = TRUE,
comment = NA,
tidy = TRUE,
include = FALSE,
fig.height=10,
fig.width=14)
theme_set(theme_ipsum_rc())
options(
digits=4,
scipen = 999
)
cereals <- read_csv(here::here("static","data","cereals.csv"))
# Chunk 2: scaling-data
#Remove categorical variables
num_cereals <- cereals[,4:16]
#Remove shelf
num_cereals$shelf <- NULL
#scale numeric variables
num_cereals <- scale(num_cereals)
#Calculate distances
dist_cereals <- dist(num_cereals, method = "euclidean")
# Chunk 3: hierarchical-clustering-complete
#Hierarchical clustering by complete linkage
hc_cereals_complete <- hclust(dist_cereals, method = "complete")
#Selecting two clusters
clusters_k2_complete <- cutree(hc_cereals_complete, k=2)
#Appending the clusters to all the dataset
cereals_k2_complete <- mutate(cereals, cluster=clusters_k2_complete)
complete_count <- count(cereals_k2_complete, cluster)
complete_count
# Chunk 4: hierarchical-clustering-single
#Hierarchical clustering by single linkage
hc_cereals_single <- hclust(dist_cereals, method = "single")
#Selecting two clusters
clusters_k2_single <- cutree(hc_cereals_single, k=2)
#Appending the clusters to all the dataset
cereals_k2_single <- mutate(cereals, cluster=clusters_k2_single)
single_count <- count(cereals_k2_single, cluster)
# Chunk 5: hierarchical-clustering-average
#Hierarchical clustering by average linkage
hc_cereals_average <- hclust(dist_cereals, method = "average")
#Selecting two clusters
clusters_k2_average <- cutree(hc_cereals_average, k=2)
#Appending the clusters to all the dataset
cereals_k2_average <- mutate(cereals, cluster=clusters_k2_average)
average_count <- count(cereals_k2_average, cluster)
# Chunk 6: plot-complete-linkage
dend_cereals_comp <- as.dendrogram(hc_cereals_complete)
dend_colored_comp <- color_branches(dend_cereals_comp, k=2)
plot(dend_colored_comp)
# Chunk 7: plot-average-linkage
dend_cereals_av <- as.dendrogram(hc_cereals_average)
dend_colored_av <- color_branches(dend_cereals_av, k=2)
plot(dend_colored_av)
# Chunk 8: plot-single-linkage
dend_cereals_sin <- as.dendrogram(hc_cereals_single)
dend_colored_sin <- color_branches(dend_cereals_sin, k=2)
plot(dend_colored_sin)
# Chunk 9: mean-for-each-cluster
two_clusters <- cereals_k2_complete %>%
select(-shelf,-name,-mfr,-type,-cups,-weight)%>%
group_by(cluster) %>%
summarise_all(funs(mean(.)))%>%
cbind(complete_count$n)
colnames(two_clusters)[12] <- "n"
kable(two_clusters, caption="Cluster two (47 cereals), has on average, 19% more calories, 30% less protein, 99% more sodium, 62% less fiber, twice as much sugar, 41% less potasium, 89% more vitamins, and 36% lower ratings.")%>%
kable_styling()
cereals_k2_complete$shelf <- as.factor(cereals_k2_complete$shelf)
plyr::revalue(cereals_k2_complete$shelf, c("1"="Bottom","2"="Middle", "3"="Top"))
ggplot(cereals_k2_complete, aes(x = sugars, y = shelf, color = Cluster)) +
geom_jitter(alpha=0)+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=2, size=3, segment.alpha = 0)+
scale_y_continuous(breaks=c(1,2,3))+
labs(title="Which shelf has the most sugary cereals?",
x="Sugar content per serving",
y="Supermarket shelf: from the floor (1) to the top (3)")
# Chunk 1: setup
x <-
c("dplyr",
"knitr",
"here",
"scales",
"magrittr",
"ggplot2",
"cowplot",
"tidyverse",
"Metrics",
"rsample",
"broom",
"sf",
"rgdal",
"summarytools",
"tmap",
"tmaptools",
"lubridate",
"RColorBrewer",
"hrbrthemes",
"ggrepel",
"dummies",
"stats",
"ggrepel",
"kableExtra",
"dendextend",
"cluster",
"tidylog",
"flextable")
lapply(x, require, character.only = TRUE)
opts_chunk$set(echo = FALSE,
warning = FALSE,
error = FALSE,
message = FALSE,
collapse = TRUE,
comment = NA,
tidy = TRUE,
include = FALSE,
fig.height=10,
fig.width=14)
theme_set(theme_ipsum_rc())
options(
digits=4,
scipen = 999
)
cereals <- read_csv(here::here("static","data","cereals.csv"))
# Chunk 2: scaling-data
#Remove categorical variables
num_cereals <- cereals[,4:16]
#Remove shelf
num_cereals$shelf <- NULL
#scale numeric variables
num_cereals <- scale(num_cereals)
#Calculate distances
dist_cereals <- dist(num_cereals, method = "euclidean")
# Chunk 3: hierarchical-clustering-complete
#Hierarchical clustering by complete linkage
hc_cereals_complete <- hclust(dist_cereals, method = "complete")
#Selecting two clusters
clusters_k2_complete <- cutree(hc_cereals_complete, k=2)
#Appending the clusters to all the dataset
cereals_k2_complete <- mutate(cereals, cluster=clusters_k2_complete)
complete_count <- count(cereals_k2_complete, cluster)
complete_count
# Chunk 4: hierarchical-clustering-single
#Hierarchical clustering by single linkage
hc_cereals_single <- hclust(dist_cereals, method = "single")
#Selecting two clusters
clusters_k2_single <- cutree(hc_cereals_single, k=2)
#Appending the clusters to all the dataset
cereals_k2_single <- mutate(cereals, cluster=clusters_k2_single)
single_count <- count(cereals_k2_single, cluster)
# Chunk 5: hierarchical-clustering-average
#Hierarchical clustering by average linkage
hc_cereals_average <- hclust(dist_cereals, method = "average")
#Selecting two clusters
clusters_k2_average <- cutree(hc_cereals_average, k=2)
#Appending the clusters to all the dataset
cereals_k2_average <- mutate(cereals, cluster=clusters_k2_average)
average_count <- count(cereals_k2_average, cluster)
# Chunk 6: plot-complete-linkage
dend_cereals_comp <- as.dendrogram(hc_cereals_complete)
dend_colored_comp <- color_branches(dend_cereals_comp, k=2)
plot(dend_colored_comp)
# Chunk 7: plot-average-linkage
dend_cereals_av <- as.dendrogram(hc_cereals_average)
dend_colored_av <- color_branches(dend_cereals_av, k=2)
plot(dend_colored_av)
# Chunk 8: plot-single-linkage
dend_cereals_sin <- as.dendrogram(hc_cereals_single)
dend_colored_sin <- color_branches(dend_cereals_sin, k=2)
plot(dend_colored_sin)
# Chunk 9: mean-for-each-cluster
two_clusters <- cereals_k2_complete %>%
select(-shelf,-name,-mfr,-type,-cups,-weight)%>%
group_by(cluster) %>%
summarise_all(funs(mean(.)))%>%
cbind(complete_count$n)
colnames(two_clusters)[12] <- "n"
kable(two_clusters, caption="Cluster two (47 cereals), has on average, 19% more calories, 30% less protein, 99% more sodium, 62% less fiber, twice as much sugar, 41% less potasium, 89% more vitamins, and 36% lower ratings.")%>%
kable_styling()
# Chunk 10: renaming-clusters
cereals_k2_complete$cluster <- as.factor(cereals_k2_complete$cluster)
cereals_k2_complete$cluster <- plyr::revalue(cereals_k2_complete$cluster, c("1"="Healthy","2"="Unhealthy"))
colnames(cereals_k2_complete)[17] <- "Cluster"
# Chunk 11: plot-sodium-sugar
ggplot(cereals_k2_complete, aes(x = sugars, y = sodium, color = Cluster)) +
geom_point(alpha=0.5)+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=2, size=3, segment.alpha = 0.5)+
labs(title="How do clusters stack up on sugar and sodium content?",
x="Sugar content per serving",
y="Sodium content per serving")
# Chunk 12: table-counting-sugar-shelf
shelf_cluster <- as.data.frame.matrix(table(cereals_k2_complete$shelf,cereals_k2_complete$Cluster))
colnames(shelf_cluster) <- c("Healthy","Unhealthy")
shelf_cluster <- shelf_cluster%>%
mutate(Total=Healthy+Unhealthy)%>%
rownames_to_column()
colnames(shelf_cluster)[1] <- "Shelf"
shelf_cluster%>%
arrange(desc(Shelf))%>%
regulartable()%>%
theme_vanilla()%>%
empty_blanks()%>%
width(width=0.1)%>%
set_caption("Cereal types per shelf: the middle (2) and bottom (1) shelves have around 20 cereals with more unhealthy than healthy options. The top shelf is much more crowded at 36 cereals with a good mix between cereal types.")
cereals_k2_complete$shelf <- as.factor(cereals_k2_complete$shelf)
plyr::revalue(cereals_k2_complete$shelf, c("1"="Bottom","2"="Middle", "3"="Top"))
ggplot(cereals_k2_complete, aes(x = sugars, y = shelf, color = Cluster)) +
geom_jitter(alpha=0)+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=2, size=3, segment.alpha = 0)+
scale_y_continuous(breaks=c(1,2,3))+
labs(title="Which shelf has the most sugary cereals?",
x="Sugar content per serving",
y="Supermarket shelf: from the floor (1) to the top (3)")
cereals_k2_complete$shelf <- as.factor(cereals_k2_complete$shelf)
plyr::revalue(cereals_k2_complete$shelf, c("1"="Bottom","2"="Middle", "3"="Top"))
ggplot(cereals_k2_complete, aes(x = sugars, y = shelf, color = Cluster)) +
geom_jitter(alpha=0)+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=2, size=3, segment.alpha = 0)+
scale_y_continuous(breaks=c(1,2,3))+
labs(title="Which shelf has the most sugary cereals?",
x="Sugar content per serving",
y="Supermarket shelf: from the floor (1) to the top (3)")
shelf_cluster <- as.data.frame.matrix(table(cereals_k2_complete$shelf,cereals_k2_complete$Cluster))
colnames(shelf_cluster) <- c("Healthy","Unhealthy")
shelf_cluster <- shelf_cluster%>%
mutate(Total=Healthy+Unhealthy)%>%
rownames_to_column()
colnames(shelf_cluster)[1] <- "Shelf"
shelf_cluster%>%
arrange(desc(Shelf))%>%
regulartable()%>%
theme_vanilla()%>%
empty_blanks()%>%
width(width=-0.1)%>%
set_caption("Cereal types per shelf: the middle (2) and bottom (1) shelves have around 20 cereals with more unhealthy than healthy options. The top shelf is much more crowded at 36 cereals with a good mix between cereal types.")
two_clusters <- cereals_k2_complete %>%
select(-shelf,-name,-mfr,-type,-cups,-weight)%>%
group_by(cluster) %>%
summarise_all(funs(mean(.)))%>%
cbind(complete_count$n)
colnames(two_clusters)[12] <- "n"
regulartable(two_clusters)%>%
theme_vanilla()%>%
empty_blanks()%>%
width(width=-0.1)%>%
set_caption("Cluster two (47 cereals), has on average, 19% more calories, 30% less protein, 99% more sodium, 62% less fiber, twice as much sugar, 41% less potasium, 89% more vitamins, and 36% lower ratings.")
blogdown::serve_site()
two_clusters <- cereals_k2_complete %>%
select(-shelf,-name,-mfr,-type)%>%
group_by(cluster) %>%
summarise_all(funs(mean(.)))%>%
cbind(complete_count$n)
colnames(two_clusters)[12] <- "n"
regulartable(two_clusters)%>%
theme_vanilla()%>%
empty_blanks()%>%
width(width=-0.1)%>%
set_caption("Cluster two (47 cereals), has on average, 19% more calories, 30% less protein, 99% more sodium, 62% less fiber, twice as much sugar, 41% less potasium, 89% more vitamins, and 36% lower ratings.")
length(two_clusters)
two_clusters <- cereals_k2_complete %>%
select(-shelf,-name,-mfr,-type)%>%
group_by(cluster) %>%
summarise_all(funs(mean(.)))%>%
cbind(complete_count$n)
# Chunk 1: setup
x <-
c("dplyr",
"knitr",
"here",
"scales",
"magrittr",
"ggplot2",
"cowplot",
"tidyverse",
"Metrics",
"rsample",
"broom",
"sf",
"rgdal",
"summarytools",
"tmap",
"tmaptools",
"lubridate",
"RColorBrewer",
"hrbrthemes",
"ggrepel",
"dummies",
"stats",
"ggrepel",
"kableExtra",
"dendextend",
"cluster",
"tidylog",
"flextable")
lapply(x, require, character.only = TRUE)
opts_chunk$set(echo = FALSE,
warning = FALSE,
error = FALSE,
message = FALSE,
collapse = TRUE,
comment = NA,
tidy = TRUE,
include = FALSE,
fig.height=10,
fig.width=14)
theme_set(theme_ipsum_rc())
options(
digits=4,
scipen = 999
)
cereals <- read_csv(here::here("static","data","cereals.csv"))
# Chunk 2: scaling-data
#Remove categorical variables
num_cereals <- cereals[,4:16]
#Remove shelf
num_cereals$shelf <- NULL
#scale numeric variables
num_cereals <- scale(num_cereals)
#Calculate distances
dist_cereals <- dist(num_cereals, method = "euclidean")
# Chunk 3: hierarchical-clustering-complete
#Hierarchical clustering by complete linkage
hc_cereals_complete <- hclust(dist_cereals, method = "complete")
#Selecting two clusters
clusters_k2_complete <- cutree(hc_cereals_complete, k=2)
#Appending the clusters to all the dataset
cereals_k2_complete <- mutate(cereals, cluster=clusters_k2_complete)
complete_count <- count(cereals_k2_complete, cluster)
complete_count
# Chunk 4: hierarchical-clustering-single
#Hierarchical clustering by single linkage
hc_cereals_single <- hclust(dist_cereals, method = "single")
#Selecting two clusters
clusters_k2_single <- cutree(hc_cereals_single, k=2)
#Appending the clusters to all the dataset
cereals_k2_single <- mutate(cereals, cluster=clusters_k2_single)
single_count <- count(cereals_k2_single, cluster)
# Chunk 5: hierarchical-clustering-average
#Hierarchical clustering by average linkage
hc_cereals_average <- hclust(dist_cereals, method = "average")
#Selecting two clusters
clusters_k2_average <- cutree(hc_cereals_average, k=2)
#Appending the clusters to all the dataset
cereals_k2_average <- mutate(cereals, cluster=clusters_k2_average)
average_count <- count(cereals_k2_average, cluster)
# Chunk 6: plot-complete-linkage
dend_cereals_comp <- as.dendrogram(hc_cereals_complete)
dend_colored_comp <- color_branches(dend_cereals_comp, k=2)
plot(dend_colored_comp)
# Chunk 7: plot-average-linkage
dend_cereals_av <- as.dendrogram(hc_cereals_average)
dend_colored_av <- color_branches(dend_cereals_av, k=2)
plot(dend_colored_av)
# Chunk 8: plot-single-linkage
dend_cereals_sin <- as.dendrogram(hc_cereals_single)
dend_colored_sin <- color_branches(dend_cereals_sin, k=2)
plot(dend_colored_sin)
two_clusters <- cereals_k2_complete %>%
select(-shelf,-name,-mfr,-type)%>%
group_by(cluster) %>%
summarise_all(funs(mean(.)))%>%
cbind(complete_count$n)
names(two_C)
names(two_clusters)
# Chunk 1: setup
x <-
c("dplyr",
"knitr",
"here",
"scales",
"magrittr",
"ggplot2",
"cowplot",
"tidyverse",
"Metrics",
"rsample",
"broom",
"sf",
"rgdal",
"summarytools",
"tmap",
"tmaptools",
"lubridate",
"RColorBrewer",
"hrbrthemes",
"ggrepel",
"dummies",
"stats",
"ggrepel",
"kableExtra",
"dendextend",
"cluster",
"tidylog",
"flextable")
lapply(x, require, character.only = TRUE)
opts_chunk$set(echo = FALSE,
warning = FALSE,
error = FALSE,
message = FALSE,
collapse = TRUE,
comment = NA,
tidy = TRUE,
include = FALSE,
fig.height=10,
fig.width=14)
theme_set(theme_ipsum_rc())
options(
digits=4,
scipen = 999
)
cereals <- read_csv(here::here("static","data","cereals.csv"))
# Chunk 2: scaling-data
#Remove categorical variables
num_cereals <- cereals[,4:16]
#Remove shelf
num_cereals$shelf <- NULL
#scale numeric variables
num_cereals <- scale(num_cereals)
#Calculate distances
dist_cereals <- dist(num_cereals, method = "euclidean")
# Chunk 3: hierarchical-clustering-complete
#Hierarchical clustering by complete linkage
hc_cereals_complete <- hclust(dist_cereals, method = "complete")
#Selecting two clusters
clusters_k2_complete <- cutree(hc_cereals_complete, k=2)
#Appending the clusters to all the dataset
cereals_k2_complete <- mutate(cereals, cluster=clusters_k2_complete)
complete_count <- count(cereals_k2_complete, cluster)
complete_count
# Chunk 4: hierarchical-clustering-single
#Hierarchical clustering by single linkage
hc_cereals_single <- hclust(dist_cereals, method = "single")
#Selecting two clusters
clusters_k2_single <- cutree(hc_cereals_single, k=2)
#Appending the clusters to all the dataset
cereals_k2_single <- mutate(cereals, cluster=clusters_k2_single)
single_count <- count(cereals_k2_single, cluster)
# Chunk 5: hierarchical-clustering-average
#Hierarchical clustering by average linkage
hc_cereals_average <- hclust(dist_cereals, method = "average")
#Selecting two clusters
clusters_k2_average <- cutree(hc_cereals_average, k=2)
#Appending the clusters to all the dataset
cereals_k2_average <- mutate(cereals, cluster=clusters_k2_average)
average_count <- count(cereals_k2_average, cluster)
# Chunk 6: plot-complete-linkage
dend_cereals_comp <- as.dendrogram(hc_cereals_complete)
dend_colored_comp <- color_branches(dend_cereals_comp, k=2)
plot(dend_colored_comp)
# Chunk 7: plot-average-linkage
dend_cereals_av <- as.dendrogram(hc_cereals_average)
dend_colored_av <- color_branches(dend_cereals_av, k=2)
plot(dend_colored_av)
# Chunk 8: plot-single-linkage
dend_cereals_sin <- as.dendrogram(hc_cereals_single)
dend_colored_sin <- color_branches(dend_cereals_sin, k=2)
plot(dend_colored_sin)
# Chunk 9: table-mean-for-each-cluster
two_clusters <- cereals_k2_complete %>%
select(-shelf,-name,-mfr,-type)%>%
group_by(cluster) %>%
summarise_all(funs(mean(.)))%>%
cbind(complete_count$n)
colnames(two_clusters)[14] <- "n"
regulartable(two_clusters)%>%
theme_vanilla()
# Chunk 10: renaming-clusters
cereals_k2_complete$cluster <- as.factor(cereals_k2_complete$cluster)
cereals_k2_complete$cluster <- plyr::revalue(cereals_k2_complete$cluster, c("1"="Healthy","2"="Unhealthy"))
colnames(cereals_k2_complete)[17] <- "Cluster"
# Chunk 11: plot-sodium-sugar
ggplot(cereals_k2_complete, aes(x = sugars, y = sodium, color = Cluster)) +
geom_point(alpha=0.5)+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=2, size=3, segment.alpha = 0.5)+
labs(title="How do clusters stack up on sugar and sodium content?",
x="Sugar content per serving",
y="Sodium content per serving")
# Chunk 12: table-counting-sugar-shelf
shelf_cluster <- as.data.frame.matrix(table(cereals_k2_complete$shelf,cereals_k2_complete$Cluster))
colnames(shelf_cluster) <- c("Healthy","Unhealthy")
shelf_cluster <- shelf_cluster%>%
mutate(Total=Healthy+Unhealthy)%>%
rownames_to_column()
colnames(shelf_cluster)[1] <- "Shelf"
shelf_cluster%>%
arrange(desc(Shelf))%>%
regulartable()%>%
theme_vanilla()
# Chunk 13: plot-sugar-shelf
ggplot(cereals_k2_complete, aes(x = sugars, y = shelf, color = Cluster)) +
geom_jitter(alpha=0)+
scale_color_manual(values=c("#1F78B4" , "#E31A1C"))+
geom_text_repel(aes(label=name), force=2, size=3, segment.alpha = 0)+
scale_y_continuous(breaks=c(1,2,3))+
labs(title="Which shelf has the most sugary cereals?",
x="Sugar content per serving",
y="Supermarket shelf: from the floor (1) to the top (3)")
blogdown::stop_server()
blogdown::serve_site()
