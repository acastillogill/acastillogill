#Convert country_code, sector, currency, borrower_genders, and repayment_interval to factors.
categorical <- c("sector",
"country_code",
"currency",
"borrower_genders",
"repayment_interval")
kiva_loans[categorical] <- lapply(kiva_loans[categorical],
factor)
# Chunk 7
#Turn kiva_loans back into an atomic vector of characters
kiva_loans$borrower_genders <- as.character(kiva_loans$borrower_genders)
#Split each row into multiple strings
genders <- str_split(kiva_loans$borrower_genders, ", ")
#Assign 1 for female and 0 for male
females_count <- lapply(genders, str_count, pattern="female")
#Count how many females are in each list element
females_sum <- lapply(females_count, sum)
#Create a function that takes the two lists just made
compare_genders <- function(females_count, females_sum){
#Set "single_female" when female sum and length is 1
ifelse (females_sum==1&&length(females_count)==1, "single_female",
#Set "mult_females" when female sum and length females_count is the same and different to zero
ifelse(females_sum==length(females_count)&&females_sum!=0,"mult_females",
#Set "single_male" #Set "mult_males" when female sum is zero and the count of individuals is 1
ifelse(females_sum==0&&length(females_count)==1,"single_male",
#Set "mult_males" when female sum is zero and the count of individuals is greater than 1
ifelse(females_sum==0&&length(females_count)>1,"mult_males",
#Set "mixed_genders" when the sum of females is different to the count of individual
ifelse(females_sum!=length(females_count),"mixed_genders","strange")))))
}
#Apply function compare_genders
kiva_loans$borrower_genders <- mapply(compare_genders,females_count,females_sum)
# Chunk 8
#Make kiva_loans$borrower_genders a factor again
kiva_loans$borrower_genders <- as.factor(kiva_loans$borrower_genders)
#Check levels
levels(kiva_loans$borrower_genders)
# Chunk 10
## It seems like two currencies are returning an error. Let's filter them out.
#Turning kiva_loans back into a character vector
kiva_loans$currency <- as.character(kiva_loans$currency)
kiva_loans%>%
#Filter out "SSP"
dplyr::filter(currency!="SSP")%>%
#Filter out "ZWD"
filter(currency!="ZWD")->kiva_loans
#Turn kiva_loans$currency back into a factor
kiva_loans$currency <- as.factor(kiva_loans$currency)
#Store all levels as vector `from`
from <- as.vector(levels(kiva_loans$currency))
#Create a vector `to` with requested currency "USD"
to <- rep(length(levels(kiva_loans$currency)),x="USD")
#Create a dataframe `currencies` with conversion rates `Last`
currencies <- quantmod::getQuote(paste0(from, to, "=X"))
# Chunk 11
#Set row names as columns in the currencies dataframe
currencies <- rownames_to_column(currencies)
#Split currencies$rownames by extracting the first 3 characters
currencies$currency <-  substring(currencies$rowname, 1,3)
#currencies <- readRDS(file="/Users/AngelaDelgado/Desktop/currencies.rds")
kiva_loans%>%
#Join currencies to kiva_loans by="currency"
left_join(currencies, by="currency") -> kiva_loans
kiva_loans%>%
#Convert the loan from its original currency to USD
mutate(loan_usd=loan_amount*Last)-> kiva_loans
# Chunk 12
#Read `country_region.csv`
regions <- read_csv(here::here("static","data","iso_countries.csv"))
# Chunk 13
kiva_loans%>%
#Join currencies to kiva_loans by="country_code"
left_join(regions, by=c("country_code"="iso")) -> kiva_loans
# Chunk 14
kiva_loans$region <- as.factor(kiva_loans$region)
levels(kiva_loans$region)
# Chunk 15: total_time_creation
kiva_loans%>%
mutate(total_time_num=as.numeric(difftime(posted_time,
disbursed_time,
units = "days")),
giving_time_num=as.numeric(difftime(funded_time,
posted_time,
units = "days"))) ->kiva_loans
# Chunk 16
#Select variables
kiva_loans %>%
dplyr::select (id,
loan_usd,
sector,
region,
term_in_months,
lender_count,
borrower_genders,
repayment_interval,
total_time_num,
giving_time_num,
country_code,
posted_time,
funded_time,
disbursed_time)%>%
arrange(posted_time)-> kiva_loans
kiva_loans$country_code <- as.factor(kiva_loans$country_code)
kiva_loans$id <- as.character(kiva_loans$id)
#Skim the dataset
skim(kiva_loans)
# Chunk 17
kiva_loans <-  kiva_loans%>%
filter(region!="EU",
repayment_interval!="weekly",
sector!="Construction"&
sector!="Entertainment"&
sector!= "Manufacturing"&
sector!= "Wholesale")%>%
droplevels()%>%
na.omit()
# Chunk 18: region-and-borrower-genders-plots
AF_borrower_genders <- kiva_loans %>%
filter(region == "Africa") %>%
dplyr::count(borrower_genders) %>%
mutate(borrower_genders = reorder(borrower_genders, n)) %>%
ggplot(aes(
x = borrower_genders,
y = n,
fill = borrower_genders,
color = borrower_genders
)) +
geom_col(show.legend = FALSE, alpha = 0.7) +
labs(title = "Africa",
x = "",
y = "Number of loans") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.ticks.x = element_blank()) +
#guides(fill = guide_legend(title = "Borrower gender")) +
scale_fill_viridis_d() +
scale_color_viridis_d() +
coord_flip(ylim = c(0,250000))
OC_borrower_genders <- na.omit(kiva_loans) %>%
filter(region == "Oceania") %>%
dplyr::count(borrower_genders) %>%
mutate(borrower_genders = reorder(borrower_genders, n)) %>%
ggplot(aes(
x = borrower_genders,
y = n,
fill = borrower_genders,
color = borrower_genders
)) +
geom_col(show.legend = FALSE, alpha = 0.7) +
labs(title = "Oceania",
x = "",
y = "Number of loans") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.ticks.x = element_blank()) +
#guides(fill = guide_legend(title = "Borrower gender")) +
scale_fill_viridis_d() +
scale_color_viridis_d() +
coord_flip(ylim = c(0,250000))
AS_borrower_genders <- na.omit(kiva_loans) %>%
filter(region == "Asia") %>%
dplyr::count(borrower_genders) %>%
mutate(borrower_genders = reorder(borrower_genders, n)) %>%
ggplot(aes(
x = borrower_genders,
y = n,
fill = borrower_genders,
color = borrower_genders
)) +
geom_col(show.legend = FALSE, alpha = 0.7) +
labs(title = "Asia",
x = "",
y = "Number of loans") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.ticks.x = element_blank()) +
#guides(fill = guide_legend(title = "Borrower gender")) +
scale_fill_viridis_d() +
scale_color_viridis_d() +
coord_flip(ylim = c(0,250000))
SA_borrower_genders <- na.omit(kiva_loans) %>%
filter(region == "Americas") %>%
dplyr::count(borrower_genders) %>%
mutate(borrower_genders = reorder(borrower_genders, n)) %>%
ggplot(aes(
x = borrower_genders,
y = n,
fill = borrower_genders,
color = borrower_genders
)) +
geom_col(show.legend = FALSE, alpha = 0.7) +
labs(title = "South America",
x = "",
y = "Number of loans") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.ticks.x = element_blank()) +
#guides(fill = guide_legend(title = "Borrower gender")) +
scale_fill_viridis_d() +
scale_color_viridis_d() +
coord_flip(ylim = c(0,250000))
cowplot::plot_grid(
AS_borrower_genders,
AF_borrower_genders,
SA_borrower_genders,
OC_borrower_genders,
nrow = 1
)
# Chunk 19: borrower-genders-table
options("digits"=2)
prop.table(table(kiva_loans$borrower_genders))%>%
data.frame()%>%
mutate(Freq=Freq*100)%>%
arrange(desc(Freq))%>%
kable(caption="A single female is the most common type of borrower gender with over half of all Kiva loans requested.",
col.names = c("Gender","Percentage")) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
# Chunk 20: repayment-interval-and-region
AF_repayment_interval <- kiva_loans %>%
filter(region=="Africa")%>%
dplyr::count(repayment_interval)%>%
mutate(repayment_interval=reorder(repayment_interval, n))%>%
ggplot(aes(
x = repayment_interval,
y = n,
fill = repayment_interval,
color = repayment_interval)) +
geom_col(show.legend = FALSE, alpha=0.7) +
theme_minimal() +
labs(title = "Africa",
x = "",
y = "Number of loans") +
theme(axis.text.x = element_text(angle = 45, hjust=1),
axis.ticks.x = element_blank()) +
#guides(fill = guide_legend(title = "Repayment interval")) +
scale_fill_viridis_d()+
scale_color_viridis_d()+
coord_flip(ylim = c(0,170000))
OC_repayment_interval <- kiva_loans %>%
filter(region=="Oceania")%>%
dplyr::count(repayment_interval)%>%
mutate(repayment_interval=reorder(repayment_interval, n))%>%
ggplot(aes(
x = repayment_interval,
y = n,
fill = repayment_interval,
color = repayment_interval)) +
geom_col(show.legend = FALSE, alpha=0.7) +
theme_minimal() +
labs(title = "Oceania",
x = "",
y = "Number of loans") +
theme(axis.text.x = element_text(angle = 45, hjust=1),
axis.ticks.x = element_blank()) +
#guides(fill = guide_legend(title = "Repayment interval")) +
scale_fill_viridis_d()+
scale_color_viridis_d()+
coord_flip(ylim = c(0,170000))
AS_repayment_interval <- kiva_loans %>%
filter(region=="Asia")%>%
dplyr::count(repayment_interval)%>%
mutate(repayment_interval=reorder(repayment_interval, n))%>%
ggplot(aes(
x = repayment_interval,
y = n,
fill = repayment_interval,
color = repayment_interval)) +
geom_col(show.legend = FALSE, alpha=0.7) +
theme_minimal() +
labs(title = "Asia",
x = "",
y = "Number of loans") +
theme(axis.text.x = element_text(angle = 45, hjust=1),
axis.ticks.x = element_blank()) +
#guides(fill = guide_legend(title = "Repayment interval")) +
scale_fill_viridis_d()+
scale_color_viridis_d()+
coord_flip(ylim = c(0,170000))
SA_repayment_interval <- kiva_loans %>%
filter(region=="Americas")%>%
dplyr::count(repayment_interval)%>%
mutate(repayment_interval=reorder(repayment_interval, n))%>%
ggplot(aes(
x = repayment_interval,
y = n,
fill = repayment_interval,
color = repayment_interval)) +
geom_col(show.legend = FALSE, alpha=0.7) +
theme_minimal() +
labs(title = "South America",
x = "",
y = "Number of loans") +
theme(axis.text.x = element_text(angle = 45, hjust=1),
axis.ticks.x = element_blank()) +
#guides(fill = guide_legend(title = "Repayment interval")) +
scale_fill_viridis_d()+
scale_color_viridis_d()+
coord_flip(ylim = c(0,170000))
cowplot::plot_grid(AS_repayment_interval,
AF_repayment_interval,
SA_repayment_interval, OC_repayment_interval,
nrow=1
)
# Chunk 21: repayment-interval-table
prop.table(table(kiva_loans$repayment_interval))%>%
data.frame()%>%
mutate(Freq=Freq*100)%>%
arrange(desc(Freq))%>%
kable(caption="The most popular type of repayment interval is monthly.",
col.names = c("Repayment interval","Percentage")) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
# Chunk 22: sectors-and-regions
AF_sector <- kiva_loans %>%
filter(region=="Africa")%>%
dplyr::count(sector)%>%
mutate(sector=reorder(sector, n))%>%
ggplot(aes(
x = sector,
y = n,
fill = sector,
color = sector)) +
geom_col(show.legend = FALSE, alpha=0.7) +
labs(title = "Africa",
x = "",
y = "Number of loans") +
theme(axis.text.x = element_text(angle = 45, hjust=1),
axis.ticks.x = element_blank()) +
#guides(fill = guide_legend(title = "Sector")) +
scale_fill_viridis_d()+
scale_color_viridis_d()+
coord_flip(ylim = c(0,80000))
OC_sector <- kiva_loans %>%
filter(region=="Oceania")%>%
dplyr::count(sector)%>%
mutate(sector=reorder(sector, n))%>%
ggplot(aes(
x = sector,
y = n,
fill = sector,
color = sector)) +
geom_col(show.legend = FALSE, alpha=0.7) +
labs(title = "Oceania",
x = "",
y = "Number of loans") +
theme(axis.text.x = element_text(angle = 45, hjust=1),
axis.ticks.x = element_blank()) +
#guides(fill = guide_legend(title = "Sector")) +
scale_fill_viridis_d()+
scale_color_viridis_d()+
coord_flip(ylim = c(0,80000))
AS_sector <- kiva_loans %>%
filter(region=="Asia")%>%
dplyr::count(sector)%>%
mutate(sector=reorder(sector, n))%>%
ggplot(aes(
x = sector,
y = n,
fill = sector,
color = sector)) +
geom_col(show.legend = FALSE, alpha=0.7) +
labs(title = "Asia",
x = "",
y = "Number of loans") +
theme(axis.text.x = element_text(angle = 45, hjust=1),
axis.ticks.x = element_blank()) +
#guides(fill = guide_legend(title = "Sector")) +
scale_fill_viridis_d()+
scale_color_viridis_d()+
coord_flip(ylim = c(0,80000))
SA_sector <- kiva_loans %>%
filter(region=="Americas")%>%
dplyr::count(sector)%>%
mutate(sector=reorder(sector, n))%>%
ggplot(aes(
x = sector,
y = n,
fill = sector,
color = sector)) +
geom_col(show.legend = FALSE, alpha=0.7) +
labs(title = "South America",
x = "",
y = "Number of loans") +
theme(axis.text.x = element_text(angle = 45, hjust=1),
axis.ticks.x = element_blank()) +
#guides(fill = guide_legend(title = "Sector")) +
scale_fill_viridis_d()+
scale_color_viridis_d()+
coord_flip(ylim = c(0,80000))
cowplot::plot_grid(AS_sector,
AF_sector,
SA_sector,
OC_sector,
nrow=1
)
# Chunk 23: sector-table
prop.table(table(kiva_loans$sector))%>%
data.frame()%>%
mutate(Freq=Freq*100)%>%
arrange(desc(Freq))%>%
kable(caption="Generally, the most frequent use of loans is agriculture, followed by food and retail.",
col.names = c("Sector","Percentage")) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
# Chunk 24: region-table
prop.table(table(kiva_loans$region))%>%
data.frame()%>%
mutate(Freq=Freq*100)%>%
arrange(desc(Freq))%>%
kable(format="html",
caption="Half of all Kiva loans are requested in Asia followed by Africa, South America, Oceania and finally the European Union.",
col.names = c("Regions","Percentage")) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
# Chunk 25: countries-plot
country_plot <- kiva_loans %>%
group_by(country_code) %>%
dplyr::count(country_code, sort = TRUE) %>%
ungroup() %>%
top_n(10) %>%
ggplot(aes(reorder(x = country_code, n), y = n)) +
geom_col(position = "dodge",
color = "#84628e",
fill = "#84628e",
alpha=0.6) +
coord_flip() +
theme_minimal() +
labs(title = "Top 10 countries requesting Kiva loans",
x = "",
y = "Number of loans")+
geom_label(aes(label=n))
# Chunk 26: loans per country
#Count all loans per country
loans_per_country <- kiva_loans %>%
group_by(country_code) %>%
dplyr::count(country_code, sort = TRUE) %>%
ungroup()
# Chunk 27: import population
population <- read_csv(here::here("static","data","country_populations.csv"))
iso <- read_csv(here::here("static","data","iso_countries.csv"))
users <- read_csv(here::here("static","data","internet_users.csv"))
# Chunk 28
#Left join country codes with population amounts
population_iso <- left_join(population,iso,by="name")
#population_iso_loans
pop_iso_loans <- left_join(loans_per_country,
population_iso,
by=c("country_code"="iso"))
pop_iso_loans <- pop_iso_loans %>%
select(n,
pop_2018,
country_code,
name)
#Calculate loans per capita
pop_iso_loans$n_per_cap <- pop_iso_loans$n/pop_iso_loans$pop_2018
#Arrange in descending order
pop_iso_loans <- pop_iso_loans %>%
arrange(desc(n_per_cap))
#Remove strange first row
pop_iso_loans <- pop_iso_loans[-1,]
# Chunk 29: countries-plot-capita
pop_plot <- pop_iso_loans %>%
top_n(10) %>%
ggplot(aes(reorder(x = country_code,
n_per_cap),
y = n_per_cap)) +
geom_col(position = "dodge",
color = "#a0d985",
fill = "#a0d985",
alpha=0.6) +
coord_flip() +
theme_minimal() +
labs(title = "Top 10 countries requesting Kiva loans per 1,000 capita",
x = "",
y = "Number of loans per 1,000 capita")+
geom_label(aes(label=round(n_per_cap,
digits = 2)))
# Chunk 30
#Left join country codes with users
users_iso <- left_join(users,iso,by="name")
#users_iso_loans
users_iso_loans <- left_join(loans_per_country,
users_iso,
by=c("country_code"="iso"))
users_iso_loans <- users_iso_loans%>%
select(n,
users,
country_code,
name)
#Calculate loans per users
users_iso_loans$n_per_users <- users_iso_loans$n/users_iso_loans$users*1000
#Arrange in descending order
users_iso_loans <- users_iso_loans %>%
arrange(desc(n_per_users))
# Chunk 31: countries-plot-users
user_plot <- users_iso_loans %>%
top_n(10) %>%
ggplot(aes(reorder(x = country_code, n_per_users), y = n_per_users)) +
geom_col(position = "dodge",
color = "#8283ad",
fill = "#8283ad",
alpha=0.6) +
coord_flip() +
theme_minimal() +
labs(title = "Top 10 countries requesting Kiva loans per 1,000 internet users",
x = "",
y = "Number of loans per 1,000 internet users")+
geom_label(aes(label=round(n_per_users,
digits = 2)))
blogdown::serve_site()
prop.table(table(kiva_loans$region))%>%
data.frame()%>%
mutate(Freq=Freq*100)%>%
arrange(desc(Freq))%>%
kable(format="html",
caption="Half of all Kiva loans are requested in Asia followed by Africa, South America, Oceania and finally the European Union.",
col.names = c("Regions","Percentage")) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = FALSE)
blogdown::serve_site()
